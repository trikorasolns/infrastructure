---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-03-31T20:18:23Z"
    generateName: ovnkube-control-plane-54c68569bc-
    labels:
      app: ovnkube-control-plane
      component: network
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-hash: 54c68569bc
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"766f498c-8a8e-40d9-b296-6d2bc7139289"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"ovnkube-cluster-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovn-control-plane-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:18:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: ovnkube-control-plane-54c68569bc-gwpgm
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ovnkube-control-plane-54c68569bc
      uid: 766f498c-8a8e-40d9-b296-6d2bc7139289
    resourceVersion: "68054"
    uid: 63df0d0d-a0d2-4ec8-92a4-5ce33dc0bab5
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        TLS_PK=/etc/pki/tls/metrics-cert/tls.key
        TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
        # As the secret mount is optional we must wait for the files to be present.
        # The service is created in monitor.yaml and this is created in sdn.yaml.
        TS=$(date +%s)
        WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
        HAS_LOGGED_INFO=0

        log_missing_certs(){
            CUR_TS=$(date +%s)
            if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
              echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
            elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
              echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
              HAS_LOGGED_INFO=1
            fi
        }
        while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
          log_missing_certs
          sleep 5
        done

        echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
        exec /usr/bin/kube-rbac-proxy \
          --logtostderr \
          --secure-listen-address=:9108 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --upstream=http://127.0.0.1:29108/ \
          --tls-private-key-file=${TLS_PK} \
          --tls-cert-file=${TLS_CERT}
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9108
        hostPort: 9108
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg7cg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ovn_v4_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
        fi
        ovn_v6_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
        fi

        ovn_v4_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
        fi
        ovn_v6_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
        exec /usr/bin/ovnkube \
          --enable-interconnect \
          --init-cluster-manager "${K8S_NODE}" \
          --config-file=/run/ovnkube-config/ovnkube.conf \
          --loglevel "${OVN_KUBE_LOG_LEVEL}" \
          --metrics-bind-address "127.0.0.1:29108" \
          --metrics-enable-pprof \
          --metrics-enable-config-duration \
          ${ovn_v4_join_subnet_opt} \
          ${ovn_v6_join_subnet_opt} \
          ${ovn_v4_transit_switch_subnet_opt} \
          ${ovn_v6_transit_switch_subnet_opt}
      env:
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovnkube-cluster-manager
      ports:
      - containerPort: 29108
        hostPort: 29108
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dg7cg
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-control-plane
    serviceAccountName: ovn-kubernetes-control-plane
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-control-plane-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-control-plane-metrics-cert
    - name: kube-api-access-dg7cg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2578ec4087aa58b38fe726f748db5dd5ebebbb6ac5c3646605824ec3a831f43b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:18:23Z"
    - containerID: cri-o://f5eee49fc737c5ef7e723c239850b621a033de00fdaaf90b062e84a3a615e308
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-cluster-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:29Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.13.2.160
    podIPs:
    - ip: 10.13.2.160
    qosClass: Burstable
    startTime: "2025-03-31T20:18:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-03-31T20:18:23Z"
    generateName: ovnkube-control-plane-54c68569bc-
    labels:
      app: ovnkube-control-plane
      component: network
      kubernetes.io/os: linux
      openshift.io/component: network
      pod-template-hash: 54c68569bc
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"766f498c-8a8e-40d9-b296-6d2bc7139289"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"ovnkube-cluster-manager"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29108,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"ovn-control-plane-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:18:23Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.0.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:40:30Z"
    name: ovnkube-control-plane-54c68569bc-jxf9j
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ovnkube-control-plane-54c68569bc
      uid: 766f498c-8a8e-40d9-b296-6d2bc7139289
    resourceVersion: "73116"
    uid: 68334ae0-1878-4df1-b44a-86f5506eee73
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        TLS_PK=/etc/pki/tls/metrics-cert/tls.key
        TLS_CERT=/etc/pki/tls/metrics-cert/tls.crt
        # As the secret mount is optional we must wait for the files to be present.
        # The service is created in monitor.yaml and this is created in sdn.yaml.
        TS=$(date +%s)
        WARN_TS=$(( ${TS} + $(( 20 * 60)) ))
        HAS_LOGGED_INFO=0

        log_missing_certs(){
            CUR_TS=$(date +%s)
            if [[ "${CUR_TS}" -gt "WARN_TS"  ]]; then
              echo $(date -Iseconds) WARN: ovn-control-plane-metrics-cert not mounted after 20 minutes.
            elif [[ "${HAS_LOGGED_INFO}" -eq 0 ]] ; then
              echo $(date -Iseconds) INFO: ovn-control-plane-metrics-cert not mounted. Waiting 20 minutes.
              HAS_LOGGED_INFO=1
            fi
        }
        while [[ ! -f "${TLS_PK}" ||  ! -f "${TLS_CERT}" ]] ; do
          log_missing_certs
          sleep 5
        done

        echo $(date -Iseconds) INFO: ovn-control-plane-metrics-certs mounted, starting kube-rbac-proxy
        exec /usr/bin/kube-rbac-proxy \
          --logtostderr \
          --secure-listen-address=:9108 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --upstream=http://127.0.0.1:29108/ \
          --tls-private-key-file=${TLS_PK} \
          --tls-cert-file=${TLS_CERT}
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9108
        hostPort: 9108
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-control-plane-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9tqvc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        if [[ -f "/env/_master" ]]; then
          set -o allexport
          source "/env/_master"
          set +o allexport
        fi

        ovn_v4_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_join_subnet_opt="--gateway-v4-join-subnet "
        fi
        ovn_v6_join_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_join_subnet_opt="--gateway-v6-join-subnet "
        fi

        ovn_v4_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v4_transit_switch_subnet_opt="--cluster-manager-v4-transit-switch-subnet "
        fi
        ovn_v6_transit_switch_subnet_opt=
        if [[ "" != "" ]]; then
          ovn_v6_transit_switch_subnet_opt="--cluster-manager-v6-transit-switch-subnet "
        fi

        echo "I$(date "+%m%d %H:%M:%S.%N") - ovnkube-control-plane - start ovnkube --init-cluster-manager ${K8S_NODE}"
        exec /usr/bin/ovnkube \
          --enable-interconnect \
          --init-cluster-manager "${K8S_NODE}" \
          --config-file=/run/ovnkube-config/ovnkube.conf \
          --loglevel "${OVN_KUBE_LOG_LEVEL}" \
          --metrics-bind-address "127.0.0.1:29108" \
          --metrics-enable-pprof \
          --metrics-enable-config-duration \
          ${ovn_v4_join_subnet_opt} \
          ${ovn_v6_join_subnet_opt} \
          ${ovn_v4_transit_switch_subnet_opt} \
          ${ovn_v6_transit_switch_subnet_opt}
      env:
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovnkube-cluster-manager
      ports:
      - containerPort: 29108
        hostPort: 29108
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9tqvc
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-control-plane
    serviceAccountName: ovn-kubernetes-control-plane
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: node-role.kubernetes.io/master
      operator: Exists
    - key: node.kubernetes.io/not-ready
      operator: Exists
    - key: node.kubernetes.io/unreachable
      operator: Exists
    - key: node.kubernetes.io/network-unavailable
      operator: Exists
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-control-plane-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-control-plane-metrics-cert
    - name: kube-api-access-9tqvc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:40:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:40:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://85bcd64487bd71527a2952f110395ef7c74152bfbdb6c5ae3f2bedb2913584cf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:18:23Z"
    - containerID: cri-o://150dce57a09b87e33207a511f0de748a1ab5f7ceb720c8ab6c04f24dc96a4510
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState:
        terminated:
          containerID: cri-o://856d8f3a2579c2f990c7a8131b0cf2e92d9fce9f59baf65f5a9e72111745729c
          exitCode: 0
          finishedAt: "2025-03-31T20:40:17Z"
          reason: Completed
          startedAt: "2025-03-31T20:32:32Z"
      name: ovnkube-cluster-manager
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:40:30Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.13.0.150
    podIPs:
    - ip: 10.13.0.150
    qosClass: Burstable
    startTime: "2025-03-31T20:18:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-03-31T20:21:34Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 6ccc6fb94c
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:21:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:05Z"
    name: ovnkube-node-2fv96
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 056de207-82c1-456a-824b-2fd8c20eeae0
    resourceVersion: "67998"
    uid: eed682ab-ceee-4195-83ba-0184382e5d5e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-160
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ovhcpococp.trikorasolutions.net:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5lp7k
        readOnly: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-5lp7k
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c716916b0df507db9ecf42743e72c1067e59f6454bbea37710c32a9e237cd54e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:35Z"
    - containerID: cri-o://989fc57ab7c96723543083e4b308eb87b9ed9934301d461bcb48aa0d7de2706d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:35Z"
    - containerID: cri-o://05736318e6ca6966aebffd794ddb3a5d060b5bbc5f348d1d55cabc968f678f26
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:35Z"
    - containerID: cri-o://9e6792f702a7ea6df24905f16741464d8fe468ffdce9c2448031269dfb679f72
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:35Z"
    - containerID: cri-o://2e4f7de72673b27d0a283e448405d34c6707f4e1cb2d8b9b9d055c507c325269
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:35Z"
    - containerID: cri-o://2c5d91e1e56249fa56542d110c011920ab9e7e6d1a568ef8e80752acafaabe2f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:35Z"
    - containerID: cri-o://f8bdfbe390983b930c3bdb3db86c116c0d62441bd2d042798351b14d7125ab87
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:40Z"
    - containerID: cri-o://32e585fd1c190cd0072bccab671c7524e5ef46c8c321d43e182b31783398393e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:37Z"
    hostIP: 10.13.2.160
    initContainerStatuses:
    - containerID: cri-o://35359bc9a46c29a7f633d261c4c626c2f3001885001438a3f21f742a8c210158
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://35359bc9a46c29a7f633d261c4c626c2f3001885001438a3f21f742a8c210158
          exitCode: 0
          finishedAt: "2025-03-31T20:21:34Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:34Z"
    phase: Running
    podIP: 10.13.2.160
    podIPs:
    - ip: 10.13.2.160
    qosClass: Burstable
    startTime: "2025-03-31T20:21:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-03-31T20:21:35Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 6ccc6fb94c
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:21:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: ovnkube-node-bnfvq
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 056de207-82c1-456a-824b-2fd8c20eeae0
    resourceVersion: "67794"
    uid: 6a5eb16e-20c4-44a9-bdae-ed6ee6769aef
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-89
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ovhcpococp.trikorasolutions.net:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-h2wgj
        readOnly: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-h2wgj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:56Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:56Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7b67b55bfd33194f97bd4073a2f5f7d79ba6510cebef443fb75a9b61ec194f58
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://8ece457dec51cb5201d47dc48221c979f41e3c49721a14cb0ea5f5b25d35f34c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://bd66115c59585bdf850fa9861fc5757c7deb85c68db603f05ccd459190a26a80
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:37Z"
    - containerID: cri-o://21b6ac9476ccdea5f6e8208bfc97fe55ff2d769fef207d0e095a206bb7f64594
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:37Z"
    - containerID: cri-o://71a076a12d3d9601789d94a504304fd80d36bc465f0802d7fa3fd52f9867e607
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://884afc48c2e332eb89572ee99e1a8eb9444a6e0bc1a24f338b51e2e20fee85ef
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://8fa8e02f6be302ab63d9f2925aa31145d28d170df70c22db7881a7b02190a9cc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:41Z"
    - containerID: cri-o://7bc140538ebd1328d1231a62ad5ebc9263f4c166791c719f806c1437d58abb4e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:39Z"
    hostIP: 10.13.2.89
    initContainerStatuses:
    - containerID: cri-o://983a451a372fc2bef8b1a34d252f1014f6f037083c7496130dc8e4ab634a10c9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://983a451a372fc2bef8b1a34d252f1014f6f037083c7496130dc8e4ab634a10c9
          exitCode: 0
          finishedAt: "2025-03-31T20:21:36Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:36Z"
    phase: Running
    podIP: 10.13.2.89
    podIPs:
    - ip: 10.13.2.89
    qosClass: Burstable
    startTime: "2025-03-31T20:21:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-04-01T08:33:00Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 6ccc6fb94c
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:54Z"
    name: ovnkube-node-crpn4
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 056de207-82c1-456a-824b-2fd8c20eeae0
    resourceVersion: "259695"
    uid: 57d1bcda-9347-4da1-92c2-8022998d5bc1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-1
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ovhcpococp.trikorasolutions.net:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fr57q
        readOnly: true
    nodeName: host-10-13-2-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-fr57q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a62af869c9f560435927c9d5567cb98bf5a4cb14d2ed55f03b529138dfaa5f8f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:40Z"
    - containerID: cri-o://b32a21ecbb0f6a96a38de51bc20b0048f69fa0e64cb7e7240e5be20dc2f3f5af
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:40Z"
    - containerID: cri-o://e88816ec2694676498cea64de5e705cc71177f296b992336da193b4a33715cc9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:41Z"
    - containerID: cri-o://bf1cdfa3f641a34c18edaa4e75c8b80c3a1ca914160f24abbca64cba6ccee367
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:41Z"
    - containerID: cri-o://d3f6cc7db3d0e569b64ada3b30d5528088837565a637bfc56e6801f96d13065d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:40Z"
    - containerID: cri-o://2475d058a8195ce8200b14cfce40ade67f4be953963d68a4f7c5d0817f01d5fc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:40Z"
    - containerID: cri-o://4d0babf6d36de4a114647c1cc1c58e19afe86b669238597a83333cb4364e8a9c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:45Z"
    - containerID: cri-o://5d4d88920e64e3877bf6921ab24fc452c60f14ae1b0bd269247997843ac2178f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:43Z"
    hostIP: 10.13.2.1
    initContainerStatuses:
    - containerID: cri-o://b7241db45d361a79f105fcd876adae4031da0a1c235533458fb0cc1688497386
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b7241db45d361a79f105fcd876adae4031da0a1c235533458fb0cc1688497386
          exitCode: 0
          finishedAt: "2025-04-01T08:34:40Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:40Z"
    phase: Running
    podIP: 10.13.2.1
    podIPs:
    - ip: 10.13.2.1
    qosClass: Burstable
    startTime: "2025-04-01T08:33:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-04-01T08:27:24Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 6ccc6fb94c
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:27:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:28:57Z"
    name: ovnkube-node-czhrl
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 056de207-82c1-456a-824b-2fd8c20eeae0
    resourceVersion: "257369"
    uid: 49ee4a2f-15c6-469f-b6e8-7d6f239bcd63
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-78
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ovhcpococp.trikorasolutions.net:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mwvxg
        readOnly: true
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-mwvxg
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://78bafaa1a71374f5df62e7631f06d4f0f7873b91f774ceefe4e12d87d2e181ed
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://5273fe02f0f473eb4fa4cc2b102bfab38125d54e9d3363966e220c5a9309e90f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://b290287d1454066c3accc7b23622911686bf19f16862d8938fdafe598b764153
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://9643d8d55f14222e78e6980dfb67223a83bb16b1dbdc4ffab26a26ce1a2189cf
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://20df86e6e2a37fcbb435f0a22563e5d518d775f92f482273d4039bdc98c329ff
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://7022fdf35694944d0ca1ecedf4244745617b16f9995edc77500de5d325dbbab5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://c14cb8a5ab464c2c70a8c3d5ef85380f6db629de70100cb7bb64b3480ae58649
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:45Z"
    - containerID: cri-o://ee3b4d7f111180a9a4ce78fca75933bc08fba1e5a7ed73e1217bf2db5790d4ac
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:43Z"
    hostIP: 10.13.3.78
    initContainerStatuses:
    - containerID: cri-o://7c19c23fb8601dfc9f411cddb971c3e370b5cb8d015396d81045e091cfb2543a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7c19c23fb8601dfc9f411cddb971c3e370b5cb8d015396d81045e091cfb2543a
          exitCode: 0
          finishedAt: "2025-04-01T08:28:39Z"
          reason: Completed
          startedAt: "2025-04-01T08:28:39Z"
    phase: Running
    podIP: 10.13.3.78
    podIPs:
    - ip: 10.13.3.78
    qosClass: Burstable
    startTime: "2025-04-01T08:27:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-03-31T20:21:34Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 6ccc6fb94c
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:21:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.0.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: ovnkube-node-jks98
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 056de207-82c1-456a-824b-2fd8c20eeae0
    resourceVersion: "68136"
    uid: 4d2366b3-9a1c-4436-8118-04e096167943
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-0-150
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ovhcpococp.trikorasolutions.net:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-72khc
        readOnly: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-72khc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://2928b2f0bd5d2395470534d99dbaf07796e6cf2cd1a9f6e3a9647f8400c286eb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://58c415bad4f5ccc02a4e1d6ced2059c7f2ca738c391c44613dfbe8274ca4afb7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://b2f16d5e27333029267ff83adff692b7ca00ea818c55e519457f22ba95aeebf1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://15f5f7730499e66d36403bfc47d2a4751e528138fd143de40907ba3583fa2442
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://599c1878036448d5e64100f837e91d24ffdc88a23e2fdcaf2356c9179b39b5ab
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://7687a92c9e7cccbfaba4f184a2a6003eb8c97e89e188947ab16e5a7710b2de81
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:36Z"
    - containerID: cri-o://12d1de070d8770926cd4975633ea3b5d24abd0de813d18f738224d751f6d1cc4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:40Z"
    - containerID: cri-o://c35db25874d0d5d1f6467d8f37c4a6dbc64bb4c3121d56bcfa59bcebf1015ab9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:38Z"
    hostIP: 10.13.0.150
    initContainerStatuses:
    - containerID: cri-o://b12db9cdb3eddf39e79fda63ff7f5f1fe4b3253ba8e587c43bb1b840cff4caac
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b12db9cdb3eddf39e79fda63ff7f5f1fe4b3253ba8e587c43bb1b840cff4caac
          exitCode: 0
          finishedAt: "2025-03-31T20:21:35Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:35Z"
    phase: Running
    podIP: 10.13.0.150
    podIPs:
    - ip: 10.13.0.150
    qosClass: Burstable
    startTime: "2025-03-31T20:21:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
      networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
      networkoperator.openshift.io/hybrid-overlay-status: disabled
      networkoperator.openshift.io/ip-family-mode: single-stack
    creationTimestamp: "2025-04-01T08:32:57Z"
    generateName: ovnkube-node-
    labels:
      app: ovnkube-node
      component: network
      controller-revision-hash: 6ccc6fb94c
      kubernetes.io/os: linux
      openshift.io/component: network
      ovn-db-pod: "true"
      pod-template-generation: "2"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
            f:networkoperator.openshift.io/cluster-network-cidr: {}
            f:networkoperator.openshift.io/hybrid-overlay-status: {}
            f:networkoperator.openshift.io/ip-family-mode: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:kubernetes.io/os: {}
            f:openshift.io/component: {}
            f:ovn-db-pod: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-node"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9103,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-ovn-metrics"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"nbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"northd"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-acl-logging"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovn-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/dev/log"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"ovnkube-controller"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:preStop:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":29105,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/cni-bin-dir"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/systemd/system"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn-kubernetes/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovnkube-config/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/lib/openvswitch"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovnkube/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"sbdb"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"OVN_LOG_LEVEL"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:lifecycle:
                .: {}
                f:postStart:
                  .: {}
                  f:exec:
                    .: {}
                    f:command: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/env"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/ovnkube-lib"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/ovn"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"kubecfg-setup"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/ovn/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"env-overrides"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"etc-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-cni-netd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-slash"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"log-socket"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"node-log"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"ovn-node-metrics-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"ovnkube-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"ovnkube-script-lib"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"run-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run-ovn"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"systemd-units"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-openvswitch"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:32:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:35:06Z"
    name: ovnkube-node-twdpb
    namespace: openshift-ovn-kubernetes
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ovnkube-node
      uid: 056de207-82c1-456a-824b-2fd8c20eeae0
    resourceVersion: "259850"
    uid: 6e1ea4c9-4d38-401d-a64e-02299b900cbd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-120
    containers:
    - command:
      - /bin/bash
      - -c
      - |
        set -e
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovn-controller ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-controller
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /dev/log
        name: log-socket
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-audit-log-rotation
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: ovn-acl-logging
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/log/ovn/
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-node
      ports:
      - containerPort: 9103
        hostPort: 9103
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        #!/bin/bash
        set -euo pipefail
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-ovn-metrics
      ports:
      - containerPort: 9105
        hostPort: 9105
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/pki/tls/metrics-cert
        name: ovn-node-metrics-cert
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-ovn-northd TERM INT
        start-ovn-northd "${OVN_LOG_LEVEL}"
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: northd
      resources:
        requests:
          cpu: 10m
          memory: 70Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-nbdb TERM INT
        start-nbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              nbdb-post-start 10000
      name: nbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "nb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xem
        if [[ -f /env/_master ]]; then
          set -o allexport
          source /env/_master
          set +o allexport
        fi
        . /ovnkube-lib/ovnkube-lib.sh || exit 1

        trap quit-sbdb TERM INT
        start-sbdb ${OVN_LOG_LEVEL}
      env:
      - name: OVN_LOG_LEVEL
        value: info
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        postStart:
          exec:
            command:
            - /bin/bash
            - -c
            - |
              set -x
              . /ovnkube-lib/ovnkube-lib.sh || exit 1
              sbdb-post-start
      name: sbdb
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -xeo pipefail
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            ovndb-readiness-probe "sb"
        failureThreshold: 3
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      resources:
        requests:
          cpu: 10m
          memory: 300Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /var/log/ovn
        name: node-log
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - |
        set -xe
        . /ovnkube-lib/ovnkube-lib.sh || exit 1
        start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: OVN_CONTROLLER_INACTIVITY_PROBE
        value: "180000"
      - name: OVN_KUBE_LOG_LEVEL
        value: "4"
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      lifecycle:
        preStop:
          exec:
            command:
            - rm
            - -f
            - /etc/cni/net.d/10-ovn-kubernetes.conf
      name: ovnkube-controller
      ports:
      - containerPort: 29105
        hostPort: 29105
        name: ovnmetrics-port
        protocol: TCP
      readinessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            #!/bin/bash
            test -f /etc/cni/net.d/10-ovn-kubernetes.conf
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 10m
          memory: 600Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /ovnkube-lib
        name: ovnkube-script-lib
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-kubelet
        readOnly: true
      - mountPath: /etc/systemd/system
        name: systemd-units
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host-slash
        readOnly: true
      - mountPath: /run/ovn-kubernetes/
        name: host-run-ovn-kubernetes
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
        readOnly: true
      - mountPath: /cni-bin-dir
        name: host-cni-bin
      - mountPath: /etc/cni/net.d
        name: host-cni-netd
      - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
        name: host-var-lib-cni-networks-ovn-kubernetes
      - mountPath: /run/openvswitch
        name: run-openvswitch
      - mountPath: /var/log/ovnkube/
        name: etc-openvswitch
      - mountPath: /run/ovn/
        name: run-ovn
      - mountPath: /etc/openvswitch
        name: etc-openvswitch
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/lib/openvswitch
        name: var-lib-openvswitch
      - mountPath: /run/ovnkube-config/
        name: ovnkube-config
      - mountPath: /env
        name: env-overrides
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/bash
      - -c
      - |
        cat << EOF > /etc/ovn/kubeconfig
        apiVersion: v1
        clusters:
          - cluster:
              certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
              server: https://api-int.ovhcpococp.trikorasolutions.net:6443
            name: default-cluster
        contexts:
          - context:
              cluster: default-cluster
              namespace: default
              user: default-auth
            name: default-context
        current-context: default-context
        kind: Config
        preferences: {}
        users:
          - name: default-auth
            user:
              client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
              client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
        EOF
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imagePullPolicy: IfNotPresent
      name: kubecfg-setup
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/ovn/
        name: etc-openvswitch
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p2fn2
        readOnly: true
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ovn-kubernetes-node
    serviceAccountName: ovn-kubernetes-node
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-kubelet
    - hostPath:
        path: /etc/systemd/system
        type: ""
      name: systemd-units
    - hostPath:
        path: /
        type: ""
      name: host-slash
    - hostPath:
        path: /run/netns
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/openvswitch/data
        type: ""
      name: var-lib-openvswitch
    - hostPath:
        path: /var/lib/ovn-ic/etc
        type: ""
      name: etc-openvswitch
    - hostPath:
        path: /var/run/openvswitch
        type: ""
      name: run-openvswitch
    - hostPath:
        path: /var/run/ovn-ic
        type: ""
      name: run-ovn
    - hostPath:
        path: /var/log/ovn
        type: ""
      name: node-log
    - hostPath:
        path: /dev/log
        type: ""
      name: log-socket
    - hostPath:
        path: /run/ovn-kubernetes
        type: ""
      name: host-run-ovn-kubernetes
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-cni-bin
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: host-cni-netd
    - hostPath:
        path: /var/lib/cni/networks/ovn-k8s-cni-overlay
        type: ""
      name: host-var-lib-cni-networks-ovn-kubernetes
    - configMap:
        defaultMode: 420
        name: ovnkube-config
      name: ovnkube-config
    - configMap:
        defaultMode: 420
        name: env-overrides
        optional: true
      name: env-overrides
    - name: ovn-node-metrics-cert
      secret:
        defaultMode: 420
        optional: true
        secretName: ovn-node-metrics-cert
    - configMap:
        defaultMode: 484
        name: ovnkube-script-lib
      name: ovnkube-script-lib
    - name: kube-api-access-p2fn2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:11Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1f53d6886002b39557a9f4695a9c4f5d4bd519c9ac6aa075af394d1b4feebe7f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-node
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:11Z"
    - containerID: cri-o://692535bf66224278e4f2cfe5f376ba02458286899804d8c2ef1ebd8e5d933f8b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-ovn-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:11Z"
    - containerID: cri-o://b6da15bab38c9cc6eab1881d3b0f321531ff36c881160cb55b1e1cb2ae13fba8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: nbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:11Z"
    - containerID: cri-o://828bc2f66f3b0f4e35347b130b2a721f43967b0710f97847943717f75fd89d4a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: northd
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:11Z"
    - containerID: cri-o://d2cfaf91684d4342dbcda18e0fdce190594fa4359612ae3fa2984d40cd8cbbb9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-acl-logging
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:11Z"
    - containerID: cri-o://48fc546b10f439ff022a0d91b35544c898269d1176e4e86db3eb10351c0a1465
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovn-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:11Z"
    - containerID: cri-o://f6d9fd5e6bf7eeac48e4bbd84f001118d4fab2237a9e4a6e6ecf4e2b2bc4bc60
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: ovnkube-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:15Z"
    - containerID: cri-o://32eaa61ed172a73906cd8a18615221e40a14d4590c2607d6f4ee31afc4e54f15
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: sbdb
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:13Z"
    hostIP: 10.13.3.120
    initContainerStatuses:
    - containerID: cri-o://d2880e8593fd323cbc52c7fffd6ab2fad8eec6090b56124a98707c581bc53877
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
      lastState: {}
      name: kubecfg-setup
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d2880e8593fd323cbc52c7fffd6ab2fad8eec6090b56124a98707c581bc53877
          exitCode: 0
          finishedAt: "2025-04-01T08:34:10Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:10Z"
    phase: Running
    podIP: 10.13.3.120
    podIPs:
    - ip: 10.13.3.120
    qosClass: Burstable
    startTime: "2025-04-01T08:33:06Z"
kind: PodList
metadata:
  resourceVersion: "718316"
