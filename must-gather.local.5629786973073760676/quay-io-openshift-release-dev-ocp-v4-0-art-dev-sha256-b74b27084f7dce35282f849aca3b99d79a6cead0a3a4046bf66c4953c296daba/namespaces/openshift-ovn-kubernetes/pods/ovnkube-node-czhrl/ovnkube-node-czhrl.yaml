---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    network.operator.openshift.io/ovnkube-script-lib-hash: bf89959c3b349707edc56a4886a7488a5768002c
    networkoperator.openshift.io/cluster-network-cidr: 10.128.0.0/14
    networkoperator.openshift.io/hybrid-overlay-status: disabled
    networkoperator.openshift.io/ip-family-mode: single-stack
  creationTimestamp: "2025-04-01T08:27:24Z"
  generateName: ovnkube-node-
  labels:
    app: ovnkube-node
    component: network
    controller-revision-hash: 6ccc6fb94c
    kubernetes.io/os: linux
    openshift.io/component: network
    ovn-db-pod: "true"
    pod-template-generation: "2"
    type: infra
  managedFields:
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:network.operator.openshift.io/ovnkube-script-lib-hash: {}
          f:networkoperator.openshift.io/cluster-network-cidr: {}
          f:networkoperator.openshift.io/hybrid-overlay-status: {}
          f:networkoperator.openshift.io/ip-family-mode: {}
          f:target.workload.openshift.io/management: {}
        f:generateName: {}
        f:labels:
          .: {}
          f:app: {}
          f:component: {}
          f:controller-revision-hash: {}
          f:kubernetes.io/os: {}
          f:openshift.io/component: {}
          f:ovn-db-pod: {}
          f:pod-template-generation: {}
          f:type: {}
        f:ownerReferences:
          .: {}
          k:{"uid":"056de207-82c1-456a-824b-2fd8c20eeae0"}: {}
      f:spec:
        f:affinity:
          .: {}
          f:nodeAffinity:
            .: {}
            f:requiredDuringSchedulingIgnoredDuringExecution: {}
        f:containers:
          k:{"name":"kube-rbac-proxy-node"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9103,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"kube-rbac-proxy-ovn-metrics"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":9105,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/pki/tls/metrics-cert"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"nbdb"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"K8S_NODE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"OVN_LOG_LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:postStart:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:name: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/env"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/ovn"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"northd"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"OVN_LOG_LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/env"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/ovn"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/ovn"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"ovn-acl-logging"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"ovn-controller"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"K8S_NODE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"OVN_LOG_LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/dev/log"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/env"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/openvswitch"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/openvswitch"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/lib/openvswitch"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"ovnkube-controller"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"K8S_NODE"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
              k:{"name":"KUBERNETES_SERVICE_HOST"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"KUBERNETES_SERVICE_PORT"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OVN_CONTROLLER_INACTIVITY_PROBE"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"OVN_KUBE_LOG_LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
              k:{"name":"POD_NAME"}:
                .: {}
                f:name: {}
                f:valueFrom:
                  .: {}
                  f:fieldRef: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:preStop:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:name: {}
            f:ports:
              .: {}
              k:{"containerPort":29105,"protocol":"TCP"}:
                .: {}
                f:containerPort: {}
                f:hostPort: {}
                f:name: {}
                f:protocol: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:securityContext:
              .: {}
              f:privileged: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/cni-bin-dir"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/env"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/cni/net.d"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/openvswitch"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/systemd/system"}:
                .: {}
                f:mountPath: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/host"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/netns"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/run/openvswitch"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn-kubernetes/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovnkube-config/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/lib/cni/networks/ovn-k8s-cni-overlay"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/lib/kubelet"}:
                .: {}
                f:mountPath: {}
                f:mountPropagation: {}
                f:name: {}
                f:readOnly: {}
              k:{"mountPath":"/var/lib/openvswitch"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/ovnkube/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
          k:{"name":"sbdb"}:
            .: {}
            f:command: {}
            f:env:
              .: {}
              k:{"name":"OVN_LOG_LEVEL"}:
                .: {}
                f:name: {}
                f:value: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:lifecycle:
              .: {}
              f:postStart:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
            f:name: {}
            f:readinessProbe:
              .: {}
              f:exec:
                .: {}
                f:command: {}
              f:failureThreshold: {}
              f:initialDelaySeconds: {}
              f:periodSeconds: {}
              f:successThreshold: {}
              f:timeoutSeconds: {}
            f:resources:
              .: {}
              f:requests:
                .: {}
                f:cpu: {}
                f:memory: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/env"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/etc/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/ovnkube-lib"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/run/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
              k:{"mountPath":"/var/log/ovn"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:dnsPolicy: {}
        f:enableServiceLinks: {}
        f:hostNetwork: {}
        f:hostPID: {}
        f:initContainers:
          .: {}
          k:{"name":"kubecfg-setup"}:
            .: {}
            f:command: {}
            f:image: {}
            f:imagePullPolicy: {}
            f:name: {}
            f:resources: {}
            f:terminationMessagePath: {}
            f:terminationMessagePolicy: {}
            f:volumeMounts:
              .: {}
              k:{"mountPath":"/etc/ovn/"}:
                .: {}
                f:mountPath: {}
                f:name: {}
        f:nodeSelector: {}
        f:priorityClassName: {}
        f:restartPolicy: {}
        f:schedulerName: {}
        f:securityContext: {}
        f:serviceAccount: {}
        f:serviceAccountName: {}
        f:terminationGracePeriodSeconds: {}
        f:tolerations: {}
        f:volumes:
          .: {}
          k:{"name":"env-overrides"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
              f:optional: {}
            f:name: {}
          k:{"name":"etc-openvswitch"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-cni-bin"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-cni-netd"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-kubelet"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-run-netns"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-run-ovn-kubernetes"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-slash"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"host-var-lib-cni-networks-ovn-kubernetes"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"log-socket"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"node-log"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"ovn-node-metrics-cert"}:
            .: {}
            f:name: {}
            f:secret:
              .: {}
              f:defaultMode: {}
              f:optional: {}
              f:secretName: {}
          k:{"name":"ovnkube-config"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"ovnkube-script-lib"}:
            .: {}
            f:configMap:
              .: {}
              f:defaultMode: {}
              f:name: {}
            f:name: {}
          k:{"name":"run-openvswitch"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"run-ovn"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"systemd-units"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
          k:{"name":"var-lib-openvswitch"}:
            .: {}
            f:hostPath:
              .: {}
              f:path: {}
              f:type: {}
            f:name: {}
    manager: kube-controller-manager
    operation: Update
    time: "2025-04-01T08:27:24Z"
  - apiVersion: v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:conditions:
          k:{"type":"ContainersReady"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Initialized"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
          k:{"type":"Ready"}:
            .: {}
            f:lastProbeTime: {}
            f:lastTransitionTime: {}
            f:status: {}
            f:type: {}
        f:containerStatuses: {}
        f:hostIP: {}
        f:initContainerStatuses: {}
        f:phase: {}
        f:podIP: {}
        f:podIPs:
          .: {}
          k:{"ip":"10.13.3.78"}:
            .: {}
            f:ip: {}
        f:startTime: {}
    manager: kubelet
    operation: Update
    subresource: status
    time: "2025-04-01T08:28:57Z"
  name: ovnkube-node-czhrl
  namespace: openshift-ovn-kubernetes
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: DaemonSet
    name: ovnkube-node
    uid: 056de207-82c1-456a-824b-2fd8c20eeae0
  resourceVersion: "257369"
  uid: 49ee4a2f-15c6-469f-b6e8-7d6f239bcd63
spec:
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
        - matchFields:
          - key: metadata.name
            operator: In
            values:
            - host-10-13-3-78
  containers:
  - command:
    - /bin/bash
    - -c
    - |
      set -e
      . /ovnkube-lib/ovnkube-lib.sh || exit 1
      start-ovn-controller ${OVN_LOG_LEVEL}
    env:
    - name: OVN_LOG_LEVEL
      value: info
    - name: K8S_NODE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    name: ovn-controller
    resources:
      requests:
        cpu: 10m
        memory: 300Mi
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /run/openvswitch
      name: run-openvswitch
    - mountPath: /run/ovn/
      name: run-ovn
    - mountPath: /etc/openvswitch
      name: etc-openvswitch
    - mountPath: /etc/ovn/
      name: etc-openvswitch
    - mountPath: /var/lib/openvswitch
      name: var-lib-openvswitch
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/log/ovn/
      name: node-log
    - mountPath: /dev/log
      name: log-socket
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      set -euo pipefail
      . /ovnkube-lib/ovnkube-lib.sh || exit 1
      start-audit-log-rotation
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    name: ovn-acl-logging
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /var/log/ovn/
      name: node-log
    - mountPath: /run/ovn/
      name: run-ovn
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      set -euo pipefail
      . /ovnkube-lib/ovnkube-lib.sh || exit 1
      start-rbac-proxy-node ovn-node-metrics 9103 29103 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy-node
    ports:
    - containerPort: 9103
      hostPort: 9103
      name: https
      protocol: TCP
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /etc/pki/tls/metrics-cert
      name: ovn-node-metrics-cert
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      #!/bin/bash
      set -euo pipefail
      . /ovnkube-lib/ovnkube-lib.sh || exit 1
      start-rbac-proxy-node ovn-metrics 9105 29105 /etc/pki/tls/metrics-cert/tls.key /etc/pki/tls/metrics-cert/tls.crt
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
    imagePullPolicy: IfNotPresent
    name: kube-rbac-proxy-ovn-metrics
    ports:
    - containerPort: 9105
      hostPort: 9105
      name: https
      protocol: TCP
    resources:
      requests:
        cpu: 10m
        memory: 20Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /etc/pki/tls/metrics-cert
      name: ovn-node-metrics-cert
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      set -xem
      if [[ -f /env/_master ]]; then
        set -o allexport
        source /env/_master
        set +o allexport
      fi
      . /ovnkube-lib/ovnkube-lib.sh || exit 1

      trap quit-ovn-northd TERM INT
      start-ovn-northd "${OVN_LOG_LEVEL}"
    env:
    - name: OVN_LOG_LEVEL
      value: info
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    name: northd
    resources:
      requests:
        cpu: 10m
        memory: 70Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /etc/ovn
      name: etc-openvswitch
    - mountPath: /var/log/ovn
      name: node-log
    - mountPath: /run/ovn/
      name: run-ovn
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      set -xem
      if [[ -f /env/_master ]]; then
        set -o allexport
        source /env/_master
        set +o allexport
      fi
      . /ovnkube-lib/ovnkube-lib.sh || exit 1

      trap quit-nbdb TERM INT
      start-nbdb ${OVN_LOG_LEVEL}
    env:
    - name: OVN_LOG_LEVEL
      value: info
    - name: K8S_NODE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    lifecycle:
      postStart:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -x
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            nbdb-post-start 10000
    name: nbdb
    readinessProbe:
      exec:
        command:
        - /bin/bash
        - -c
        - |
          set -xeo pipefail
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          ovndb-readiness-probe "nb"
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      requests:
        cpu: 10m
        memory: 300Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /etc/ovn/
      name: etc-openvswitch
    - mountPath: /var/log/ovn
      name: node-log
    - mountPath: /run/ovn/
      name: run-ovn
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      set -xem
      if [[ -f /env/_master ]]; then
        set -o allexport
        source /env/_master
        set +o allexport
      fi
      . /ovnkube-lib/ovnkube-lib.sh || exit 1

      trap quit-sbdb TERM INT
      start-sbdb ${OVN_LOG_LEVEL}
    env:
    - name: OVN_LOG_LEVEL
      value: info
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    lifecycle:
      postStart:
        exec:
          command:
          - /bin/bash
          - -c
          - |
            set -x
            . /ovnkube-lib/ovnkube-lib.sh || exit 1
            sbdb-post-start
    name: sbdb
    readinessProbe:
      exec:
        command:
        - /bin/bash
        - -c
        - |
          set -xeo pipefail
          . /ovnkube-lib/ovnkube-lib.sh || exit 1
          ovndb-readiness-probe "sb"
      failureThreshold: 3
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 5
    resources:
      requests:
        cpu: 10m
        memory: 300Mi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /etc/ovn/
      name: etc-openvswitch
    - mountPath: /run/ovn/
      name: run-ovn
    - mountPath: /var/log/ovn
      name: node-log
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  - command:
    - /bin/bash
    - -c
    - |
      set -xe
      . /ovnkube-lib/ovnkube-lib.sh || exit 1
      start-ovnkube-node ${OVN_KUBE_LOG_LEVEL} 29103 29105
    env:
    - name: KUBERNETES_SERVICE_PORT
      value: "6443"
    - name: KUBERNETES_SERVICE_HOST
      value: api-int.ovhcpococp.trikorasolutions.net
    - name: OVN_CONTROLLER_INACTIVITY_PROBE
      value: "180000"
    - name: OVN_KUBE_LOG_LEVEL
      value: "4"
    - name: K8S_NODE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - rm
          - -f
          - /etc/cni/net.d/10-ovn-kubernetes.conf
    name: ovnkube-controller
    ports:
    - containerPort: 29105
      hostPort: 29105
      name: ovnmetrics-port
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - /bin/bash
        - -c
        - |
          #!/bin/bash
          test -f /etc/cni/net.d/10-ovn-kubernetes.conf
      failureThreshold: 3
      initialDelaySeconds: 5
      periodSeconds: 30
      successThreshold: 1
      timeoutSeconds: 1
    resources:
      requests:
        cpu: 10m
        memory: 600Mi
    securityContext:
      privileged: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: FallbackToLogsOnError
    volumeMounts:
    - mountPath: /ovnkube-lib
      name: ovnkube-script-lib
    - mountPath: /var/lib/kubelet
      mountPropagation: HostToContainer
      name: host-kubelet
      readOnly: true
    - mountPath: /etc/systemd/system
      name: systemd-units
      readOnly: true
    - mountPath: /host
      mountPropagation: HostToContainer
      name: host-slash
      readOnly: true
    - mountPath: /run/ovn-kubernetes/
      name: host-run-ovn-kubernetes
    - mountPath: /run/netns
      mountPropagation: HostToContainer
      name: host-run-netns
      readOnly: true
    - mountPath: /cni-bin-dir
      name: host-cni-bin
    - mountPath: /etc/cni/net.d
      name: host-cni-netd
    - mountPath: /var/lib/cni/networks/ovn-k8s-cni-overlay
      name: host-var-lib-cni-networks-ovn-kubernetes
    - mountPath: /run/openvswitch
      name: run-openvswitch
    - mountPath: /var/log/ovnkube/
      name: etc-openvswitch
    - mountPath: /run/ovn/
      name: run-ovn
    - mountPath: /etc/openvswitch
      name: etc-openvswitch
    - mountPath: /etc/ovn/
      name: etc-openvswitch
    - mountPath: /var/lib/openvswitch
      name: var-lib-openvswitch
    - mountPath: /run/ovnkube-config/
      name: ovnkube-config
    - mountPath: /env
      name: env-overrides
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  dnsPolicy: Default
  enableServiceLinks: true
  hostNetwork: true
  hostPID: true
  initContainers:
  - command:
    - /bin/bash
    - -c
    - |
      cat << EOF > /etc/ovn/kubeconfig
      apiVersion: v1
      clusters:
        - cluster:
            certificate-authority: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            server: https://api-int.ovhcpococp.trikorasolutions.net:6443
          name: default-cluster
      contexts:
        - context:
            cluster: default-cluster
            namespace: default
            user: default-auth
          name: default-context
      current-context: default-context
      kind: Config
      preferences: {}
      users:
        - name: default-auth
          user:
            client-certificate: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
            client-key: /etc/ovn/ovnkube-node-certs/ovnkube-client-current.pem
      EOF
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imagePullPolicy: IfNotPresent
    name: kubecfg-setup
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /etc/ovn/
      name: etc-openvswitch
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-mwvxg
      readOnly: true
  nodeName: host-10-13-3-78
  nodeSelector:
    kubernetes.io/os: linux
  preemptionPolicy: PreemptLowerPriority
  priority: 2000001000
  priorityClassName: system-node-critical
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: ovn-kubernetes-node
  serviceAccountName: ovn-kubernetes-node
  terminationGracePeriodSeconds: 30
  tolerations:
  - operator: Exists
  volumes:
  - hostPath:
      path: /var/lib/kubelet
      type: ""
    name: host-kubelet
  - hostPath:
      path: /etc/systemd/system
      type: ""
    name: systemd-units
  - hostPath:
      path: /
      type: ""
    name: host-slash
  - hostPath:
      path: /run/netns
      type: ""
    name: host-run-netns
  - hostPath:
      path: /var/lib/openvswitch/data
      type: ""
    name: var-lib-openvswitch
  - hostPath:
      path: /var/lib/ovn-ic/etc
      type: ""
    name: etc-openvswitch
  - hostPath:
      path: /var/run/openvswitch
      type: ""
    name: run-openvswitch
  - hostPath:
      path: /var/run/ovn-ic
      type: ""
    name: run-ovn
  - hostPath:
      path: /var/log/ovn
      type: ""
    name: node-log
  - hostPath:
      path: /dev/log
      type: ""
    name: log-socket
  - hostPath:
      path: /run/ovn-kubernetes
      type: ""
    name: host-run-ovn-kubernetes
  - hostPath:
      path: /var/lib/cni/bin
      type: ""
    name: host-cni-bin
  - hostPath:
      path: /var/run/multus/cni/net.d
      type: ""
    name: host-cni-netd
  - hostPath:
      path: /var/lib/cni/networks/ovn-k8s-cni-overlay
      type: ""
    name: host-var-lib-cni-networks-ovn-kubernetes
  - configMap:
      defaultMode: 420
      name: ovnkube-config
    name: ovnkube-config
  - configMap:
      defaultMode: 420
      name: env-overrides
      optional: true
    name: env-overrides
  - name: ovn-node-metrics-cert
    secret:
      defaultMode: 420
      optional: true
      secretName: ovn-node-metrics-cert
  - configMap:
      defaultMode: 484
      name: ovnkube-script-lib
    name: ovnkube-script-lib
  - name: kube-api-access-mwvxg
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
      - configMap:
          items:
          - key: service-ca.crt
            path: service-ca.crt
          name: openshift-service-ca.crt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-04-01T08:28:40Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-04-01T08:28:57Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-04-01T08:28:57Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-04-01T08:27:24Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: cri-o://78bafaa1a71374f5df62e7631f06d4f0f7873b91f774ceefe4e12d87d2e181ed
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
    lastState: {}
    name: kube-rbac-proxy-node
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:41Z"
  - containerID: cri-o://5273fe02f0f473eb4fa4cc2b102bfab38125d54e9d3363966e220c5a9309e90f
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
    lastState: {}
    name: kube-rbac-proxy-ovn-metrics
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:41Z"
  - containerID: cri-o://b290287d1454066c3accc7b23622911686bf19f16862d8938fdafe598b764153
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: nbdb
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:41Z"
  - containerID: cri-o://9643d8d55f14222e78e6980dfb67223a83bb16b1dbdc4ffab26a26ce1a2189cf
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: northd
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:41Z"
  - containerID: cri-o://20df86e6e2a37fcbb435f0a22563e5d518d775f92f482273d4039bdc98c329ff
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: ovn-acl-logging
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:41Z"
  - containerID: cri-o://7022fdf35694944d0ca1ecedf4244745617b16f9995edc77500de5d325dbbab5
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: ovn-controller
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:41Z"
  - containerID: cri-o://c14cb8a5ab464c2c70a8c3d5ef85380f6db629de70100cb7bb64b3480ae58649
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: ovnkube-controller
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:45Z"
  - containerID: cri-o://ee3b4d7f111180a9a4ce78fca75933bc08fba1e5a7ed73e1217bf2db5790d4ac
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: sbdb
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-04-01T08:28:43Z"
  hostIP: 10.13.3.78
  initContainerStatuses:
  - containerID: cri-o://7c19c23fb8601dfc9f411cddb971c3e370b5cb8d015396d81045e091cfb2543a
    image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:45df7f433f840fcf1ebea5c6ecf0546d55a0a5b2c07548c06f6e63d77fd2f660
    lastState: {}
    name: kubecfg-setup
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: cri-o://7c19c23fb8601dfc9f411cddb971c3e370b5cb8d015396d81045e091cfb2543a
        exitCode: 0
        finishedAt: "2025-04-01T08:28:39Z"
        reason: Completed
        startedAt: "2025-04-01T08:28:39Z"
  phase: Running
  podIP: 10.13.3.78
  podIPs:
  - ip: 10.13.3.78
  qosClass: Burstable
  startTime: "2025-04-01T08:27:27Z"
