---
apiVersion: v1
items:
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUekNDQWplZ0F3SUJBZ0lJZlFpUmo0dkFaY3d3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweU5UQXpNekV4TkRJeApNak5hRncwek5UQXpNamt4TkRJeE1qUmFNRTB4RFRBTEJnTlZCQW9UQkdWMFkyUXhEVEFMQmdOVkJBTVRCR1YwClkyUXhMVEFyQmdOVkJBVVRKR000WlRSalpqaGlMV1l5TnpZdE5EaGhNQzA1WVdKaUxXUTBPV1ZpWWpsa1ptUmkKWWpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT0JTY1dnTFlmUVV5Mzk0MmFaMQpNZDdlYnIwSFBkd0dtbks4WWl0RUhsdXRTQnpYOUdSSnlhbU9hZkNaTVVPNUJ0YTU1YmZGNjN6cU51Ti9EL1NZCnhVY0VVMWFNbVkwVXc2TzcvT2RUYi9sMXRiYnlWSHQ0MTJYYXR4UmhsaG5rMU90WHUxOTJlaEFuWkJwbkZaNE8KLzFTK05Jbkx5MUNJZHRMbTZjK0dFcGpRdzJoMjBQbVlFL05EOVgxMzg2RTN4aDQvZGNYVXNodkQ5enhRcE1rMgpsVzVMOXp2SWxwTXZSQU84Q2Y1Rlo3UmJZb0lZUTgxdlVKdEZ1eWR2OGU4anAwMkI0UmV0QTh0ZHliZThITzRlCnp5Z0NnaE5GQjlKTEYvVDNmZVJvMzZ1VjRzT2wraUQxc0VGeFZCS0ZIWmV1elNib0wrZG5VK1pVaS9SQVJaeGgKNFZVQ0F3RUFBYU5XTUZRd0RnWURWUjBQQVFIL0JBUURBZ1dnTUJNR0ExVWRKUVFNTUFvR0NDc0dBUVVGQndNQwpNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVVqdjRaQlpuM0tvNlNVd0dxT2NPYVFEYmxWUTh3CkRRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGemE3ZjAzR3VXcGNacldhcVhIZXo4NnBRQWI2RjRjYmk4UmhpU3AKcitqZ0F3VTZjVHlZVWRhaDRqb3pMdFZabzBkY2c3VzhOU0E2NmNBYzl4MjJZMmEzZ29GZUoyaFY4TnJ6S3dzWgphS0F3VEN0T1c3a3RnUmNrQ0RlVnBiNGtDRGl0NFBTZWphamVtRzJGYS9LYXE3eU1WYU5seEF2cTMxR1ZRc1owCnJKSldydU9WQy9XekFXZDlDdkVheStkYXRRQ2ZHTnRZV2crY2w3amk3bFRwYzhHS1FKU29nN3FzMFYwcGJYZ1EKVTB2ZmZZeUVQdVY1aG5kUFBkR29QNXBuWWZoVHlTSnZxSllTMDc1Z050dVlnakFPdTFueU1uY2lwUWQ4ZnNabApoZU5hczFzazI0cHNCYzYvWm9vOFZHcS93WGM1ZVptZ0tPa2d3b040WFp6K0ZSQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTY3NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/owning-component: Etcd
    creationTimestamp: "2025-03-31T20:22:21Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/owning-component: {}
        f:type: {}
      manager: cluster-openshift-apiserver-operator
      operation: Update
      time: "2025-03-31T20:22:21Z"
    name: etcd-client
    namespace: openshift-apiserver
    resourceVersion: "50082"
    uid: fd73781e-e706-44bb-b0e5-8fc3a9be63c9
  type: kubernetes.io/tls
- apiVersion: v1
  data:
    .dockercfg: MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: openshift-apiserver-sa
      kubernetes.io/service-account.uid: d6cb4569-8600-494d-bf15-85e7b044c299
      openshift.io/token-secret.name: openshift-apiserver-sa-token-zst5b
      openshift.io/token-secret.value: ""
    creationTimestamp: "2025-03-31T20:26:59Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2377c89b-8398-4824-9d02-0d99fbd0e283"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2025-03-31T20:26:59Z"
    name: openshift-apiserver-sa-dockercfg-v7rhh
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: openshift-apiserver-sa-token-zst5b
      uid: 2377c89b-8398-4824-9d02-0d99fbd0e283
    resourceVersion: "58729"
    uid: d3eb38b4-994c-4d1c-ad6f-dc32b92623d8
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: 
    namespace: MTkgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: OTkyIGJ5dGVzIGxvbmc=
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: openshift-apiserver-sa
      kubernetes.io/service-account.uid: d6cb4569-8600-494d-bf15-85e7b044c299
    creationTimestamp: "2025-03-31T20:26:57Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2025-03-31T20:26:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:25Z"
    name: openshift-apiserver-sa-token-zst5b
    namespace: openshift-apiserver
    resourceVersion: "61113"
    uid: 2377c89b-8398-4824-9d02-0d99fbd0e283
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQ0RENDQXNpZ0F3SUJBZ0lJYUhHZkt3ZVN1dll3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjME16UTFNalV5T1RBZQpGdzB5TlRBek16RXlNREl5TXpoYUZ3MHlOekF6TXpFeU1ESXlNemxhTUNZeEpEQWlCZ05WQkFNVEcyRndhUzV2CmNHVnVjMmhwWm5RdFlYQnBjMlZ5ZG1WeUxuTjJZekNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0MKQVFvQ2dnRUJBTHpLQXBWTVgzT1dDejZLNUJJdHRFU1JhamhTU1Zoc2gwREUvemZXandvbmg0dnkvWmIxNDBkTgpQY2dQakFSS0ZaNExLaTM5WWxYSW0rRjFhd0N0T3IzbGhWMjZ6YjNVU3NsRTdkMXVIOTl0TXg5dGhSdm5MZERxCnZDT1M4dzBvL29LcXJURHFaQ01FbzI3RGhKaWVFZnJvRjVmUC9kZzFzbFAvdEJOMFN6ZDE1dmVuYnVMLzhiejMKN2dnSm5iOUtXTHlWaGNHSXIxKzQzTjRnQjd1c3VqR2phd0llSUcvZVJvRVdjVlhUQ0N0WlBlWlFzWnZLbUxHTApjazdGaHVwbFVISFBjbzQ2VWZWQWd4U29oMSt3Nnd3dHFsVGl6d2FDdWluWXdQS3oxaUVNbWJWc1J3MkVITHM3CkxKOEtaSjJxMXl4cEE1dlJEQW9ac1FsaUR0QnoxS01DQXdFQUFhT0NBUUF3Z2Ywd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUJNQXdHQTFVZEV3RUIvd1FDTUFBd0hRWURWUjBPQkJZRQpGSVZTUlB0cUd4ZHFtRzBDQ2Z4d1k4WTdiQUk3TUI4R0ExVWRJd1FZTUJhQUZBN2oxd1RTdjl1dDBBbTJKQ1FlClR0Z1NnTHdDTUZFR0ExVWRFUVJLTUVpQ0cyRndhUzV2Y0dWdWMyaHBablF0WVhCcGMyVnlkbVZ5TG5OMlk0SXAKWVhCcExtOXdaVzV6YUdsbWRDMWhjR2x6WlhKMlpYSXVjM1pqTG1Oc2RYTjBaWEl1Ykc5allXd3dOUVlMS3dZQgpCQUdTQ0JGa0FnRUVKaE1rT1RFd01Ua3hNMll0TkRjd055MDBNVGN6TFRsa1l6RXRNV0kzTkdVeU5EVTROelV4Ck1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQWlGRThVSnVWK1ZIOHZsaFFSb2t0cklpejdCK1J1WlVaaE1zRUsKYS8rOTJZL3dHMTFJeW0yMVVZMGxmSUU1b1NhOEtNTkhtNW00YVAybWI0TEJmUjBiUnJiQklRb041Q2pPbTBmMQpwR2l5QklUNldGUW40dWdEVFI1b1IvUHc2N1Z2RkdiNTcwVWJzUUl4cFQ2aGRYdmJsMEpYZS9DSkZ4RzVhSzVSCmp1QUpRTGVhSFR0WGw4VkZNczBlcld1T0doclJQbnh2UFdlOWZIbWtyUVhYNm96cUJvQlZKSzdhaVRYd0diZHEKV2M2UDBRTUplbGx6c1NZS1loR05IaGF4RDAxcGhmQ2VCK1JJd0RhdENZU0ppQTI3UmU3cUJSbDA1c3huUDB5dwpSaEg3KzFMMW1teFQraVQvZlhoUG1wZlhmVFQwNkovTWtnZ1VFU1pBM0NtMDJjMXkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFVUQ0NBam1nQXdJQkFnSUlIdk8zdkRWQ0ZTd3dEUVlKS29aSWh2Y05BUUVMQlFBd05qRTBNRElHQTFVRQpBd3dyYjNCbGJuTm9hV1owTFhObGNuWnBZMlV0YzJWeWRtbHVaeTF6YVdkdVpYSkFNVGMwTXpRMU1qVXlPVEFlCkZ3MHlOVEF6TXpFeU1ESXlNRGxhRncweU56QTFNekF5TURJeU1UQmFNRFl4TkRBeUJnTlZCQU1NSzI5d1pXNXoKYUdsbWRDMXpaWEoyYVdObExYTmxjblpwYm1jdGMybG5ibVZ5UURFM05ETTBOVEkxTWprd2dnRWlNQTBHQ1NxRwpTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZmloRk1VNm1qWHE4Myt1VFo0QVl6MmZKMGJ0S2NlNkpPCnU0dm0rd1hWTmxQZ0dVOHkxWmJiQm5NbE10c0pMbmRoUktKYTE2NzR1ZjdPZW4yeHE5Sm1ZL2FTNTl4QkVWQkkKVDJ2THNvVHljUWQzR0RaOFZTd2tTZ0hVSzhIc3dEL2xZbW1jRTQ1c2dJZis0MFI3dmRNNGpsOVA3N05CYmF6KwpTUVVJbVdqV01GWU51aXZ2QmF5Ky9mYzk5YUFlT1ArNm9mUFgrN0tRR1MvV1hFUXNsV1VITUptS2xneURaa3NZClhYN0hoV28yaHdxcDVBSkp5MzlLaXphdC9mRnNKajFNQk5FbEZ2MTFDZm5GR20wVjY3Q0RkT3c5L2grMm9abzcKMXM2V1ljaXNrMXZXcm5QNmFHMXoxanR3TnY4aHl4QUx4ZzZBVTU4UTdub3lKb2VaMGtVQkFnTUJBQUdqWXpCaApNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUU80OWNFCjByL2JyZEFKdGlRa0hrN1lFb0M4QWpBZkJnTlZIU01FR0RBV2dCUU80OWNFMHIvYnJkQUp0aVFrSGs3WUVvQzgKQWpBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWE5Um9KUldRM3V5cDduRGVKam5Yem4rZTk5Y0pXS1RPWHRQNgpNY1JNbEF4TXNSZHlabWtVR2pnQzA5aW84eVRocDVEakRvQjZWYTY0bzMxY0VCTTVCamdPWEVHZVdkSi9lOGFrClk1dnJlekhVbFZEWWxMNGExcTRNdTMrOTdZSklsZ25GZWpKNlp1YmNiQklSVG5haGYyaVRrdGVIUk1QQ2NHcUkKbWc2djBod2FVYU9BeTlxWGNjQ0Rxc09rSHZIVGV3QkdkN2x1a0dYQjBJMHBQZ3ltR09uYmJvelArUzJGVVN4SAp4Ni9tM3NPYWZadEVjaG9CWnQ3VCtSSEpQcTJJdHI3a2tzTGZTRnB6bG5WSFdQREtrbTB0dzdtUGU5andteW15CkpYcVVsdUszSVRwV2ZoUEVFS2l4eUZhTXJCMWNtTHFOajZuL1B1K3N0dSs5Q2xBb3BBPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: MTY3NSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/description: 'Secret contains a pair signed serving certificate/key
        that is generated by Service CA operator for service/api with hostname api.openshift-apiserver.svc
        and is annotated to the service with annotating a service resource with ''service.beta.openshift.io/serving-cert-secret-name:
        serving-cert''. The certificate is valid for 2 years.'
      openshift.io/owning-component: service-ca
      service.alpha.openshift.io/expiry: "2027-03-31T20:22:39Z"
      service.alpha.openshift.io/originating-service-name: api
      service.alpha.openshift.io/originating-service-uid: 9101913f-4707-4173-9dc1-1b74e2458751
      service.beta.openshift.io/expiry: "2027-03-31T20:22:39Z"
    creationTimestamp: "2025-03-31T20:22:40Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/description: {}
            f:openshift.io/owning-component: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.alpha.openshift.io/originating-service-name: {}
            f:service.alpha.openshift.io/originating-service-uid: {}
            f:service.beta.openshift.io/expiry: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9101913f-4707-4173-9dc1-1b74e2458751"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2025-03-31T20:22:40Z"
    name: serving-cert
    namespace: openshift-apiserver
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: api
      uid: 9101913f-4707-4173-9dc1-1b74e2458751
    resourceVersion: "51152"
    uid: 8f8d2650-754a-4bfa-b404-02d333256656
  type: kubernetes.io/tls
kind: SecretList
metadata:
  resourceVersion: "718371"
