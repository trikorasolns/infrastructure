---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: ""
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
      operator.openshift.io/spec-hash: e4b775e7a15a0426fc4c11a18e30141f216e91da155019b5d8be26bf8ed82b31
    creationTimestamp: "2025-03-31T20:26:21Z"
    generation: 7
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: "7494564678"
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7fb474f6-54d8-4e2e-be59-7df0ad14ca8b"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:oauth-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"oauth-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/oauth-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/oauth-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"audit-policies"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:34:13Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:34:13Z"
    name: apiserver-7494564678
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 7fb474f6-54d8-4e2e-be59-7df0ad14ca8b
    resourceVersion: "69508"
    uid: e80b2d99-177e-4a4e-8b16-13dd8b25a08c
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-oauth-apiserver
        pod-template-hash: "7494564678"
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
          operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-oauth-apiserver
          oauth-apiserver-anti-affinity: "true"
          pod-template-hash: "7494564678"
          revision: "1"
        name: openshift-oauth-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-oauth-apiserver
                  oauth-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec oauth-apiserver start \
              --secure-port=8443 \
              --audit-log-path=/var/log/oauth-apiserver/audit.log \
              --audit-log-format=json \
              --audit-log-maxsize=100 \
              --audit-log-maxbackup=10 \
              --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
              --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
              --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
              --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
              --shutdown-delay-duration=15s \
              --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
              --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
              --api-audiences=https://kubernetes.default.svc \
              --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
              --cors-allowed-origins='//localhost(:|$)' \
              --etcd-servers=https://10.13.0.150:2379 \
              --etcd-servers=https://10.13.2.160:2379 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
              --tls-min-version=VersionTLS12 \
              --v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: oauth-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
          securityContext:
            privileged: true
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/audit
            name: audit-policies
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/oauth-apiserver
            name: audit-dir
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
            && chmod 0600 /var/log/oauth-apiserver/*
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/oauth-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: oauth-apiserver-sa
        serviceAccountName: oauth-apiserver-sa
        terminationGracePeriodSeconds: 90
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit-policies
        - name: etcd-client
          secret:
            defaultMode: 420
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 420
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/oauth-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 7
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: ""
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
      operator.openshift.io/spec-hash: 30ce337da45aea220ae8d7acfd538de7f8f7eb4c2da3ca83fb10d45347e74276
    creationTimestamp: "2025-03-31T20:24:20Z"
    generation: 4
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: 9578fd6d
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7fb474f6-54d8-4e2e-be59-7df0ad14ca8b"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:oauth-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"oauth-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/oauth-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/oauth-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"audit-policies"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:33Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:33Z"
    name: apiserver-9578fd6d
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 7fb474f6-54d8-4e2e-be59-7df0ad14ca8b
    resourceVersion: "61867"
    uid: 8fd42378-4a85-4e8b-93bd-b460d00881fc
  spec:
    replicas: 0
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-oauth-apiserver
        pod-template-hash: 9578fd6d
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
          operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-oauth-apiserver
          oauth-apiserver-anti-affinity: "true"
          pod-template-hash: 9578fd6d
          revision: "1"
        name: openshift-oauth-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-oauth-apiserver
                  oauth-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec oauth-apiserver start \
              --secure-port=8443 \
              --audit-log-path=/var/log/oauth-apiserver/audit.log \
              --audit-log-format=json \
              --audit-log-maxsize=100 \
              --audit-log-maxbackup=10 \
              --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
              --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
              --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
              --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
              --shutdown-delay-duration=15s \
              --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
              --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
              --api-audiences=https://kubernetes.default.svc \
              --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
              --cors-allowed-origins='//localhost(:|$)' \
              --etcd-servers=https://10.13.0.150:2379 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
              --tls-min-version=VersionTLS12 \
              --v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: oauth-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
          securityContext:
            privileged: true
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/audit
            name: audit-policies
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/oauth-apiserver
            name: audit-dir
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
            && chmod 0600 /var/log/oauth-apiserver/*
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/oauth-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: oauth-apiserver-sa
        serviceAccountName: oauth-apiserver-sa
        terminationGracePeriodSeconds: 90
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit-policies
        - name: etcd-client
          secret:
            defaultMode: 420
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 420
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/oauth-apiserver
            type: ""
          name: audit-dir
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
      openshiftapiservers.operator.openshift.io/operator-pull-spec: ""
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
      operator.openshift.io/spec-hash: 7d822a47ce772f4af9b57dbcb6bfda07c150601eb01ce5a7d8ce1c8379b09c64
    creationTimestamp: "2025-03-31T20:28:40Z"
    generation: 4
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: cfdd6ccdb
      revision: "1"
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:openshiftapiservers.operator.openshift.io/operator-pull-spec: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7fb474f6-54d8-4e2e-be59-7df0ad14ca8b"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
                f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:apiserver: {}
                f:app: {}
                f:oauth-apiserver-anti-affinity: {}
                f:pod-template-hash: {}
                f:revision: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"oauth-apiserver"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"POD_NAMESPACE"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/oauth-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/encryption-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/etcd-client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:initContainers:
                .: {}
                k:{"name":"fix-audit-permissions"}:
                  .: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:privileged: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/log/oauth-apiserver"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"audit-dir"}:
                  .: {}
                  f:hostPath:
                    .: {}
                    f:path: {}
                    f:type: {}
                  f:name: {}
                k:{"name":"audit-policies"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"encryption-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
                k:{"name":"etcd-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"etcd-serving-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:34:13Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-04-01T21:15:26Z"
    name: apiserver-cfdd6ccdb
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: apiserver
      uid: 7fb474f6-54d8-4e2e-be59-7df0ad14ca8b
    resourceVersion: "504394"
    uid: d3427ded-a25d-473e-95cd-47396b9efebd
  spec:
    replicas: 3
    selector:
      matchLabels:
        apiserver: "true"
        app: openshift-oauth-apiserver
        pod-template-hash: cfdd6ccdb
    template:
      metadata:
        annotations:
          openshift.io/required-scc: privileged
          operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
          operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          apiserver: "true"
          app: openshift-oauth-apiserver
          oauth-apiserver-anti-affinity: "true"
          pod-template-hash: cfdd6ccdb
          revision: "1"
        name: openshift-oauth-apiserver
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  apiserver: "true"
                  app: openshift-oauth-apiserver
                  oauth-apiserver-anti-affinity: "true"
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - |
            if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
              echo "Copying system trust bundle"
              cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
            fi
            exec oauth-apiserver start \
              --secure-port=8443 \
              --audit-log-path=/var/log/oauth-apiserver/audit.log \
              --audit-log-format=json \
              --audit-log-maxsize=100 \
              --audit-log-maxbackup=10 \
              --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
              --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
              --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
              --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
              --shutdown-delay-duration=15s \
              --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
              --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
              --api-audiences=https://kubernetes.default.svc \
              --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
              --cors-allowed-origins='//localhost(:|$)' \
              --etcd-servers=https://10.13.0.150:2379 \
              --etcd-servers=https://10.13.2.160:2379 \
              --etcd-servers=https://10.13.2.89:2379 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
              --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
              --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
              --tls-min-version=VersionTLS12 \
              --v=2
          command:
          - /bin/bash
          - -ec
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: oauth-apiserver
          ports:
          - containerPort: 8443
            protocol: TCP
          readinessProbe:
            failureThreshold: 1
            httpGet:
              path: readyz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            requests:
              cpu: 150m
              memory: 200Mi
          securityContext:
            privileged: true
            runAsUser: 0
          startupProbe:
            failureThreshold: 30
            httpGet:
              path: healthz
              port: 8443
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 10
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/audit
            name: audit-policies
          - mountPath: /var/run/secrets/etcd-client
            name: etcd-client
          - mountPath: /var/run/configmaps/etcd-serving-ca
            name: etcd-serving-ca
          - mountPath: /var/run/configmaps/trusted-ca-bundle
            name: trusted-ca-bundle
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
          - mountPath: /var/run/secrets/encryption-config
            name: encryption-config
          - mountPath: /var/log/oauth-apiserver
            name: audit-dir
        dnsPolicy: ClusterFirst
        initContainers:
        - command:
          - sh
          - -c
          - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
            && chmod 0600 /var/log/oauth-apiserver/*
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
          imagePullPolicy: IfNotPresent
          name: fix-audit-permissions
          resources:
            requests:
              cpu: 15m
              memory: 50Mi
          securityContext:
            privileged: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/log/oauth-apiserver
            name: audit-dir
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: oauth-apiserver-sa
        serviceAccountName: oauth-apiserver-sa
        terminationGracePeriodSeconds: 90
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: audit-1
          name: audit-policies
        - name: etcd-client
          secret:
            defaultMode: 420
            secretName: etcd-client
        - configMap:
            defaultMode: 420
            name: etcd-serving-ca
          name: etcd-serving-ca
        - name: serving-cert
          secret:
            defaultMode: 420
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
            optional: true
          name: trusted-ca-bundle
        - name: encryption-config
          secret:
            defaultMode: 420
            optional: true
            secretName: encryption-config-1
        - hostPath:
            path: /var/log/oauth-apiserver
            type: ""
          name: audit-dir
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 4
    readyReplicas: 3
    replicas: 3
kind: ReplicaSetList
metadata:
  resourceVersion: "718096"
