---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.72/23"],"mac_address":"0a:58:0a:82:00:48","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.72/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.72"
            ],
            "mac": "0a:58:0a:82:00:48",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
    creationTimestamp: "2025-03-31T20:34:13Z"
    generateName: apiserver-cfdd6ccdb-
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: cfdd6ccdb
      revision: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d3427ded-a25d-473e-95cd-47396b9efebd"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"oauth-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/encryption-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/etcd-client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"fix-audit-permissions"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"audit-policies"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"encryption-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"etcd-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"etcd-serving-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:34:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-03-31T20:34:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:35:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:35:14Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.72"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T21:15:26Z"
    name: apiserver-cfdd6ccdb-7fqn9
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apiserver-cfdd6ccdb
      uid: d3427ded-a25d-473e-95cd-47396b9efebd
    resourceVersion: "504389"
    uid: 60039e5c-e5d8-42d6-b1ed-5c5079963346
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              apiserver: "true"
              app: openshift-oauth-apiserver
              oauth-apiserver-anti-affinity: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - |
        if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi
        exec oauth-apiserver start \
          --secure-port=8443 \
          --audit-log-path=/var/log/oauth-apiserver/audit.log \
          --audit-log-format=json \
          --audit-log-maxsize=100 \
          --audit-log-maxbackup=10 \
          --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
          --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
          --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
          --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
          --shutdown-delay-duration=15s \
          --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
          --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
          --api-audiences=https://kubernetes.default.svc \
          --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
          --cors-allowed-origins='//localhost(:|$)' \
          --etcd-servers=https://10.13.0.150:2379 \
          --etcd-servers=https://10.13.2.160:2379 \
          --etcd-servers=https://10.13.2.89:2379 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-min-version=VersionTLS12 \
          --v=2
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: oauth-apiserver
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 150m
          memory: 200Mi
      securityContext:
        privileged: true
        runAsUser: 0
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/audit
        name: audit-policies
      - mountPath: /var/run/secrets/etcd-client
        name: etcd-client
      - mountPath: /var/run/configmaps/etcd-serving-ca
        name: etcd-serving-ca
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/encryption-config
        name: encryption-config
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jzbz5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: oauth-apiserver-sa-dockercfg-ndml2
    initContainers:
    - command:
      - sh
      - -c
      - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
        && chmod 0600 /var/log/oauth-apiserver/*
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imagePullPolicy: IfNotPresent
      name: fix-audit-permissions
      resources:
        requests:
          cpu: 15m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jzbz5
        readOnly: true
    nodeName: host-10-13-2-89
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: oauth-apiserver-sa
    serviceAccountName: oauth-apiserver-sa
    terminationGracePeriodSeconds: 90
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: audit-1
      name: audit-policies
    - name: etcd-client
      secret:
        defaultMode: 420
        secretName: etcd-client
    - configMap:
        defaultMode: 420
        name: etcd-serving-ca
      name: etcd-serving-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - name: encryption-config
      secret:
        defaultMode: 420
        optional: true
        secretName: encryption-config-1
    - hostPath:
        path: /var/log/oauth-apiserver
        type: ""
      name: audit-dir
    - name: kube-api-access-jzbz5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:35:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T21:15:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T21:15:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:35:14Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://27ba063c9658f7f48d0a081757219fa8d4e60cee325613897de1b37e7ea9d21e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      lastState: {}
      name: oauth-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:35:15Z"
    hostIP: 10.13.2.89
    initContainerStatuses:
    - containerID: cri-o://dbc43bd61e660afc85eeeb5c15669338192a5ab657e1be35baf75723ee520889
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      lastState: {}
      name: fix-audit-permissions
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://dbc43bd61e660afc85eeeb5c15669338192a5ab657e1be35baf75723ee520889
          exitCode: 0
          finishedAt: "2025-03-31T20:35:15Z"
          reason: Completed
          startedAt: "2025-03-31T20:35:15Z"
    phase: Running
    podIP: 10.130.0.72
    podIPs:
    - ip: 10.130.0.72
    qosClass: Burstable
    startTime: "2025-03-31T20:35:14Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.65/23"],"mac_address":"0a:58:0a:81:00:41","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.65/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.65"
            ],
            "mac": "0a:58:0a:81:00:41",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
    creationTimestamp: "2025-03-31T20:33:03Z"
    generateName: apiserver-cfdd6ccdb-
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: cfdd6ccdb
      revision: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d3427ded-a25d-473e-95cd-47396b9efebd"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"oauth-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/encryption-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/etcd-client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"fix-audit-permissions"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"audit-policies"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"encryption-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"etcd-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"etcd-serving-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:33:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:34:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:34:07Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.65"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T11:45:42Z"
    name: apiserver-cfdd6ccdb-dlgkr
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apiserver-cfdd6ccdb
      uid: d3427ded-a25d-473e-95cd-47396b9efebd
    resourceVersion: "315774"
    uid: 574a3e51-5138-4fba-a24b-574f06e1b6d0
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              apiserver: "true"
              app: openshift-oauth-apiserver
              oauth-apiserver-anti-affinity: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - |
        if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi
        exec oauth-apiserver start \
          --secure-port=8443 \
          --audit-log-path=/var/log/oauth-apiserver/audit.log \
          --audit-log-format=json \
          --audit-log-maxsize=100 \
          --audit-log-maxbackup=10 \
          --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
          --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
          --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
          --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
          --shutdown-delay-duration=15s \
          --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
          --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
          --api-audiences=https://kubernetes.default.svc \
          --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
          --cors-allowed-origins='//localhost(:|$)' \
          --etcd-servers=https://10.13.0.150:2379 \
          --etcd-servers=https://10.13.2.160:2379 \
          --etcd-servers=https://10.13.2.89:2379 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-min-version=VersionTLS12 \
          --v=2
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: oauth-apiserver
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 150m
          memory: 200Mi
      securityContext:
        privileged: true
        runAsUser: 0
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/audit
        name: audit-policies
      - mountPath: /var/run/secrets/etcd-client
        name: etcd-client
      - mountPath: /var/run/configmaps/etcd-serving-ca
        name: etcd-serving-ca
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/encryption-config
        name: encryption-config
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rfj4b
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: oauth-apiserver-sa-dockercfg-ndml2
    initContainers:
    - command:
      - sh
      - -c
      - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
        && chmod 0600 /var/log/oauth-apiserver/*
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imagePullPolicy: IfNotPresent
      name: fix-audit-permissions
      resources:
        requests:
          cpu: 15m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rfj4b
        readOnly: true
    nodeName: host-10-13-2-160
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: oauth-apiserver-sa
    serviceAccountName: oauth-apiserver-sa
    terminationGracePeriodSeconds: 90
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: audit-1
      name: audit-policies
    - name: etcd-client
      secret:
        defaultMode: 420
        secretName: etcd-client
    - configMap:
        defaultMode: 420
        name: etcd-serving-ca
      name: etcd-serving-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - name: encryption-config
      secret:
        defaultMode: 420
        optional: true
        secretName: encryption-config-1
    - hostPath:
        path: /var/log/oauth-apiserver
        type: ""
      name: audit-dir
    - name: kube-api-access-rfj4b
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:34:08Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T11:45:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T11:45:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:34:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://15157dcfeebdb677dfd28971d406c031334c569c341826376244a088d15e065d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      lastState: {}
      name: oauth-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:34:08Z"
    hostIP: 10.13.2.160
    initContainerStatuses:
    - containerID: cri-o://a94c238b56cc3aba2f749c6bc48b10812811635252019c5eaf5f74a0c9f064f2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      lastState: {}
      name: fix-audit-permissions
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a94c238b56cc3aba2f749c6bc48b10812811635252019c5eaf5f74a0c9f064f2
          exitCode: 0
          finishedAt: "2025-03-31T20:34:08Z"
          reason: Completed
          startedAt: "2025-03-31T20:34:08Z"
    phase: Running
    podIP: 10.129.0.65
    podIPs:
    - ip: 10.129.0.65
    qosClass: Burstable
    startTime: "2025-03-31T20:34:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.73/23"],"mac_address":"0a:58:0a:80:00:49","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.73/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.73"
            ],
            "mac": "0a:58:0a:80:00:49",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: m3SEmA==
      operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: e1DO2g==
    creationTimestamp: "2025-03-31T20:28:40Z"
    generateName: apiserver-cfdd6ccdb-
    labels:
      apiserver: "true"
      app: openshift-oauth-apiserver
      oauth-apiserver-anti-affinity: "true"
      pod-template-hash: cfdd6ccdb
      revision: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-client.secret: {}
            f:operator.openshift.io/dep-openshift-oauth-apiserver.etcd-serving-ca.configmap: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:apiserver: {}
            f:app: {}
            f:oauth-apiserver-anti-affinity: {}
            f:pod-template-hash: {}
            f:revision: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"d3427ded-a25d-473e-95cd-47396b9efebd"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"oauth-apiserver"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"POD_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/etcd-serving-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/encryption-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/etcd-client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/secrets/serving-cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:initContainers:
            .: {}
            k:{"name":"fix-audit-permissions"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/oauth-apiserver"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"audit-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"audit-policies"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"encryption-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:optional: {}
                f:secretName: {}
            k:{"name":"etcd-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"etcd-serving-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:40Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-0-150
      operation: Update
      subresource: status
      time: "2025-03-31T20:32:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:32:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.73"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T07:07:21Z"
    name: apiserver-cfdd6ccdb-vs8hh
    namespace: openshift-oauth-apiserver
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: apiserver-cfdd6ccdb
      uid: d3427ded-a25d-473e-95cd-47396b9efebd
    resourceVersion: "235016"
    uid: 7e64229e-97b8-4c59-81d5-9f08e18e6a02
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              apiserver: "true"
              app: openshift-oauth-apiserver
              oauth-apiserver-anti-affinity: "true"
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - |
        if [ -s /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem ]; then
          echo "Copying system trust bundle"
          cp -f /var/run/configmaps/trusted-ca-bundle/tls-ca-bundle.pem /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
        fi
        exec oauth-apiserver start \
          --secure-port=8443 \
          --audit-log-path=/var/log/oauth-apiserver/audit.log \
          --audit-log-format=json \
          --audit-log-maxsize=100 \
          --audit-log-maxbackup=10 \
          --audit-policy-file=/var/run/configmaps/audit/policy.yaml \
          --etcd-cafile=/var/run/configmaps/etcd-serving-ca/ca-bundle.crt \
          --etcd-keyfile=/var/run/secrets/etcd-client/tls.key \
          --etcd-certfile=/var/run/secrets/etcd-client/tls.crt \
          --shutdown-delay-duration=15s \
          --tls-private-key-file=/var/run/secrets/serving-cert/tls.key \
          --tls-cert-file=/var/run/secrets/serving-cert/tls.crt \
          --api-audiences=https://kubernetes.default.svc \
          --cors-allowed-origins='//127\.0\.0\.1(:|$)' \
          --cors-allowed-origins='//localhost(:|$)' \
          --etcd-servers=https://10.13.0.150:2379 \
          --etcd-servers=https://10.13.2.160:2379 \
          --etcd-servers=https://10.13.2.89:2379 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384 \
          --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-cipher-suites=TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256 \
          --tls-min-version=VersionTLS12 \
          --v=2
      command:
      - /bin/bash
      - -ec
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: oauth-apiserver
      ports:
      - containerPort: 8443
        protocol: TCP
      readinessProbe:
        failureThreshold: 1
        httpGet:
          path: readyz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        requests:
          cpu: 150m
          memory: 200Mi
      securityContext:
        privileged: true
        runAsUser: 0
      startupProbe:
        failureThreshold: 30
        httpGet:
          path: healthz
          port: 8443
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 10
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/configmaps/audit
        name: audit-policies
      - mountPath: /var/run/secrets/etcd-client
        name: etcd-client
      - mountPath: /var/run/configmaps/etcd-serving-ca
        name: etcd-serving-ca
      - mountPath: /var/run/configmaps/trusted-ca-bundle
        name: trusted-ca-bundle
      - mountPath: /var/run/secrets/serving-cert
        name: serving-cert
      - mountPath: /var/run/secrets/encryption-config
        name: encryption-config
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cg4cv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: oauth-apiserver-sa-dockercfg-ndml2
    initContainers:
    - command:
      - sh
      - -c
      - chmod 0700 /var/log/oauth-apiserver && touch /var/log/oauth-apiserver/audit.log
        && chmod 0600 /var/log/oauth-apiserver/*
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imagePullPolicy: IfNotPresent
      name: fix-audit-permissions
      resources:
        requests:
          cpu: 15m
          memory: 50Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/log/oauth-apiserver
        name: audit-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cg4cv
        readOnly: true
    nodeName: host-10-13-0-150
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: oauth-apiserver-sa
    serviceAccountName: oauth-apiserver-sa
    terminationGracePeriodSeconds: 90
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: audit-1
      name: audit-policies
    - name: etcd-client
      secret:
        defaultMode: 420
        secretName: etcd-client
    - configMap:
        defaultMode: 420
        name: etcd-serving-ca
      name: etcd-serving-ca
    - name: serving-cert
      secret:
        defaultMode: 420
        secretName: serving-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca-bundle
        optional: true
      name: trusted-ca-bundle
    - name: encryption-config
      secret:
        defaultMode: 420
        optional: true
        secretName: encryption-config-1
    - hostPath:
        path: /var/log/oauth-apiserver
        type: ""
      name: audit-dir
    - name: kube-api-access-cg4cv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:32:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T07:07:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T07:07:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:32:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://37f55caed3a8002a06673382312c65805287491bd59d64bda6543dfbf3e5fe08
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      lastState: {}
      name: oauth-apiserver
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:32:59Z"
    hostIP: 10.13.0.150
    initContainerStatuses:
    - containerID: cri-o://a8c9e8a0ddc515097123d1398872c1b7811f06945b0fb9a98f6f840713863a0e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ab9e00293d1fa6275dbdf7acf3e9cc5636934451d61746143e0f3f3d86674810
      lastState: {}
      name: fix-audit-permissions
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a8c9e8a0ddc515097123d1398872c1b7811f06945b0fb9a98f6f840713863a0e
          exitCode: 0
          finishedAt: "2025-03-31T20:32:59Z"
          reason: Completed
          startedAt: "2025-03-31T20:32:59Z"
    phase: Running
    podIP: 10.128.0.73
    podIPs:
    - ip: 10.128.0.73
    qosClass: Burstable
    startTime: "2025-03-31T20:32:57Z"
kind: PodList
metadata:
  resourceVersion: "718096"
