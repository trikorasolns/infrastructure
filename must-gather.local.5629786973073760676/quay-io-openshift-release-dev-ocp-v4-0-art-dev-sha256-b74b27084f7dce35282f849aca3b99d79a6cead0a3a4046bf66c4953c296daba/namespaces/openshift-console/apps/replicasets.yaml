---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      console.openshift.io/console-config-version: "69680"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
      console.openshift.io/infrastructure-config-version: "509"
      console.openshift.io/oauth-secret-version: "62366"
      console.openshift.io/oauth-serving-cert-config-version: "62276"
      console.openshift.io/proxy-config-version: "527"
      console.openshift.io/service-ca-config-version: "62681"
      console.openshift.io/trusted-ca-config-version: "62736"
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "5"
      deployment.kubernetes.io/revision: "3"
      operator.openshift.io/spec-hash: 7d7ec01a0d6926078d1d30d1a3603b6b225bd843913ffa68e5a3793151f24d3f
    creationTimestamp: "2025-03-31T20:34:27Z"
    generation: 1
    labels:
      app: console
      component: ui
      pod-template-hash: 776c8ff8fd
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:console.openshift.io/console-config-version: {}
            f:console.openshift.io/image: {}
            f:console.openshift.io/infrastructure-config-version: {}
            f:console.openshift.io/oauth-secret-version: {}
            f:console.openshift.io/oauth-serving-cert-config-version: {}
            f:console.openshift.io/proxy-config-version: {}
            f:console.openshift.io/service-ca-config-version: {}
            f:console.openshift.io/trusted-ca-config-version: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"806bb0e5-b109-4b66-bc4e-da3fff9390db"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:console.openshift.io/console-config-version: {}
                f:console.openshift.io/image: {}
                f:console.openshift.io/infrastructure-config-version: {}
                f:console.openshift.io/oauth-secret-version: {}
                f:console.openshift.io/oauth-serving-cert-config-version: {}
                f:console.openshift.io/proxy-config-version: {}
                f:console.openshift.io/service-ca-config-version: {}
                f:console.openshift.io/trusted-ca-config-version: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:component: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"console"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/console-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/oauth-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/oauth-serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/service-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"console-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"console-oauth-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"console-serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"oauth-serving-cert"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"service-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:34:27Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:36:06Z"
    name: console-776c8ff8fd
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: console
      uid: 806bb0e5-b109-4b66-bc4e-da3fff9390db
    resourceVersion: "70609"
    uid: ec9b584d-6cf7-4de7-bf77-8cbfd5557dd4
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: console
        component: ui
        pod-template-hash: 776c8ff8fd
    template:
      metadata:
        annotations:
          console.openshift.io/console-config-version: "69680"
          console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
          console.openshift.io/infrastructure-config-version: "509"
          console.openshift.io/oauth-secret-version: "62366"
          console.openshift.io/oauth-serving-cert-config-version: "62276"
          console.openshift.io/proxy-config-version: "527"
          console.openshift.io/service-ca-config-version: "62681"
          console.openshift.io/trusted-ca-config-version: "62736"
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: console
          component: ui
          pod-template-hash: 776c8ff8fd
        name: console
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - ui
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /opt/bridge/bin/bridge
          - --public-dir=/opt/bridge/static
          - --config=/var/console-config/console-config.yaml
          - --service-ca-file=/var/service-ca/service-ca.crt
          - --v=2
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - sleep
                - "25"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 150
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: console
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/serving-cert
            name: console-serving-cert
            readOnly: true
          - mountPath: /var/oauth-config
            name: console-oauth-config
            readOnly: true
          - mountPath: /var/console-config
            name: console-config
            readOnly: true
          - mountPath: /var/service-ca
            name: service-ca
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: trusted-ca-bundle
            readOnly: true
          - mountPath: /var/oauth-serving-cert
            name: oauth-serving-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: console
        serviceAccountName: console
        terminationGracePeriodSeconds: 40
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - name: console-serving-cert
          secret:
            defaultMode: 420
            secretName: console-serving-cert
        - name: console-oauth-config
          secret:
            defaultMode: 420
            secretName: console-oauth-config
        - configMap:
            defaultMode: 420
            name: console-config
          name: console-config
        - configMap:
            defaultMode: 420
            name: service-ca
          name: service-ca
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
          name: trusted-ca-bundle
        - configMap:
            defaultMode: 420
            name: oauth-serving-cert
          name: oauth-serving-cert
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      console.openshift.io/console-config-version: "63117"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
      console.openshift.io/infrastructure-config-version: "509"
      console.openshift.io/oauth-secret-version: "62366"
      console.openshift.io/oauth-serving-cert-config-version: "62276"
      console.openshift.io/proxy-config-version: "527"
      console.openshift.io/service-ca-config-version: "62681"
      console.openshift.io/trusted-ca-config-version: "62736"
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "5"
      deployment.kubernetes.io/revision: "2"
      operator.openshift.io/spec-hash: 06c087f58ed7e892ec503c55cf7edd818d883fa99d56cb5735b17d5d55f12aa7
    creationTimestamp: "2025-03-31T20:28:56Z"
    generation: 3
    labels:
      app: console
      component: ui
      pod-template-hash: 7bb5586f9f
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:console.openshift.io/console-config-version: {}
            f:console.openshift.io/image: {}
            f:console.openshift.io/infrastructure-config-version: {}
            f:console.openshift.io/oauth-secret-version: {}
            f:console.openshift.io/oauth-serving-cert-config-version: {}
            f:console.openshift.io/proxy-config-version: {}
            f:console.openshift.io/service-ca-config-version: {}
            f:console.openshift.io/trusted-ca-config-version: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"806bb0e5-b109-4b66-bc4e-da3fff9390db"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:console.openshift.io/console-config-version: {}
                f:console.openshift.io/image: {}
                f:console.openshift.io/infrastructure-config-version: {}
                f:console.openshift.io/oauth-secret-version: {}
                f:console.openshift.io/oauth-serving-cert-config-version: {}
                f:console.openshift.io/proxy-config-version: {}
                f:console.openshift.io/service-ca-config-version: {}
                f:console.openshift.io/trusted-ca-config-version: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:component: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"console"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/console-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/oauth-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/oauth-serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/service-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"console-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"console-oauth-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"console-serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"oauth-serving-cert"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"service-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:35:53Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:35:53Z"
    name: console-7bb5586f9f
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: console
      uid: 806bb0e5-b109-4b66-bc4e-da3fff9390db
    resourceVersion: "70480"
    uid: 2f395a96-1e7d-4845-a481-c8565746269d
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: console
        component: ui
        pod-template-hash: 7bb5586f9f
    template:
      metadata:
        annotations:
          console.openshift.io/console-config-version: "63117"
          console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
          console.openshift.io/infrastructure-config-version: "509"
          console.openshift.io/oauth-secret-version: "62366"
          console.openshift.io/oauth-serving-cert-config-version: "62276"
          console.openshift.io/proxy-config-version: "527"
          console.openshift.io/service-ca-config-version: "62681"
          console.openshift.io/trusted-ca-config-version: "62736"
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: console
          component: ui
          pod-template-hash: 7bb5586f9f
        name: console
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - ui
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /opt/bridge/bin/bridge
          - --public-dir=/opt/bridge/static
          - --config=/var/console-config/console-config.yaml
          - --service-ca-file=/var/service-ca/service-ca.crt
          - --v=2
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - sleep
                - "25"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 150
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: console
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/serving-cert
            name: console-serving-cert
            readOnly: true
          - mountPath: /var/oauth-config
            name: console-oauth-config
            readOnly: true
          - mountPath: /var/console-config
            name: console-config
            readOnly: true
          - mountPath: /var/service-ca
            name: service-ca
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted/pem
            name: trusted-ca-bundle
            readOnly: true
          - mountPath: /var/oauth-serving-cert
            name: oauth-serving-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: console
        serviceAccountName: console
        terminationGracePeriodSeconds: 40
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - name: console-serving-cert
          secret:
            defaultMode: 420
            secretName: console-serving-cert
        - name: console-oauth-config
          secret:
            defaultMode: 420
            secretName: console-oauth-config
        - configMap:
            defaultMode: 420
            name: console-config
          name: console-config
        - configMap:
            defaultMode: 420
            name: service-ca
          name: service-ca
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: trusted-ca-bundle
          name: trusted-ca-bundle
        - configMap:
            defaultMode: 420
            name: oauth-serving-cert
          name: oauth-serving-cert
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      console.openshift.io/console-config-version: "62677"
      console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
      console.openshift.io/infrastructure-config-version: "509"
      console.openshift.io/oauth-secret-version: "62366"
      console.openshift.io/oauth-serving-cert-config-version: "62276"
      console.openshift.io/proxy-config-version: "527"
      console.openshift.io/service-ca-config-version: "62678"
      console.openshift.io/trusted-ca-config-version: "62680"
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "5"
      deployment.kubernetes.io/revision: "1"
      operator.openshift.io/spec-hash: add454d429fc7f6df65d14425d5ecbf093b77fd2509eab52219fa03ed76e75da
    creationTimestamp: "2025-03-31T20:28:49Z"
    generation: 3
    labels:
      app: console
      component: ui
      pod-template-hash: 7f5f948fd6
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:console.openshift.io/console-config-version: {}
            f:console.openshift.io/image: {}
            f:console.openshift.io/infrastructure-config-version: {}
            f:console.openshift.io/oauth-secret-version: {}
            f:console.openshift.io/oauth-serving-cert-config-version: {}
            f:console.openshift.io/proxy-config-version: {}
            f:console.openshift.io/service-ca-config-version: {}
            f:console.openshift.io/trusted-ca-config-version: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"806bb0e5-b109-4b66-bc4e-da3fff9390db"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:console.openshift.io/console-config-version: {}
                f:console.openshift.io/image: {}
                f:console.openshift.io/infrastructure-config-version: {}
                f:console.openshift.io/oauth-secret-version: {}
                f:console.openshift.io/oauth-serving-cert-config-version: {}
                f:console.openshift.io/proxy-config-version: {}
                f:console.openshift.io/service-ca-config-version: {}
                f:console.openshift.io/trusted-ca-config-version: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:component: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"console"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:lifecycle:
                    .: {}
                    f:preStop:
                      .: {}
                      f:exec:
                        .: {}
                        f:command: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/console-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/oauth-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/oauth-serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/service-ca"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/var/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"console-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"console-oauth-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"console-serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"oauth-serving-cert"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"service-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:34:27Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:34:27Z"
    name: console-7f5f948fd6
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: console
      uid: 806bb0e5-b109-4b66-bc4e-da3fff9390db
    resourceVersion: "69712"
    uid: c43798ce-6af2-41ce-a39e-de9198609c45
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: console
        component: ui
        pod-template-hash: 7f5f948fd6
    template:
      metadata:
        annotations:
          console.openshift.io/console-config-version: "62677"
          console.openshift.io/image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
          console.openshift.io/infrastructure-config-version: "509"
          console.openshift.io/oauth-secret-version: "62366"
          console.openshift.io/oauth-serving-cert-config-version: "62276"
          console.openshift.io/proxy-config-version: "527"
          console.openshift.io/service-ca-config-version: "62678"
          console.openshift.io/trusted-ca-config-version: "62680"
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: console
          component: ui
          pod-template-hash: 7f5f948fd6
        name: console
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - ui
              topologyKey: kubernetes.io/hostname
        containers:
        - command:
          - /opt/bridge/bin/bridge
          - --public-dir=/opt/bridge/static
          - --config=/var/console-config/console-config.yaml
          - --service-ca-file=/var/service-ca/service-ca.crt
          - --v=2
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f318e3216b15d876c4c9d250b844ef39893cc7d5b2310ff5764d49a974387040
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                - sleep
                - "25"
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            initialDelaySeconds: 150
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: console
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /health
              port: 8443
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/serving-cert
            name: console-serving-cert
            readOnly: true
          - mountPath: /var/oauth-config
            name: console-oauth-config
            readOnly: true
          - mountPath: /var/console-config
            name: console-config
            readOnly: true
          - mountPath: /var/service-ca
            name: service-ca
            readOnly: true
          - mountPath: /var/oauth-serving-cert
            name: oauth-serving-cert
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: console
        serviceAccountName: console
        terminationGracePeriodSeconds: 40
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - name: console-serving-cert
          secret:
            defaultMode: 420
            secretName: console-serving-cert
        - name: console-oauth-config
          secret:
            defaultMode: 420
            secretName: console-oauth-config
        - configMap:
            defaultMode: 420
            name: console-config
          name: console-config
        - configMap:
            defaultMode: 420
            name: service-ca
          name: service-ca
        - configMap:
            defaultMode: 420
            name: oauth-serving-cert
          name: oauth-serving-cert
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "5"
      deployment.kubernetes.io/revision: "1"
      operator.openshift.io/spec-hash: ad3cdd7601bd972bd88e8a8c67a3079e52f13da2b0a4321a5d196dccebd87da0
    creationTimestamp: "2025-03-31T20:28:42Z"
    generation: 1
    labels:
      app: console
      component: downloads
      pod-template-hash: 7d44654cc8
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:operator.openshift.io/spec-hash: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"616d2d6e-0207-4820-a9c8-d3db135b038d"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:component: {}
                f:pod-template-hash: {}
              f:name: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"download-server"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:42Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:32:09Z"
    name: downloads-7d44654cc8
    namespace: openshift-console
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: downloads
      uid: 616d2d6e-0207-4820-a9c8-d3db135b038d
    resourceVersion: "65358"
    uid: 87ed5d47-9078-4c70-bf88-8dca054cb7a5
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: console
        component: downloads
        pod-template-hash: 7d44654cc8
    template:
      metadata:
        annotations:
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: console
          component: downloads
          pod-template-hash: 7d44654cc8
        name: downloads
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - key: component
                  operator: In
                  values:
                  - downloads
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - -c
          - "cat <<EOF >>/tmp/serve.py\nimport errno, http.server, os, re, signal,
            socket, sys, tarfile, tempfile, threading, time, zipfile\n\nsignal.signal(signal.SIGTERM,
            lambda signum, frame: sys.exit(0))\n\ndef write_index(path, message):\n
            \ with open(path, 'wb') as f:\n    f.write('\\n'.join([\n      '<!doctype
            html>',\n      '<html lang=\"en\">',\n      '<head>',\n      '  <meta
            charset=\"utf-8\">',\n      '</head>',\n      '<body>',\n      '  {}'.format(message),\n
            \     '</body>',\n      '</html>',\n      '',\n    ]).encode('utf-8'))\n\n#
            Launch multiple listeners as threads\nclass Thread(threading.Thread):\n
            \ def __init__(self, i, socket):\n    threading.Thread.__init__(self)\n
            \   self.i = i\n    self.socket = socket\n    self.daemon = True\n    self.start()\n\n
            \ def run(self):\n    server = http.server.SimpleHTTPRequestHandler\n
            \   server.server_version = \"OpenShift Downloads Server\"\n    server.sys_version
            = \"\"\n    httpd = http.server.HTTPServer(addr, server, False)\n\n    #
            Prevent the HTTP server from re-binding every handler.\n    # https://stackoverflow.com/questions/46210672/\n
            \   httpd.socket = self.socket\n    httpd.server_bind = self.server_close
            = lambda self: None\n\n    httpd.serve_forever()\n\ntemp_dir = tempfile.mkdtemp()\nprint('serving
            from {}'.format(temp_dir))\nos.chdir(temp_dir)\nfor arch in ['amd64',
            'arm64', 'ppc64le', 's390x']:\n  os.mkdir(arch)\ncontent = ['<a href=\"oc-license\">license</a>']\nos.symlink('/usr/share/openshift/LICENSE',
            'oc-license')\n\nfor arch, operating_system, path in [\n    ('amd64',
            'linux', '/usr/share/openshift/linux_amd64/oc'),\n    ('amd64', 'mac',
            '/usr/share/openshift/mac/oc'),\n    ('amd64', 'windows', '/usr/share/openshift/windows/oc.exe'),\n
            \   ('arm64', 'linux', '/usr/share/openshift/linux_arm64/oc'),\n    ('arm64',
            'mac', '/usr/share/openshift/mac_arm64/oc'),\n    ('ppc64le', 'linux',
            '/usr/share/openshift/linux_ppc64le/oc'),\n    ('s390x', 'linux', '/usr/share/openshift/linux_s390x/oc'),\n
            \   ]:\n  basename = os.path.basename(path)\n  target_path = os.path.join(arch,
            operating_system, basename)\n  os.mkdir(os.path.join(arch, operating_system))\n
            \ os.symlink(path, target_path)\n  base_root, _ = os.path.splitext(basename)\n
            \ archive_path_root = os.path.join(arch, operating_system, base_root)\n
            \ with tarfile.open('{}.tar'.format(archive_path_root), 'w') as tar:\n
            \   tar.add(path, basename)\n  with zipfile.ZipFile('{}.zip'.format(archive_path_root),
            'w') as zip:\n    zip.write(path, basename)\n  content.append(\n    '<a
            href=\"{0}\">oc ({1} {2})</a> (<a href=\"{3}.tar\">tar</a> <a href=\"{3}.zip\">zip</a>)'.format(\n
            \     target_path, arch, operating_system, archive_path_root\n    )\n
            \ )\n\nfor root, directories, filenames in os.walk(temp_dir):\n  root_link
            = os.path.relpath(temp_dir, os.path.join(root, 'child')).replace(os.path.sep,
            '/')\n  for directory in directories:\n    write_index(\n      path=os.path.join(root,
            directory, 'index.html'),\n      message='<p>Directory listings are disabled.
            \ See <a href=\"{}\">here</a> for available content.</p>'.format(root_link),\n
            \   )\n\nwrite_index(\n  path=os.path.join(temp_dir, 'index.html'),\n
            \ message='\\n'.join(\n    ['<ul>'] +\n    ['  <li>{}</li>'.format(entry)
            for entry in content] +\n    ['</ul>']\n  ),\n)\n\n# Create socket\n#
            IPv6 should handle IPv4 passively so long as it is not bound to a\n# specific
            address or set to IPv6_ONLY\n# https://stackoverflow.com/questions/25817848/python-3-does-http-server-support-ipv6\ntry:\n
            \ addr = ('::', 8080)\n  sock = socket.socket(socket.AF_INET6, socket.SOCK_STREAM)\nexcept
            socket.error as err:\n  # errno.EAFNOSUPPORT is \"socket.error: [Errno
            97] Address family not supported by protocol\"\n  # When IPv6 is disabled,
            socket will bind using IPv4.\n  if err.errno == errno.EAFNOSUPPORT:\n
            \   addr = ('', 8080)\n    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)\n
            \ else:\n    raise    \nsock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR,
            1)\nsock.bind(addr)\nsock.listen(5)\n\n[Thread(i, socket=sock) for i in
            range(100)]\ntime.sleep(9e9)\nEOF\nexec python3 /tmp/serve.py\n"
          command:
          - /bin/sh
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2f618191650c405f279e386dc90d00de5ec6a3a09ce2d64b4eacf13ec6f4a1f8
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: download-server
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 8080
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 0
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
kind: ReplicaSetList
metadata:
  resourceVersion: "718125"
