---
apiVersion: v1
items:
- apiVersion: v1
  data:
    .dockercfg: MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/service-account.name: route-controller-manager-sa
      kubernetes.io/service-account.uid: 18ae9fa9-f073-4d27-80fd-00553fd38773
      openshift.io/token-secret.name: route-controller-manager-sa-token-g84dj
      openshift.io/token-secret.value: ""
    creationTimestamp: "2025-03-31T20:27:01Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:.dockercfg: {}
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
            f:openshift.io/token-secret.name: {}
            f:openshift.io/token-secret.value: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"39010d50-392c-46b5-b39b-2ffeedbfca48"}: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2025-03-31T20:27:01Z"
    name: route-controller-manager-sa-dockercfg-nlcfk
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      blockOwnerDeletion: false
      controller: true
      kind: Secret
      name: route-controller-manager-sa-token-g84dj
      uid: 39010d50-392c-46b5-b39b-2ffeedbfca48
    resourceVersion: "59215"
    uid: 9bffd472-a816-43fd-be30-2f77056deb1d
  type: kubernetes.io/dockercfg
- apiVersion: v1
  data:
    ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYUZtZm1jSi9TNEl3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTWpVd016TXhNVEkxTlRFeldoY05NelV3TXpJNU1USTFOVEV6V2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTUFjWWxhTmZKMjRORExYaUNlZ25DdU1wY3JCUUphRApMakZVTC9XTG1iMmhuM25kNDJRcWtBQjR5cUREQk5uV3MrSWc4YVltMzY3aVl0RFkrQ1BQT1BXNG1ienNLdGJ5CnEyeGZOOEZVZHd0cktuMlNmQVVIaTM0a1RzVmxMbjBuSVJEZWo3eEF1WG9zZjgrMEJzTUdscGxET3dZVXcwZlgKRWU5ejhyNkxaVGlUajE0a2RTbXZyeHRtQTNZdXhQZlhYUUZ4dzZLcVpVY0FwcmFPYVVzOGUzZlRkNy81YkptZgp2R3R1UzQxQUwzV0F6STVOTU5zQzNwSUV3Y2lzTnM5djZaSlo5RTcrbEc4WmRjNmprcTF6MlBhcW9Gam53dnpPCnVxdFFKYnlnNWp5TlN1a3NMeC9YOERCWEFHM2Nxa0R1QnhuK0xyQVd1clQyYkNkYTF3bTAzd2NDQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkw4NQpMdGdleVBqR2R0K3JGWkhUWGRlVlNGQ3ZNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJxZGRudkpnSHo2eTJwCnRJZmpJSS96QTNURGsvNHY3MzZWT1dRUVZMRTZtMlhGN1g4SHRvRUhLZHJqSHRVWEdtNlhEZ2ZqNjdQNGpJRkUKU3RablZiMXdUUUIxR3IvRGtxRzVWT0tFYnV6YmV5NTkzWTVPYmNRd2cySytnYjF5a003eDBJQ2JJQWJXRE00SApaYTQ1TGNKVy9wT1libGo3NXFGaVJTUm1KbGVoaTFMYnZPY3pzMzloY0JjYkVieXNzSmpYaThWMU5xZWFocTcwCjdBODR0NFc0ZmJPaDF1LzVHVXpCUHo2WnFCUjlpQ0FuczRvZVFrZEY4cVJQdjhKSHZadytXbEdQNHVOZjhEZEcKN1J0STZmTHJGUXRyRytma3FFaWc0UWYyQlUzb0h4dUsxYjZ3eWFmZXAxUTJJZExhU0JyZ3o4WUhBQkZ5UW1xagpMS05LSjExNAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEUURDQ0FpaWdBd0lCQWdJSVNLS1NwOTRnVThJd0RRWUpLb1pJaHZjTkFRRUxCUUF3UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNQjRYRFRJMU1ETXpNVEV5TlRVeE0xb1hEVE0xTURNeU9URXlOVFV4TTFvd1BqRVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNnd0pnWURWUVFERXg5cmRXSmxMV0Z3YVhObGNuWmxjaTFzYjJOaGJHaHZjM1F0CmMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUEwZU9aVFlEVitMNXIKeXkxZlR2cjdJVGRzbXVBYnc1L0l4QldUUjkwVlJrWG1LMjdaeThjTGtnWlFsVysvS2gvMzAzMzRwTDdHWXFqWApuNGIyV3dVRHArZlM2QmloUjNiTWRtZTNKYmQzWW56M2xkak0rZCt1REVNUG1qS0xrVkVhYVZxSjNaYmIzc2VvClEwSjdzVkJUd0hsTlhMOUFlaWNmYUpUS0IyaGVQNzFQeDlOSHdKeGFFZHVGaDRDcUFvWk9qY01YUDgrbDAvRFIKQzFKZVhKakVRSVBRYmNzdDZIQy9ISUVqV2J2UDJxZWxUNkdJbTNVVWpnT2QwQ0tkM3VPYzJOQmJzVkxnNzlINQoyTmEzRHIra2FtSkdybjI2T3E1eWZ6V1phQklTV2wvTWVEaERCZFpyanR5dWM5YVJGbkNmNEhJNFBWdmxGMHJlCnVyVG4xVGVUZXdJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVTZrU2ZHN041bm5qRTRWbFUrdGhDL2w3RldhTXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUkwT3Fzc2t3dE0vRWd2MzJablM2amFXOWJPQXJIK2pjUDJ0OERWV2NHZFdqUHhiNTdBU1JuWEdaVFB6Cjl4a3VMYUp6U0s3N0VqaEFzOHZnOU1FUlFnZ1JiMkdhMHJnRVdHZ3pCeVkwODJaaXo3RGYrQVVBZlVJMkp1eHIKRjZYdW1VYzdsdnd6ZmdpV1ptYnBQbStxVEdXQ1JlZFp1V1Z2M01LUTBKTUU1Sm4yS0RERVNhOTB0TUoxWUQ3OQozcFhEOU1MbE1VN2ZKV2hpRGtxdmJ1WjEvVnFra1VKa2VLNnFKbWt0Wjl4REVxTURSeVFvZUhNeXYyeHl0a3hkCmxteUdEK3pNbmp5allHaU9rZkkzbERGazA4VHZ2OUpoUDBOY2YzM3k0WE5mNE1iMGRScGZBdmVGdTJmOFlNUk4KTGRQOHd4d2laMURGWVYwN0lONXl5c2ViL1RjPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVERDQ0FqU2dBd0lCQWdJSUNya3QwaUF1NFBVd0RRWUpLb1pJaHZjTkFRRUxCUUF3UkRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyYVdObExXNWwKZEhkdmNtc3RjMmxuYm1WeU1CNFhEVEkxTURNek1URXlOVFV4TTFvWERUTTFNRE15T1RFeU5UVXhNMW93UkRFUwpNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUzR3TEFZRFZRUURFeVZyZFdKbExXRndhWE5sY25abGNpMXpaWEoyCmFXTmxMVzVsZEhkdmNtc3RjMmxuYm1WeU1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0MKQVFFQTVTemRoWGpmWmo0M3hpYjh3UnZQRjNicEt3d3ZLbnVOSncrMno3bFBNa1ByeTVzZjNxZkpFQ3Njekp1YwpTb1huaHlwSjJNZmNab2NuR0NlQjg4bWw1em5MaFgydmEzY09HWGo5Sll3NWpPZ0x6WlE1NkxaN1lZTXFkY0djClZZbWhRYkt6Q25UazM2dzd5OEhWa2h3Zm9qaWoyY1JTTnBwZGtmblZFclpLSlBjV0pjYUFldlhwUDluN24wSEsKQWlGSnFsbHZuenpxb0g1MFhKRnNleHlQZVMxMHF2N1RIeUJzMUlzZnhQbGdnZi8yZ3VraWZLNFlTQ2hGcWRrYQpsYWF3T0J2TzhvTE13RDJGd251cWU1bTlvaU1tbTVWS1NJblRnVkZxQnFrQmlDdDkyWnNISlBLKzJxSjhwTVpvClZRQTdBY0pONjF1RlNjNDFGQXV5R3hkNEpRSURBUUFCbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WUQKVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVVpVnBwR2pWQnpkNVl0UUU4bEg0dWJZTEpJMWt3RFFZSgpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFFbEt2UDZrcGZWbTlJaG90aEhpNTE0UUVrNGJJeE1nL01LVWVnZStVYUNWCnpnKzJOZmY1b0JrZTM1QVY0NEhFdlR3OURkVHN4dXhRb3hSMndmWFgyV3g3MTlDQnRMcTJ2L2hXcmxBZGQ5VWkKWjl6NWpwU1NJWGcxNUtNOEhndFZwRFQ3NTFjS0FrczNqQTlucFBHNFRJbGp2UXg5cmFpdnF2NEF3ZzllK1hzMQpaZFo2MkJhL3UzMVBFOGwxVE9QSDdmZ2ZkZUpKeDc3a1ZPVGNOeDRSVzl2NXhKK0cwazVIRGRBMVBqdHpDeVZ2CjRxM3dtaDlISENwbnYxa2ZjNTJ0UmRqS3NtMXd2ZFd3ZloySS92LzhyNlUwekUzVXkvSWZ3c1haaVpXWjE3NmgKZ3pOZ1hUSTR5K1J5OTUrbGRWVXZ5cStnSTFXdWcxNkpuU2xKZVJoQ2Nybz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRGx6Q0NBbitnQXdJQkFnSUlWa1NPQ2F3TU5xb3dEUVlKS29aSWh2Y05BUUVMQlFBd1dURlhNRlVHQTFVRQpBd3hPYjNCbGJuTm9hV1owTFd0MVltVXRZWEJwYzJWeWRtVnlMVzl3WlhKaGRHOXlYMnh2WTJGc2FHOXpkQzF5ClpXTnZkbVZ5ZVMxelpYSjJhVzVuTFhOcFoyNWxja0F4TnpRek5EVXlOVE01TUI0WERUSTFNRE16TVRJd01qSXgKT0ZvWERUTTFNRE15T1RJd01qSXhPVm93V1RGWE1GVUdBMVVFQXd4T2IzQmxibk5vYVdaMExXdDFZbVV0WVhCcApjMlZ5ZG1WeUxXOXdaWEpoZEc5eVgyeHZZMkZzYUc5emRDMXlaV052ZG1WeWVTMXpaWEoyYVc1bkxYTnBaMjVsCmNrQXhOelF6TkRVeU5UTTVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXJBVHEKSHNCbEtKMWlwUzZuZ3BVeHpUS0U3SkJrdVpMMVArZVRXV2o4NnBpWXcvME5lL3pNUlZDS1ZjNWxoNW5OaTVRYwp2dTR3WDU1aGFCOEtXWUFxd0hRVS9INmw5d3NRbmFISUFibTc5WGRhM3A0WXA0VDREcUo4bGN2WnV2Sk8ralIxCk9PMllwQTlEb1ZMbFVMSHpybEZabC80WUZmaTEwdHBFUXNoQmdVajB1dm9NUGpXeGtsS0M4MXMzZFVGSG9kMysKTm95MTh1RVA2SmF6VDMraUVxaFd4dmIrMFJ2SDhjdVJqRnRpWnY3bVNTMUNvYitKY2hLU0J4elArSUJ5c1owaApVQXpjMVFTbCs0ZTFNc0NLTFJKbzUwN0QzRExuZlA4cWZsOXlWekQveWZ5NUFHbFFlN2d2aEkxSFUyL2w4OVRsCnVCT3NXRXlWRGlFRjVtSCtPUUlEQVFBQm8yTXdZVEFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC8KQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVMzVyMkFqeHpnNllENEo2NXdPSXpGZWJzbGJjd0h3WURWUjBqQkJndwpGb0FVMzVyMkFqeHpnNllENEo2NXdPSXpGZWJzbGJjd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFIaW9nUW1SCi9TelNiWmtNN1VUKzV6SmVFMm5FaVNjdzJBQ1VvYlVTYjl5T1pBNW9sejRDY2I1NGFjUlZVZ3psWWhXdUJ2NGsKdS9BRyszZEw1bEJTNXhKcktwcnE5NUo2SzdiaW93Y0dKMXZxVHdPdHJ6cWJWNkVOUjZXNlhwV1VuR2hmaTdDeApmcDBFWlltTFBvdHlZMjNVaGQvaXJBQVpDMzIvVTZwK3hIeVgxNi9KYThxK0NEZVRFWE5VYzNMalUzVlFZSGFOCjhrOHdkUlZidllGN2t2bzNwd25JbzQ4VFl2NVBxNXk4V0F1M1k4U3dJOUdtOUVNNWFWaExTRHBIaUtmZjZuT1kKU2lzQzFtM3UyZ3lyUlo2ZUp6U0k5blZyVnBjN2VtWlZ1TUJtcmhPbnBkcnJJakE0dlZ3V2NxS2lBVUwxeDl0TQorcTM3cmM3blMraXg1NVE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURnekNDQW11Z0F3SUJBZ0lJS2tyYS9sZEh2bDB3RFFZSktvWklodmNOQVFFTEJRQXdKakVrTUNJR0ExVUUKQXd3YmFXNW5jbVZ6Y3kxdmNHVnlZWFJ2Y2tBeE56UXpORFV5TnpjMU1CNFhEVEkxTURNek1USXdNall4TlZvWApEVEkzTURNek1USXdNall4Tmxvd01URXZNQzBHQTFVRUF3d21LaTVoY0hCekxtOTJhR053YjJOdlkzQXVkSEpwCmEyOXlZWE52YkhWMGFXOXVjeTV1WlhRd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUIKQVFDbkNKcjFnZnlpaXhlZ3dZWHhCOUhSVVFlTDQvbnpuTkp1bm5aa3VUS3hZVHE3NXJzWFMzeDNKSHNnakdVSwpDd09QdUhNejBodHdrTCtpYjVLM2FnRTdzMUJKNkV4bGtPd1ZiTEpEUU9hMmwzVlZBcmQyRkdBZUhndlNhbTJjCldTT2x2cWRYSTB5UW0xZjhjcTdycmJycUVTdTZmelhRelIvbng0OVY0SkxnVE01RGl2SVNGc1ZkOWRTRHI0S0sKbkx4d1dHME1rUk1kUEsvRUVvbmpnVjRnOUFjR3dkQnpwUUgwYUQ1bTVuVFVReUgrQWY5ZzFiUFF0V1RNQ3d1Nwpyc1l4RHYrV2lCY3ppVm5nS2tkbmxUYjRqN1RtQXd4VzlScTlNbGowNEhsSWVrQWQ0QzNVNTlmb0FPS3dmaUMyCitrWmZGQTRPem1Sbm9BcGEycjMvcjdJUkFnTUJBQUdqZ2Frd2dhWXdEZ1lEVlIwUEFRSC9CQVFEQWdXZ01CTUcKQTFVZEpRUU1NQW9HQ0NzR0FRVUZCd01CTUF3R0ExVWRFd0VCL3dRQ01BQXdIUVlEVlIwT0JCWUVGRHVNVnNSRgo2ZnRnYXVSMXZBQU1weG9lQXduaE1COEdBMVVkSXdRWU1CYUFGUEt4RjVqY0pBVGltNW9MUU1LRVpiM3RMTG5iCk1ERUdBMVVkRVFRcU1DaUNKaW91WVhCd2N5NXZkbWhqY0c5amIyTndMblJ5YVd0dmNtRnpiMngxZEdsdmJuTXUKYm1WME1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQS9mbUxPMW1HdDJveS9ud2YyZnJEK3JyNUo4QWVpUUltLwphNTRvRTBqMElPMDZhQlViQTU3dWt5aXl6VnFZelZBWmVqMHZ5UDV2MUVjWndZTUM0NXpSR3A0d1lkcXBWcjgyCmZRaEV1M2VSbHNoL1ZCeGNFTTFlbjhsd0xEczdqR3ZhakxwZU1TdXN0dFRuOFZ1YXY4VHdsS29HQVBBQkV2a0kKQ25RN2U0amk1ODVyL3RscStyUURudU9YZ1JONmk2VmRRMk1EeTNjOWVsWC9RV1dUZFJQL1Y2V21KcC9acGpMUAp2ak05UjBFZXBoUi9IS3UwLzczQnBaQWUrVnp6b1FEVVFLaDE2TlFnQ094V2dpWGxsVnNEVkthekcwZ254bWlGCkRJOE5ZVUVuckp0QnVvOG1iK2ZqYXU2U2RFMUFSRkVQMVNsaTFGakw1WkljSDBSWXU3dDEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJREREQ0NBZlNnQXdJQkFnSUJBVEFOQmdrcWhraUc5dzBCQVFzRkFEQW1NU1F3SWdZRFZRUUREQnRwYm1keQpaWE56TFc5d1pYSmhkRzl5UURFM05ETTBOVEkzTnpVd0hoY05NalV3TXpNeE1qQXlOakUwV2hjTk1qY3dNek14Ck1qQXlOakUxV2pBbU1TUXdJZ1lEVlFRRERCdHBibWR5WlhOekxXOXdaWEpoZEc5eVFERTNORE0wTlRJM056VXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzcyOWNnWVZwL29NM0xkZ05iOG9sbgp1MWpFOTFZdCtQc0Q2YW9SNFlNZnZwNWlaRzJjWWp4VGYvZkxtU3N4WmJUMVdtSXdGSmpUaENIcmVYamlCTEVICkJ6VklHQlAyMHpjT0pKY09CWWU4SlBuV0lacVNHOFA2QUltY0FBbDZBeEtVNEVWMGI3YnRIWllXRjhXc2dPOWkKQVMvdHJBbGY1eHFxeTRRMUhqTjFaQmlweWkvNkh5c2xkLys4WUc4WGdFWWVkcC8yTzFzL25CbVd4RUowTGNVVAo0bTd6Y3hLMHU3aWxQWnh2QWw5N2VWRDFTbkJ6Z2p3ZjZkTDA0WWM2YVdGS0JzSDRwdHFVU3d2cGtMSFhXcTdHCmtoU0xHTi9QL1M4SitSVjVtK290ZTlJTFV2Qnd0aUNzbzFtcXZGTEs2RS9nQitBTE9wUEhpNnJPSEw2enBsR0IKQWdNQkFBR2pSVEJETUE0R0ExVWREd0VCL3dRRUF3SUNwREFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBTUIwRwpBMVVkRGdRV0JCVHlzUmVZM0NRRTRwdWFDMERDaEdXOTdTeTUyekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBCkhuS3RmTkRmZmxoaEo2ZWZSMFF2VGxPRTZ5dC9WUDBQYVpBcUJWdnN1dzJYWGdRL1llMTAzc3NMZjMzN0tmK2oKcDFoMHFTTjVOWlNmM1hXdmU1SHpZaWRsUWpSejJnSHdEM1VIODk3cXJESjgwUkQzL1JVZXhzZFFPRjM2RzJjUAphaVBuS3VleDdTeEY0OHBuSEdQTXhJNTkvanExL1UzRmkrMnNOWFJLSjN3Y2ZabVlqWU9jdHJSdUZZai9uSm9yCllkSUZBRFhEemhkdmgrWjlxd04zWUlHVDRsRkd4WWY2YkZMdmZaQlVuUVNUSmxWaThwZDZxbXpkNG9sMzZ1VngKTU9wS2tRd1dNK3U4RU5mSkVpQTJSQUhMN1ZSeS9kN2RvblpBUE43RlB3TW9Vb2lqNSt2ZXpsUVRlOUVRMjFzawpVeDJyanc1c1NFeSsydElGODJrMDRRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    namespace: MzQgYnl0ZXMgbG9uZw==
    service-ca.crt: 
    token: MTA1MiBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      kubernetes.io/created-by: openshift.io/create-dockercfg-secrets
      kubernetes.io/service-account.name: route-controller-manager-sa
      kubernetes.io/service-account.uid: 18ae9fa9-f073-4d27-80fd-00553fd38773
    creationTimestamp: "2025-03-31T20:26:57Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubernetes.io/created-by: {}
            f:kubernetes.io/service-account.name: {}
            f:kubernetes.io/service-account.uid: {}
        f:type: {}
      manager: openshift-controller-manager
      operation: Update
      time: "2025-03-31T20:26:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:ca.crt: {}
          f:namespace: {}
          f:service-ca.crt: {}
          f:token: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:27Z"
    name: route-controller-manager-sa-token-g84dj
    namespace: openshift-route-controller-manager
    resourceVersion: "61607"
    uid: 39010d50-392c-46b5-b39b-2ffeedbfca48
  type: kubernetes.io/service-account-token
- apiVersion: v1
  data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVVRENDQXppZ0F3SUJBZ0lJR01hdkNDdlVBazh3RFFZSktvWklodmNOQVFFTEJRQXdOakUwTURJR0ExVUUKQXd3cmIzQmxibk5vYVdaMExYTmxjblpwWTJVdGMyVnlkbWx1WnkxemFXZHVaWEpBTVRjME16UTFNalV5T1RBZQpGdzB5TlRBek16RXlNREl5TXpkYUZ3MHlOekF6TXpFeU1ESXlNemhhTUVveFNEQkdCZ05WQkFNVFAzSnZkWFJsCkxXTnZiblJ5YjJ4c1pYSXRiV0Z1WVdkbGNpNXZjR1Z1YzJocFpuUXRjbTkxZEdVdFkyOXVkSEp2Ykd4bGNpMXQKWVc1aFoyVnlMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTGhtWTYrcwoyRnpNWDk3S1dJZzFNajMwWDhXSkNXUTdFb3h1NVQzME1VaWtvNE5idXJGMFQrejd1WmJ6K3FYUnNIdjRLa3J1CjRPa0hkeEVYekFKaitCb3IzODB5c0E3MDNEVStKcUhaUWhvTE1EMnlTZytIQ01GTVJ6WnpyK3VCcUxsVHRyeWoKVC9FL0xuY3ZvTjI3THh1dnM1SUJQY1N2RUloNmJ4MklMYnkwVCtOY0plVUtCdWh3czZNWUhYQ0FMUWRUY1FVQwpKdVZkRmlpRWU0Ny8wVmtSM1dqOStCUUVCWlFOeEJKSUxlSHk0NDJXeno4UHpsYlczb29wdzN2R3lERnVRVHJVCnNqLzA3NmQzZldtQmx0SVZ5MjNzRS9jWnF2cW1JV2RuNFRNWG42RUlnUWR0N2VwUE80cjNXMzVCVmZpQjlhck0KcmxKUkFPK2l4ektONlpzQ0F3RUFBYU9DQVV3d2dnRklNQTRHQTFVZER3RUIvd1FFQXdJRm9EQVRCZ05WSFNVRQpEREFLQmdnckJnRUZCUWNEQVRBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlRkQ1FzUTJUbXJHSEc0Ci9wNVdyRG1qdTkwSStqQWZCZ05WSFNNRUdEQVdnQlFPNDljRTByL2JyZEFKdGlRa0hrN1lFb0M4QWpDQm13WUQKVlIwUkJJR1RNSUdRZ2o5eWIzVjBaUzFqYjI1MGNtOXNiR1Z5TFcxaGJtRm5aWEl1YjNCbGJuTm9hV1owTFhKdgpkWFJsTFdOdmJuUnliMnhzWlhJdGJXRnVZV2RsY2k1emRtT0NUWEp2ZFhSbExXTnZiblJ5YjJ4c1pYSXRiV0Z1CllXZGxjaTV2Y0dWdWMyaHBablF0Y205MWRHVXRZMjl1ZEhKdmJHeGxjaTF0WVc1aFoyVnlMbk4yWXk1amJIVnoKZEdWeUxteHZZMkZzTURVR0N5c0dBUVFCa2dnUlpBSUJCQ1lUSkRNellUUmpOMlF3TFRjeE5UWXROREppTUMwNApZV0V4TFdFeVpqWTNZbUZtTWpneVlqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFqbFU0aTBMNUg1UGcxQ2JhCjZZQlpzTHcrWHZtc2ZGNVZndndKM1c5bUJGZUpIMFVxTERNazc0QjduVEZMNml3bVFBUWpxaUVKbFhhK2J6bjYKdEMvTmZoeXArdzVCdEZXV2oxbm5mbHlLRmVRSVRQczhiZkI2bFBvb1lVTnZSc3E2aERuR1ZpWGxhQ0U5SXBVVgpDOHkvaE5zbzBPMWV0NjNiYVBWUU5xTVQxV3luZTB1eWNUZzNLQmtvY254RG1BN2lFMEFhdnB0eVJ6UXE2T1M3Ckx0SUJNVEpvU0x5L3p1ZE5xYStkSmp3UVRwYWpVcG1Md2hZZDFGYStXc2cvK215SjZvSG5nai9BZHZGNGtnSWYKNkhhcnoxY05iMzI2aHc0MlMxMW1jRXNHVTlXRlIxQW1lTWJvbDZFN3QxUGtYd1JWbEc1SkF0Y2tjUUVVdUxOWQpzYWcxbEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEVVRDQ0FqbWdBd0lCQWdJSUh2TzN2RFZDRlN3d0RRWUpLb1pJaHZjTkFRRUxCUUF3TmpFME1ESUdBMVVFCkF3d3JiM0JsYm5Ob2FXWjBMWE5sY25acFkyVXRjMlZ5ZG1sdVp5MXphV2R1WlhKQU1UYzBNelExTWpVeU9UQWUKRncweU5UQXpNekV5TURJeU1EbGFGdzB5TnpBMU16QXlNREl5TVRCYU1EWXhOREF5QmdOVkJBTU1LMjl3Wlc1egphR2xtZEMxelpYSjJhV05sTFhObGNuWnBibWN0YzJsbmJtVnlRREUzTkRNME5USTFNamt3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNmaWhGTVU2bWpYcTgzK3VUWjRBWXoyZkowYnRLY2U2Sk8KdTR2bSt3WFZObFBnR1U4eTFaYmJCbk1sTXRzSkxuZGhSS0phMTY3NHVmN09lbjJ4cTlKbVkvYVM1OXhCRVZCSQpUMnZMc29UeWNRZDNHRFo4VlN3a1NnSFVLOEhzd0QvbFltbWNFNDVzZ0lmKzQwUjd2ZE00amw5UDc3TkJiYXorClNRVUltV2pXTUZZTnVpdnZCYXkrL2ZjOTlhQWVPUCs2b2ZQWCs3S1FHUy9XWEVRc2xXVUhNSm1LbGd5RFprc1kKWFg3SGhXbzJod3FwNUFKSnkzOUtpemF0L2ZGc0pqMU1CTkVsRnYxMUNmbkZHbTBWNjdDRGRPdzkvaCsyb1pvNwoxczZXWWNpc2sxdldyblA2YUcxejFqdHdOdjhoeXhBTHhnNkFVNThRN25veUpvZVowa1VCQWdNQkFBR2pZekJoCk1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRTzQ5Y0UKMHIvYnJkQUp0aVFrSGs3WUVvQzhBakFmQmdOVkhTTUVHREFXZ0JRTzQ5Y0Uwci9icmRBSnRpUWtIazdZRW9DOApBakFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBYTlSb0pSV1EzdXlwN25EZUpqblh6bitlOTljSldLVE9YdFA2Ck1jUk1sQXhNc1JkeVpta1VHamdDMDlpbzh5VGhwNURqRG9CNlZhNjRvMzFjRUJNNUJqZ09YRUdlV2RKL2U4YWsKWTV2cmV6SFVsVkRZbEw0YTFxNE11Mys5N1lKSWxnbkZlako2WnViY2JCSVJUbmFoZjJpVGt0ZUhSTVBDY0dxSQptZzZ2MGh3YVVhT0F5OXFYY2NDRHFzT2tIdkhUZXdCR2Q3bHVrR1hCMEkwcFBneW1HT25iYm96UCtTMkZVU3hICng2L20zc09hZlp0RWNob0JadDdUK1JISlBxMkl0cjdra3NMZlNGcHpsblZIV1BES2ttMHR3N21QZTlqd215bXkKSlhxVWx1SzNJVHBXZmhQRUVLaXh5RmFNckIxY21McU5qNm4vUHUrc3R1KzlDbEFvcEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    tls.key: MTY3OSBieXRlcyBsb25n
  kind: Secret
  metadata:
    annotations:
      openshift.io/description: 'Secret contains a pair signed serving certificate/key
        that is generated by Service CA operator for service/route-controller-manager
        with hostname route-controller-manager.openshift-route-controller-manager.svc
        and is annotated to the service with annotating a service resource with ''service.beta.openshift.io/serving-cert-secret-name:
        serving-cert''. The certificate is valid for 2 years.'
      openshift.io/owning-component: service-ca
      service.alpha.openshift.io/expiry: "2027-03-31T20:22:38Z"
      service.beta.openshift.io/expiry: "2027-03-31T20:22:38Z"
      service.beta.openshift.io/originating-service-name: route-controller-manager
      service.beta.openshift.io/originating-service-uid: 33a4c7d0-7156-42b0-8aa1-a2f67baf282b
    creationTimestamp: "2025-03-31T20:22:39Z"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:data:
          .: {}
          f:tls.crt: {}
          f:tls.key: {}
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/description: {}
            f:openshift.io/owning-component: {}
            f:service.alpha.openshift.io/expiry: {}
            f:service.beta.openshift.io/expiry: {}
            f:service.beta.openshift.io/originating-service-name: {}
            f:service.beta.openshift.io/originating-service-uid: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"33a4c7d0-7156-42b0-8aa1-a2f67baf282b"}: {}
        f:type: {}
      manager: service-ca-operator
      operation: Update
      time: "2025-03-31T20:22:39Z"
    name: serving-cert
    namespace: openshift-route-controller-manager
    ownerReferences:
    - apiVersion: v1
      kind: Service
      name: route-controller-manager
      uid: 33a4c7d0-7156-42b0-8aa1-a2f67baf282b
    resourceVersion: "51099"
    uid: 3c23012a-7e55-4a78-a896-70021ab703bd
  type: kubernetes.io/tls
kind: SecretList
metadata:
  resourceVersion: "718384"
