2025-03-31T20:24:55.184007916Z I0331 20:24:55.183517       1 cmd.go:92] &{<nil> true {false} installer true map[cert-configmaps:0xc00013b360 cert-dir:0xc00013bae0 cert-secrets:0xc00013b180 configmaps:0xc00013a5a0 namespace:0xc00013a0a0 optional-cert-configmaps:0xc00013b9a0 optional-cert-secrets:0xc00013b860 optional-configmaps:0xc00013a820 optional-secrets:0xc00013a6e0 pod:0xc00013a280 pod-manifest-dir:0xc00013aaa0 resource-dir:0xc00013aa00 revision:0xc0000cdea0 secrets:0xc00013a3c0 v:0xc0004b0dc0] [0xc0004b0dc0 0xc0000cdea0 0xc00013a0a0 0xc00013a280 0xc00013aa00 0xc00013aaa0 0xc00013a5a0 0xc00013a820 0xc00013a3c0 0xc00013a6e0 0xc00013bae0 0xc00013b360 0xc00013b9a0 0xc00013b180 0xc00013b860] [] map[cert-configmaps:0xc00013b360 cert-dir:0xc00013bae0 cert-secrets:0xc00013b180 configmaps:0xc00013a5a0 help:0xc0004b1180 kubeconfig:0xc0000cdc20 log-flush-frequency:0xc0004b0d20 namespace:0xc00013a0a0 optional-cert-configmaps:0xc00013b9a0 optional-cert-secrets:0xc00013b860 optional-configmaps:0xc00013a820 optional-secrets:0xc00013a6e0 pod:0xc00013a280 pod-manifest-dir:0xc00013aaa0 pod-manifests-lock-file:0xc00013b040 resource-dir:0xc00013aa00 revision:0xc0000cdea0 secrets:0xc00013a3c0 timeout-duration:0xc00013ae60 v:0xc0004b0dc0 vmodule:0xc0004b0e60] [0xc0000cdc20 0xc0000cdea0 0xc00013a0a0 0xc00013a280 0xc00013a3c0 0xc00013a5a0 0xc00013a6e0 0xc00013a820 0xc00013aa00 0xc00013aaa0 0xc00013ae60 0xc00013b040 0xc00013b180 0xc00013b360 0xc00013b860 0xc00013b9a0 0xc00013bae0 0xc0004b0d20 0xc0004b0dc0 0xc0004b0e60 0xc0004b1180] [0xc00013b360 0xc00013bae0 0xc00013b180 0xc00013a5a0 0xc0004b1180 0xc0000cdc20 0xc0004b0d20 0xc00013a0a0 0xc00013b9a0 0xc00013b860 0xc00013a820 0xc00013a6e0 0xc00013a280 0xc00013aaa0 0xc00013b040 0xc00013aa00 0xc0000cdea0 0xc00013a3c0 0xc00013ae60 0xc0004b0dc0 0xc0004b0e60] map[104:0xc0004b1180 118:0xc0004b0dc0] [] -1 0 0xc0007f1dd0 true 0xa7f080 []}
2025-03-31T20:24:55.184007916Z I0331 20:24:55.183987       1 cmd.go:93] (*installerpod.InstallOptions)(0xc00025f860)({
2025-03-31T20:24:55.184007916Z  KubeConfig: (string) "",
2025-03-31T20:24:55.184007916Z  KubeClient: (kubernetes.Interface) <nil>,
2025-03-31T20:24:55.184007916Z  Revision: (string) (len=1) "2",
2025-03-31T20:24:55.184007916Z  NodeName: (string) "",
2025-03-31T20:24:55.184007916Z  Namespace: (string) (len=24) "openshift-kube-apiserver",
2025-03-31T20:24:55.184007916Z  PodConfigMapNamePrefix: (string) (len=18) "kube-apiserver-pod",
2025-03-31T20:24:55.184007916Z  SecretNamePrefixes: ([]string) (len=3 cap=4) {
2025-03-31T20:24:55.184007916Z   (string) (len=11) "etcd-client",
2025-03-31T20:24:55.184007916Z   (string) (len=34) "localhost-recovery-serving-certkey",
2025-03-31T20:24:55.184007916Z   (string) (len=31) "localhost-recovery-client-token"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  OptionalSecretNamePrefixes: ([]string) (len=2 cap=2) {
2025-03-31T20:24:55.184007916Z   (string) (len=17) "encryption-config",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "webhook-authenticator"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  ConfigMapNamePrefixes: ([]string) (len=8 cap=8) {
2025-03-31T20:24:55.184007916Z   (string) (len=18) "kube-apiserver-pod",
2025-03-31T20:24:55.184007916Z   (string) (len=6) "config",
2025-03-31T20:24:55.184007916Z   (string) (len=37) "kube-apiserver-cert-syncer-kubeconfig",
2025-03-31T20:24:55.184007916Z   (string) (len=28) "bound-sa-token-signing-certs",
2025-03-31T20:24:55.184007916Z   (string) (len=15) "etcd-serving-ca",
2025-03-31T20:24:55.184007916Z   (string) (len=18) "kubelet-serving-ca",
2025-03-31T20:24:55.184007916Z   (string) (len=22) "sa-token-signing-certs",
2025-03-31T20:24:55.184007916Z   (string) (len=29) "kube-apiserver-audit-policies"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  OptionalConfigMapNamePrefixes: ([]string) (len=3 cap=4) {
2025-03-31T20:24:55.184007916Z   (string) (len=14) "oauth-metadata",
2025-03-31T20:24:55.184007916Z   (string) (len=12) "cloud-config",
2025-03-31T20:24:55.184007916Z   (string) (len=24) "kube-apiserver-server-ca"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  CertSecretNames: ([]string) (len=10 cap=16) {
2025-03-31T20:24:55.184007916Z   (string) (len=17) "aggregator-client",
2025-03-31T20:24:55.184007916Z   (string) (len=30) "localhost-serving-cert-certkey",
2025-03-31T20:24:55.184007916Z   (string) (len=31) "service-network-serving-certkey",
2025-03-31T20:24:55.184007916Z   (string) (len=37) "external-loadbalancer-serving-certkey",
2025-03-31T20:24:55.184007916Z   (string) (len=37) "internal-loadbalancer-serving-certkey",
2025-03-31T20:24:55.184007916Z   (string) (len=33) "bound-service-account-signing-key",
2025-03-31T20:24:55.184007916Z   (string) (len=40) "control-plane-node-admin-client-cert-key",
2025-03-31T20:24:55.184007916Z   (string) (len=31) "check-endpoints-client-cert-key",
2025-03-31T20:24:55.184007916Z   (string) (len=14) "kubelet-client",
2025-03-31T20:24:55.184007916Z   (string) (len=16) "node-kubeconfigs"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  OptionalCertSecretNamePrefixes: ([]string) (len=11 cap=16) {
2025-03-31T20:24:55.184007916Z   (string) (len=17) "user-serving-cert",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-000",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-001",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-002",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-003",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-004",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-005",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-006",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-007",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-008",
2025-03-31T20:24:55.184007916Z   (string) (len=21) "user-serving-cert-009"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  CertConfigMapNamePrefixes: ([]string) (len=4 cap=4) {
2025-03-31T20:24:55.184007916Z   (string) (len=20) "aggregator-client-ca",
2025-03-31T20:24:55.184007916Z   (string) (len=9) "client-ca",
2025-03-31T20:24:55.184007916Z   (string) (len=29) "control-plane-node-kubeconfig",
2025-03-31T20:24:55.184007916Z   (string) (len=26) "check-endpoints-kubeconfig"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  OptionalCertConfigMapNamePrefixes: ([]string) (len=1 cap=1) {
2025-03-31T20:24:55.184007916Z   (string) (len=17) "trusted-ca-bundle"
2025-03-31T20:24:55.184007916Z  },
2025-03-31T20:24:55.184007916Z  CertDir: (string) (len=57) "/etc/kubernetes/static-pod-resources/kube-apiserver-certs",
2025-03-31T20:24:55.184007916Z  ResourceDir: (string) (len=36) "/etc/kubernetes/static-pod-resources",
2025-03-31T20:24:55.184007916Z  PodManifestDir: (string) (len=25) "/etc/kubernetes/manifests",
2025-03-31T20:24:55.184007916Z  Timeout: (time.Duration) 2m0s,
2025-03-31T20:24:55.184007916Z  StaticPodManifestsLockFile: (string) "",
2025-03-31T20:24:55.184007916Z  PodMutationFns: ([]installerpod.PodMutationFunc) <nil>,
2025-03-31T20:24:55.184007916Z  KubeletVersion: (string) ""
2025-03-31T20:24:55.184007916Z })
2025-03-31T20:24:55.184619654Z I0331 20:24:55.184586       1 cmd.go:410] Getting controller reference for node host-10-13-0-150
2025-03-31T20:24:55.199953944Z I0331 20:24:55.199653       1 cmd.go:423] Waiting for installer revisions to settle for node host-10-13-0-150
2025-03-31T20:24:55.202373098Z I0331 20:24:55.202353       1 cmd.go:503] Pod container: installer state for node host-10-13-0-150 is not terminated, waiting
2025-03-31T20:25:05.208515311Z I0331 20:25:05.208477       1 cmd.go:515] Waiting additional period after revisions have settled for node host-10-13-0-150
2025-03-31T20:25:35.209367484Z I0331 20:25:35.209301       1 cmd.go:521] Getting installer pods for node host-10-13-0-150
2025-03-31T20:25:35.215586256Z I0331 20:25:35.215538       1 cmd.go:539] Latest installer revision for node host-10-13-0-150 is: 2
2025-03-31T20:25:35.215586256Z I0331 20:25:35.215561       1 cmd.go:428] Querying kubelet version for node host-10-13-0-150
2025-03-31T20:25:35.219008501Z I0331 20:25:35.218963       1 cmd.go:441] Got kubelet version 1.28.15+ff493be on target node host-10-13-0-150
2025-03-31T20:25:35.219008501Z I0331 20:25:35.218987       1 cmd.go:290] Creating target resource directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2" ...
2025-03-31T20:25:35.219177968Z I0331 20:25:35.219151       1 cmd.go:218] Creating target resource directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2" ...
2025-03-31T20:25:35.219177968Z I0331 20:25:35.219171       1 cmd.go:226] Getting secrets ...
2025-03-31T20:25:35.221994195Z I0331 20:25:35.221943       1 copy.go:32] Got secret openshift-kube-apiserver/etcd-client-2
2025-03-31T20:25:35.224785692Z I0331 20:25:35.224739       1 copy.go:32] Got secret openshift-kube-apiserver/localhost-recovery-client-token-2
2025-03-31T20:25:35.227949581Z I0331 20:25:35.227865       1 copy.go:32] Got secret openshift-kube-apiserver/localhost-recovery-serving-certkey-2
2025-03-31T20:25:35.230844877Z I0331 20:25:35.230802       1 copy.go:24] Failed to get secret openshift-kube-apiserver/encryption-config-2: secrets "encryption-config-2" not found
2025-03-31T20:25:35.234510447Z I0331 20:25:35.234458       1 copy.go:32] Got secret openshift-kube-apiserver/webhook-authenticator-2
2025-03-31T20:25:35.234540157Z I0331 20:25:35.234497       1 cmd.go:239] Getting config maps ...
2025-03-31T20:25:35.237191327Z I0331 20:25:35.237147       1 copy.go:60] Got configMap openshift-kube-apiserver/bound-sa-token-signing-certs-2
2025-03-31T20:25:35.239407345Z I0331 20:25:35.239369       1 copy.go:60] Got configMap openshift-kube-apiserver/config-2
2025-03-31T20:25:35.241686262Z I0331 20:25:35.241645       1 copy.go:60] Got configMap openshift-kube-apiserver/etcd-serving-ca-2
2025-03-31T20:25:35.413247234Z I0331 20:25:35.412612       1 copy.go:60] Got configMap openshift-kube-apiserver/kube-apiserver-audit-policies-2
2025-03-31T20:25:35.613314498Z I0331 20:25:35.613280       1 copy.go:60] Got configMap openshift-kube-apiserver/kube-apiserver-cert-syncer-kubeconfig-2
2025-03-31T20:25:35.813798253Z I0331 20:25:35.813763       1 copy.go:60] Got configMap openshift-kube-apiserver/kube-apiserver-pod-2
2025-03-31T20:25:36.012643400Z I0331 20:25:36.012601       1 copy.go:60] Got configMap openshift-kube-apiserver/kubelet-serving-ca-2
2025-03-31T20:25:36.212656375Z I0331 20:25:36.212618       1 copy.go:60] Got configMap openshift-kube-apiserver/sa-token-signing-certs-2
2025-03-31T20:25:36.412804717Z I0331 20:25:36.412739       1 copy.go:52] Failed to get config map openshift-kube-apiserver/cloud-config-2: configmaps "cloud-config-2" not found
2025-03-31T20:25:36.612123744Z I0331 20:25:36.612051       1 copy.go:60] Got configMap openshift-kube-apiserver/kube-apiserver-server-ca-2
2025-03-31T20:25:36.812660899Z I0331 20:25:36.812590       1 copy.go:52] Failed to get config map openshift-kube-apiserver/oauth-metadata-2: configmaps "oauth-metadata-2" not found
2025-03-31T20:25:36.812660899Z I0331 20:25:36.812619       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/etcd-client" ...
2025-03-31T20:25:36.812861314Z I0331 20:25:36.812810       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/etcd-client/tls.crt" ...
2025-03-31T20:25:36.813068091Z I0331 20:25:36.813025       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/etcd-client/tls.key" ...
2025-03-31T20:25:36.813220287Z I0331 20:25:36.813189       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-client-token" ...
2025-03-31T20:25:36.813297437Z I0331 20:25:36.813261       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-client-token/namespace" ...
2025-03-31T20:25:36.813416284Z I0331 20:25:36.813390       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-client-token/token" ...
2025-03-31T20:25:36.813536261Z I0331 20:25:36.813510       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-client-token/ca.crt" ...
2025-03-31T20:25:36.813735998Z I0331 20:25:36.813707       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-serving-certkey" ...
2025-03-31T20:25:36.813808966Z I0331 20:25:36.813785       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-serving-certkey/tls.crt" ...
2025-03-31T20:25:36.814005343Z I0331 20:25:36.813960       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/localhost-recovery-serving-certkey/tls.key" ...
2025-03-31T20:25:36.814116900Z I0331 20:25:36.814091       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/webhook-authenticator" ...
2025-03-31T20:25:36.814188130Z I0331 20:25:36.814162       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/secrets/webhook-authenticator/kubeConfig" ...
2025-03-31T20:25:36.814319417Z I0331 20:25:36.814294       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/bound-sa-token-signing-certs" ...
2025-03-31T20:25:36.814452985Z I0331 20:25:36.814427       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/bound-sa-token-signing-certs/service-account-001.pub" ...
2025-03-31T20:25:36.814584612Z I0331 20:25:36.814560       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/config" ...
2025-03-31T20:25:36.814654360Z I0331 20:25:36.814630       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/config/config.yaml" ...
2025-03-31T20:25:36.814790558Z I0331 20:25:36.814765       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/etcd-serving-ca" ...
2025-03-31T20:25:36.814867547Z I0331 20:25:36.814843       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/etcd-serving-ca/ca-bundle.crt" ...
2025-03-31T20:25:36.815020333Z I0331 20:25:36.814994       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-audit-policies" ...
2025-03-31T20:25:36.815088173Z I0331 20:25:36.815064       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-audit-policies/policy.yaml" ...
2025-03-31T20:25:36.815216250Z I0331 20:25:36.815189       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-cert-syncer-kubeconfig" ...
2025-03-31T20:25:36.815316528Z I0331 20:25:36.815256       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig" ...
2025-03-31T20:25:36.815406017Z I0331 20:25:36.815380       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-pod" ...
2025-03-31T20:25:36.815473875Z I0331 20:25:36.815449       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-pod/forceRedeploymentReason" ...
2025-03-31T20:25:36.815613942Z I0331 20:25:36.815559       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-pod/pod.yaml" ...
2025-03-31T20:25:36.815712931Z I0331 20:25:36.815688       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-pod/version" ...
2025-03-31T20:25:36.815835278Z I0331 20:25:36.815810       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kubelet-serving-ca" ...
2025-03-31T20:25:36.815964536Z I0331 20:25:36.815939       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kubelet-serving-ca/ca-bundle.crt" ...
2025-03-31T20:25:36.816110583Z I0331 20:25:36.816083       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/sa-token-signing-certs" ...
2025-03-31T20:25:36.816191481Z I0331 20:25:36.816164       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/sa-token-signing-certs/service-account-001.pub" ...
2025-03-31T20:25:36.816317799Z I0331 20:25:36.816293       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-server-ca" ...
2025-03-31T20:25:36.816390278Z I0331 20:25:36.816365       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/configmaps/kube-apiserver-server-ca/ca-bundle.crt" ...
2025-03-31T20:25:36.816522905Z I0331 20:25:36.816498       1 cmd.go:218] Creating target resource directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs" ...
2025-03-31T20:25:36.816589384Z I0331 20:25:36.816567       1 cmd.go:226] Getting secrets ...
2025-03-31T20:25:37.012384928Z I0331 20:25:37.012327       1 copy.go:32] Got secret openshift-kube-apiserver/aggregator-client
2025-03-31T20:25:37.212989402Z I0331 20:25:37.212941       1 copy.go:32] Got secret openshift-kube-apiserver/bound-service-account-signing-key
2025-03-31T20:25:37.413472187Z I0331 20:25:37.413407       1 copy.go:32] Got secret openshift-kube-apiserver/check-endpoints-client-cert-key
2025-03-31T20:25:37.613006660Z I0331 20:25:37.612831       1 copy.go:32] Got secret openshift-kube-apiserver/control-plane-node-admin-client-cert-key
2025-03-31T20:25:37.813395917Z I0331 20:25:37.813277       1 copy.go:32] Got secret openshift-kube-apiserver/external-loadbalancer-serving-certkey
2025-03-31T20:25:38.015507362Z I0331 20:25:38.015432       1 copy.go:32] Got secret openshift-kube-apiserver/internal-loadbalancer-serving-certkey
2025-03-31T20:25:38.213300658Z I0331 20:25:38.213244       1 copy.go:32] Got secret openshift-kube-apiserver/kubelet-client
2025-03-31T20:25:38.412258892Z I0331 20:25:38.412175       1 copy.go:32] Got secret openshift-kube-apiserver/localhost-serving-cert-certkey
2025-03-31T20:25:38.614182951Z I0331 20:25:38.614091       1 copy.go:32] Got secret openshift-kube-apiserver/node-kubeconfigs
2025-03-31T20:25:38.812650484Z I0331 20:25:38.812494       1 copy.go:32] Got secret openshift-kube-apiserver/service-network-serving-certkey
2025-03-31T20:25:39.012669859Z I0331 20:25:39.012605       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert: secrets "user-serving-cert" not found
2025-03-31T20:25:39.212794861Z I0331 20:25:39.212683       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-000: secrets "user-serving-cert-000" not found
2025-03-31T20:25:39.412639478Z I0331 20:25:39.412568       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-001: secrets "user-serving-cert-001" not found
2025-03-31T20:25:39.612750691Z I0331 20:25:39.612658       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-002: secrets "user-serving-cert-002" not found
2025-03-31T20:25:39.812329373Z I0331 20:25:39.812240       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-003: secrets "user-serving-cert-003" not found
2025-03-31T20:25:40.013380658Z I0331 20:25:40.013321       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-004: secrets "user-serving-cert-004" not found
2025-03-31T20:25:40.211679195Z I0331 20:25:40.211619       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-005: secrets "user-serving-cert-005" not found
2025-03-31T20:25:40.413297098Z I0331 20:25:40.413233       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-006: secrets "user-serving-cert-006" not found
2025-03-31T20:25:40.612509578Z I0331 20:25:40.612413       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-007: secrets "user-serving-cert-007" not found
2025-03-31T20:25:40.812898775Z I0331 20:25:40.812764       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-008: secrets "user-serving-cert-008" not found
2025-03-31T20:25:41.012960829Z I0331 20:25:41.012860       1 copy.go:24] Failed to get secret openshift-kube-apiserver/user-serving-cert-009: secrets "user-serving-cert-009" not found
2025-03-31T20:25:41.012960829Z I0331 20:25:41.012932       1 cmd.go:239] Getting config maps ...
2025-03-31T20:25:41.212798856Z I0331 20:25:41.212770       1 copy.go:60] Got configMap openshift-kube-apiserver/aggregator-client-ca
2025-03-31T20:25:41.414124896Z I0331 20:25:41.414064       1 copy.go:60] Got configMap openshift-kube-apiserver/check-endpoints-kubeconfig
2025-03-31T20:25:41.613050021Z I0331 20:25:41.613005       1 copy.go:60] Got configMap openshift-kube-apiserver/client-ca
2025-03-31T20:25:41.813053665Z I0331 20:25:41.813007       1 copy.go:60] Got configMap openshift-kube-apiserver/control-plane-node-kubeconfig
2025-03-31T20:25:42.020664356Z I0331 20:25:42.020616       1 copy.go:60] Got configMap openshift-kube-apiserver/trusted-ca-bundle
2025-03-31T20:25:42.021297944Z I0331 20:25:42.021250       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/aggregator-client" ...
2025-03-31T20:25:42.021492471Z I0331 20:25:42.021468       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/aggregator-client/tls.key" ...
2025-03-31T20:25:42.021671837Z I0331 20:25:42.021648       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/aggregator-client/tls.crt" ...
2025-03-31T20:25:42.021806315Z I0331 20:25:42.021784       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/bound-service-account-signing-key" ...
2025-03-31T20:25:42.021877533Z I0331 20:25:42.021857       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/bound-service-account-signing-key/service-account.pub" ...
2025-03-31T20:25:42.022179437Z I0331 20:25:42.022156       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/bound-service-account-signing-key/service-account.key" ...
2025-03-31T20:25:42.022349194Z I0331 20:25:42.022310       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/check-endpoints-client-cert-key" ...
2025-03-31T20:25:42.022408113Z I0331 20:25:42.022386       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/check-endpoints-client-cert-key/tls.crt" ...
2025-03-31T20:25:42.022545040Z I0331 20:25:42.022519       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/check-endpoints-client-cert-key/tls.key" ...
2025-03-31T20:25:42.022672607Z I0331 20:25:42.022652       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/control-plane-node-admin-client-cert-key" ...
2025-03-31T20:25:42.022740457Z I0331 20:25:42.022722       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/control-plane-node-admin-client-cert-key/tls.key" ...
2025-03-31T20:25:42.023128559Z I0331 20:25:42.022914       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/control-plane-node-admin-client-cert-key/tls.crt" ...
2025-03-31T20:25:42.023128559Z I0331 20:25:42.023050       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/external-loadbalancer-serving-certkey" ...
2025-03-31T20:25:42.023180088Z I0331 20:25:42.023157       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/external-loadbalancer-serving-certkey/tls.crt" ...
2025-03-31T20:25:42.023366565Z I0331 20:25:42.023349       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/external-loadbalancer-serving-certkey/tls.key" ...
2025-03-31T20:25:42.023546281Z I0331 20:25:42.023527       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/internal-loadbalancer-serving-certkey" ...
2025-03-31T20:25:42.023625330Z I0331 20:25:42.023608       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/internal-loadbalancer-serving-certkey/tls.crt" ...
2025-03-31T20:25:42.023753507Z I0331 20:25:42.023733       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/internal-loadbalancer-serving-certkey/tls.key" ...
2025-03-31T20:25:42.023876615Z I0331 20:25:42.023858       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/kubelet-client" ...
2025-03-31T20:25:42.023990683Z I0331 20:25:42.023973       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/kubelet-client/tls.crt" ...
2025-03-31T20:25:42.024259638Z I0331 20:25:42.024101       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/kubelet-client/tls.key" ...
2025-03-31T20:25:42.024259638Z I0331 20:25:42.024240       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/localhost-serving-cert-certkey" ...
2025-03-31T20:25:42.024328927Z I0331 20:25:42.024312       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/localhost-serving-cert-certkey/tls.key" ...
2025-03-31T20:25:42.024455614Z I0331 20:25:42.024437       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/localhost-serving-cert-certkey/tls.crt" ...
2025-03-31T20:25:42.024585252Z I0331 20:25:42.024568       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs" ...
2025-03-31T20:25:42.024662820Z I0331 20:25:42.024646       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/lb-ext.kubeconfig" ...
2025-03-31T20:25:42.024987004Z I0331 20:25:42.024966       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/lb-int.kubeconfig" ...
2025-03-31T20:25:42.025140181Z I0331 20:25:42.025122       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/localhost-recovery.kubeconfig" ...
2025-03-31T20:25:42.025275158Z I0331 20:25:42.025258       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/node-kubeconfigs/localhost.kubeconfig" ...
2025-03-31T20:25:42.025522724Z I0331 20:25:42.025462       1 cmd.go:258] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/service-network-serving-certkey" ...
2025-03-31T20:25:42.025567563Z I0331 20:25:42.025549       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/service-network-serving-certkey/tls.key" ...
2025-03-31T20:25:42.025697491Z I0331 20:25:42.025678       1 cmd.go:636] Writing secret manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/secrets/service-network-serving-certkey/tls.crt" ...
2025-03-31T20:25:42.025821878Z I0331 20:25:42.025804       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/aggregator-client-ca" ...
2025-03-31T20:25:42.025965965Z I0331 20:25:42.025948       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/aggregator-client-ca/ca-bundle.crt" ...
2025-03-31T20:25:42.026095233Z I0331 20:25:42.026079       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/check-endpoints-kubeconfig" ...
2025-03-31T20:25:42.026164992Z I0331 20:25:42.026149       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/check-endpoints-kubeconfig/kubeconfig" ...
2025-03-31T20:25:42.026292450Z I0331 20:25:42.026277       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/client-ca" ...
2025-03-31T20:25:42.026364188Z I0331 20:25:42.026348       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/client-ca/ca-bundle.crt" ...
2025-03-31T20:25:42.026564694Z I0331 20:25:42.026547       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/control-plane-node-kubeconfig" ...
2025-03-31T20:25:42.026644373Z I0331 20:25:42.026628       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/control-plane-node-kubeconfig/kubeconfig" ...
2025-03-31T20:25:42.026779400Z I0331 20:25:42.026762       1 cmd.go:274] Creating directory "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/trusted-ca-bundle" ...
2025-03-31T20:25:42.026949897Z I0331 20:25:42.026915       1 cmd.go:626] Writing config file "/etc/kubernetes/static-pod-resources/kube-apiserver-certs/configmaps/trusted-ca-bundle/ca-bundle.crt" ...
2025-03-31T20:25:42.027277831Z I0331 20:25:42.027260       1 cmd.go:332] Getting pod configmaps/kube-apiserver-pod-2 -n openshift-kube-apiserver
2025-03-31T20:25:42.212711091Z I0331 20:25:42.212681       1 cmd.go:348] Creating directory for static pod manifest "/etc/kubernetes/manifests" ...
2025-03-31T20:25:42.212765790Z I0331 20:25:42.212752       1 cmd.go:376] Writing a pod under "kube-apiserver-pod.yaml" key 
2025-03-31T20:25:42.212765790Z {"kind":"Pod","apiVersion":"v1","metadata":{"name":"kube-apiserver","namespace":"openshift-kube-apiserver","creationTimestamp":null,"labels":{"apiserver":"true","app":"openshift-kube-apiserver","revision":"2"},"annotations":{"kubectl.kubernetes.io/default-container":"kube-apiserver","target.workload.openshift.io/management":"{\"effect\": \"PreferredDuringScheduling\"}"}},"spec":{"volumes":[{"name":"resource-dir","hostPath":{"path":"/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2"}},{"name":"cert-dir","hostPath":{"path":"/etc/kubernetes/static-pod-resources/kube-apiserver-certs"}},{"name":"audit-dir","hostPath":{"path":"/var/log/kube-apiserver"}}],"initContainers":[{"name":"setup","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e218805f1f34f8d4fdb6c4b230e792fd70ee947b173d1c16439c893c4c5342ea","command":["/usr/bin/timeout","220","/bin/bash","-ec"],"args":["echo \"Fixing audit permissions ...\"\nchmod 0700 /var/log/kube-apiserver \u0026\u0026 touch /var/log/kube-apiserver/audit.log \u0026\u0026 chmod 0600 /var/log/kube-apiserver/*\n\nLOCK=/var/log/kube-apiserver/.lock\necho \"Acquiring exclusive lock ${LOCK} ...\"\n\n# Waiting for 135s max for old kube-apiserver's watch-termination process to exit and remove the lock.\n# Two cases:\n# 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.\n# 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.\n#\n# NOTE: We can increase 135s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.\n# NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds\nexec {LOCK_FD}\u003e${LOCK} \u0026\u0026 flock --verbose -w 135 \"${LOCK_FD}\" || {\n  echo \"$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one\" \u003e\u003e /var/log/kube-apiserver/lock.log\n  echo -n \": WARNING: kubelet did not terminate old kube-apiserver before new one.\"\n\n  # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.\n  # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.\n  #\n  # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.\n  echo -n \"Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O \"\n  while [ -n \"$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')\" ]; do\n    echo -n \".\"\n    sleep 1\n    (( tries += 1 ))\n    if [[ \"${tries}\" -gt 10 ]]; then\n      echo \"Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O\"\n      exit 1\n    fi\n  done\n  #  This is to make sure the server has terminated independently from the lock.\n  #  After the port has been freed (requests can be pending and need 60s max).\n  sleep 65\n}\n# We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.\nflock -u \"${LOCK_FD}\"\n"],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"name":"audit-dir","mountPath":"/var/log/kube-apiserver"}],"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}}],"containers":[{"name":"kube-apiserver","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e218805f1f34f8d4fdb6c4b230e792fd70ee947b173d1c16439c893c4c5342ea","command":["/bin/bash","-ec"],"args":["LOCK=/var/log/kube-apiserver/.lock\n# We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.\nexec {LOCK_FD}\u003e${LOCK} \u0026\u0026 flock --verbose -w 30 \"${LOCK_FD}\" || {\n  echo \"Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug.\"\n  exit 1\n}\nif [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then\n  echo \"Copying system trust bundle ...\"\n  cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\n\nexec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=135s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing\n"],"ports":[{"containerPort":6443}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"STATIC_POD_VERSION","value":"2"},{"name":"HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"GOGC","value":"100"}],"resources":{"requests":{"cpu":"265m","memory":"1Gi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs"},{"name":"audit-dir","mountPath":"/var/log/kube-apiserver"}],"livenessProbe":{"httpGet":{"path":"livez","port":6443,"scheme":"HTTPS"},"timeoutSeconds":10,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"readyz","port":6443,"scheme":"HTTPS"},"timeoutSeconds":10,"periodSeconds":5,"successThreshold":1,"failureThreshold":1},"startupProbe":{"httpGet":{"path":"healthz","port":6443,"scheme":"HTTPS"},"timeoutSeconds":10,"periodSeconds":5,"successThreshold":1,"failureThreshold":30},"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}},{"name":"kube-apiserver-cert-syncer","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","cert-syncer"],"args":["--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig","--namespace=$(POD_NAMESPACE)","--destination-dir=/etc/kubernetes/static-pod-certs"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs"}],"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"kube-apiserver-cert-regeneration-controller","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","cert-regeneration-controller"],"args":["--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig","--namespace=$(POD_NAMESPACE)","-v=2"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"}],"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"kube-apiserver-insecure-readyz","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","insecure-readyz"],"args":["--insecure-port=6080","--delegate-url=https://localhost:6443/readyz"],"ports":[{"containerPort":6080}],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"kube-apiserver-check-endpoints","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","check-endpoints"],"args":["--kubeconfig","/etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig","--listen","0.0.0.0:17697","--namespace","$(POD_NAMESPACE)","--v","2"],"ports":[{"name":"check-endpoints","hostPort":17697,"containerPort":17697,"protocol":"TCP"}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"resources":{"requests":{"cpu":"10m","memory":"50Mi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs"}],"livenessProbe":{"httpGet":{"path":"healthz","port":17697,"scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":10},"readinessProbe":{"httpGet":{"path":"healthz","port":17697,"scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":10},"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"}],"terminationGracePeriodSeconds":135,"hostNetwork":true,"tolerations":[{"operator":"Exists"}],"priorityClassName":"system-node-critical"},"status":{}}
2025-03-31T20:25:42.215276742Z I0331 20:25:42.215252       1 cmd.go:607] Writing pod manifest "/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2/kube-apiserver-pod.yaml" ...
2025-03-31T20:25:42.215406120Z I0331 20:25:42.215391       1 cmd.go:618] Writing static pod manifest "/etc/kubernetes/manifests/kube-apiserver-pod.yaml" ...
2025-03-31T20:25:42.215406120Z {"kind":"Pod","apiVersion":"v1","metadata":{"name":"kube-apiserver","namespace":"openshift-kube-apiserver","creationTimestamp":null,"labels":{"apiserver":"true","app":"openshift-kube-apiserver","revision":"2"},"annotations":{"kubectl.kubernetes.io/default-container":"kube-apiserver","target.workload.openshift.io/management":"{\"effect\": \"PreferredDuringScheduling\"}"}},"spec":{"volumes":[{"name":"resource-dir","hostPath":{"path":"/etc/kubernetes/static-pod-resources/kube-apiserver-pod-2"}},{"name":"cert-dir","hostPath":{"path":"/etc/kubernetes/static-pod-resources/kube-apiserver-certs"}},{"name":"audit-dir","hostPath":{"path":"/var/log/kube-apiserver"}}],"initContainers":[{"name":"setup","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e218805f1f34f8d4fdb6c4b230e792fd70ee947b173d1c16439c893c4c5342ea","command":["/usr/bin/timeout","220","/bin/bash","-ec"],"args":["echo \"Fixing audit permissions ...\"\nchmod 0700 /var/log/kube-apiserver \u0026\u0026 touch /var/log/kube-apiserver/audit.log \u0026\u0026 chmod 0600 /var/log/kube-apiserver/*\n\nLOCK=/var/log/kube-apiserver/.lock\necho \"Acquiring exclusive lock ${LOCK} ...\"\n\n# Waiting for 135s max for old kube-apiserver's watch-termination process to exit and remove the lock.\n# Two cases:\n# 1. if kubelet does not start the old and new in parallel (i.e. works as expected), the flock will always succeed without any time.\n# 2. if kubelet does overlap old and new pods for up to 130s, the flock will wait and immediate return when the old finishes.\n#\n# NOTE: We can increase 135s for a bigger expected overlap. But a higher value means less noise about the broken kubelet behaviour, i.e. we hide a bug.\n# NOTE: Do not tweak these timings without considering the livenessProbe initialDelaySeconds\nexec {LOCK_FD}\u003e${LOCK} \u0026\u0026 flock --verbose -w 135 \"${LOCK_FD}\" || {\n  echo \"$(date -Iseconds -u) kubelet did not terminate old kube-apiserver before new one\" \u003e\u003e /var/log/kube-apiserver/lock.log\n  echo -n \": WARNING: kubelet did not terminate old kube-apiserver before new one.\"\n\n  # We failed to acquire exclusive lock, which means there is old kube-apiserver running in system.\n  # Since we utilize SO_REUSEPORT, we need to make sure the old kube-apiserver stopped listening.\n  #\n  # NOTE: This is a fallback for broken kubelet, if you observe this please report a bug.\n  echo -n \"Waiting for port 6443 to be released due to likely bug in kubelet or CRI-O \"\n  while [ -n \"$(ss -Htan state listening '( sport = 6443 or sport = 6080 )')\" ]; do\n    echo -n \".\"\n    sleep 1\n    (( tries += 1 ))\n    if [[ \"${tries}\" -gt 10 ]]; then\n      echo \"Timed out waiting for port :6443 and :6080 to be released, this is likely a bug in kubelet or CRI-O\"\n      exit 1\n    fi\n  done\n  #  This is to make sure the server has terminated independently from the lock.\n  #  After the port has been freed (requests can be pending and need 60s max).\n  sleep 65\n}\n# We cannot hold the lock from the init container to the main container. We release it here. There is no risk, at this point we know we are safe.\nflock -u \"${LOCK_FD}\"\n"],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"name":"audit-dir","mountPath":"/var/log/kube-apiserver"}],"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}}],"containers":[{"name":"kube-apiserver","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:e218805f1f34f8d4fdb6c4b230e792fd70ee947b173d1c16439c893c4c5342ea","command":["/bin/bash","-ec"],"args":["LOCK=/var/log/kube-apiserver/.lock\n# We should be able to acquire the lock immediatelly. If not, it means the init container has not released it yet and kubelet or CRI-O started container prematurely.\nexec {LOCK_FD}\u003e${LOCK} \u0026\u0026 flock --verbose -w 30 \"${LOCK_FD}\" || {\n  echo \"Failed to acquire lock for kube-apiserver. Please check setup container for details. This is likely kubelet or CRI-O bug.\"\n  exit 1\n}\nif [ -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt ]; then\n  echo \"Copying system trust bundle ...\"\n  cp -f /etc/kubernetes/static-pod-certs/configmaps/trusted-ca-bundle/ca-bundle.crt /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem\nfi\n\nexec watch-termination --termination-touch-file=/var/log/kube-apiserver/.terminating --termination-log-file=/var/log/kube-apiserver/termination.log --graceful-termination-duration=135s --kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig -- hyperkube kube-apiserver --openshift-config=/etc/kubernetes/static-pod-resources/configmaps/config/config.yaml --advertise-address=${HOST_IP}  -v=2 --permit-address-sharing\n"],"ports":[{"containerPort":6443}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"STATIC_POD_VERSION","value":"2"},{"name":"HOST_IP","valueFrom":{"fieldRef":{"fieldPath":"status.hostIP"}}},{"name":"GOGC","value":"100"}],"resources":{"requests":{"cpu":"265m","memory":"1Gi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs"},{"name":"audit-dir","mountPath":"/var/log/kube-apiserver"}],"livenessProbe":{"httpGet":{"path":"livez","port":6443,"scheme":"HTTPS"},"timeoutSeconds":10,"periodSeconds":10,"successThreshold":1,"failureThreshold":3},"readinessProbe":{"httpGet":{"path":"readyz","port":6443,"scheme":"HTTPS"},"timeoutSeconds":10,"periodSeconds":5,"successThreshold":1,"failureThreshold":1},"startupProbe":{"httpGet":{"path":"healthz","port":6443,"scheme":"HTTPS"},"timeoutSeconds":10,"periodSeconds":5,"successThreshold":1,"failureThreshold":30},"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent","securityContext":{"privileged":true}},{"name":"kube-apiserver-cert-syncer","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","cert-syncer"],"args":["--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig","--namespace=$(POD_NAMESPACE)","--destination-dir=/etc/kubernetes/static-pod-certs"],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs"}],"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"kube-apiserver-cert-regeneration-controller","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","cert-regeneration-controller"],"args":["--kubeconfig=/etc/kubernetes/static-pod-resources/configmaps/kube-apiserver-cert-syncer-kubeconfig/kubeconfig","--namespace=$(POD_NAMESPACE)","-v=2"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"}],"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"kube-apiserver-insecure-readyz","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","insecure-readyz"],"args":["--insecure-port=6080","--delegate-url=https://localhost:6443/readyz"],"ports":[{"containerPort":6080}],"resources":{"requests":{"cpu":"5m","memory":"50Mi"}},"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"},{"name":"kube-apiserver-check-endpoints","image":"quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f4a24bd60df1b26f78d0b571c428b59581afd273284f020978735f3772d1a24a","command":["cluster-kube-apiserver-operator","check-endpoints"],"args":["--kubeconfig","/etc/kubernetes/static-pod-certs/configmaps/check-endpoints-kubeconfig/kubeconfig","--listen","0.0.0.0:17697","--namespace","$(POD_NAMESPACE)","--v","2"],"ports":[{"name":"check-endpoints","hostPort":17697,"containerPort":17697,"protocol":"TCP"}],"env":[{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"resources":{"requests":{"cpu":"10m","memory":"50Mi"}},"volumeMounts":[{"name":"resource-dir","mountPath":"/etc/kubernetes/static-pod-resources"},{"name":"cert-dir","mountPath":"/etc/kubernetes/static-pod-certs"}],"livenessProbe":{"httpGet":{"path":"healthz","port":17697,"scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":10},"readinessProbe":{"httpGet":{"path":"healthz","port":17697,"scheme":"HTTPS"},"initialDelaySeconds":10,"timeoutSeconds":10},"terminationMessagePolicy":"FallbackToLogsOnError","imagePullPolicy":"IfNotPresent"}],"terminationGracePeriodSeconds":135,"hostNetwork":true,"tolerations":[{"operator":"Exists"}],"priorityClassName":"system-node-critical"},"status":{}}
