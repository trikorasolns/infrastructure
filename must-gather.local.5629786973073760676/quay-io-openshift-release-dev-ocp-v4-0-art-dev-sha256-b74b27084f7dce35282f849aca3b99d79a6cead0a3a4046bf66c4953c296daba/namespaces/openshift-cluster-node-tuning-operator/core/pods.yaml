---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.10/23"],"mac_address":"0a:58:0a:80:00:0a","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.10/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.10"
            ],
            "mac": "0a:58:0a:80:00:0a",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: anyuid
      openshift.io/scc: anyuid
    creationTimestamp: "2025-03-31T20:17:19Z"
    generateName: cluster-node-tuning-operator-76d77bff68-
    labels:
      name: cluster-node-tuning-operator
      pod-template-hash: 76d77bff68
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"0df6ed94-9f57-4a6c-b851-0c54b7272df5"}: {}
        f:spec:
          f:containers:
            k:{"name":"cluster-node-tuning-operator"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":60000,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/apiserver.local.config/certificates"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/run/configmaps/trusted-ca/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"apiservice-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
            k:{"name":"node-tuning-operator-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"trusted-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-03-31T20:17:19Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-0-150
      operation: Update
      subresource: status
      time: "2025-03-31T20:21:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:22:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.10"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:40:23Z"
    name: cluster-node-tuning-operator-76d77bff68-4jbpz
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cluster-node-tuning-operator-76d77bff68
      uid: 0df6ed94-9f57-4a6c-b851-0c54b7272df5
    resourceVersion: "72950"
    uid: 43bc3e83-dbca-4262-9856-6600df20e534
  spec:
    containers:
    - args:
      - -v=0
      command:
      - cluster-node-tuning-operator
      env:
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: RESYNC_PERIOD
        value: "600"
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: cluster-node-tuning-operator
      ports:
      - containerPort: 60000
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - MKNOD
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/secrets
        name: node-tuning-operator-tls
      - mountPath: /var/run/configmaps/trusted-ca/
        name: trusted-ca
      - mountPath: /apiserver.local.config/certificates
        name: apiservice-cert
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-k2hjl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-0-150
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 499
      seLinuxOptions:
        level: s0:c16,c15
    serviceAccount: cluster-node-tuning-operator
    serviceAccountName: cluster-node-tuning-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: node-tuning-operator-tls
      secret:
        defaultMode: 420
        secretName: node-tuning-operator-tls
    - name: apiservice-cert
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: apiserver.crt
        - key: tls.key
          path: apiserver.key
        secretName: performance-addon-operator-webhook-cert
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: trusted-ca
        optional: true
      name: trusted-ca
    - name: kube-api-access-k2hjl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:40:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:40:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e570318ed3cc063390fac8d15b95c3e650be521df64948c55e02090370277f50
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState:
        terminated:
          containerID: cri-o://ce2aeb429479745a4b5bd6ace7ebacaa45f5bb283da03db574283a6283a7deb0
          exitCode: 1
          finishedAt: "2025-03-31T20:40:09Z"
          message: |
            ase apply your changes to the latest version and try again
            E0331 20:32:13.344272       1 controller.go:197] unable to sync(profile/openshift-cluster-node-tuning-operator/host-10-13-2-89) requeued (4): failed to sync Profile host-10-13-2-89: failed to sync OperatorStatus: Operation cannot be fulfilled on clusteroperators.config.openshift.io "node-tuning": the object has been modified; please apply your changes to the latest version and try again
            {"level":"info","ts":"2025-03-31T20:32:13Z","msg":"Starting workers","controller":"performanceprofile","controllerGroup":"performance.openshift.io","controllerKind":"PerformanceProfile","worker count":1}
            E0331 20:39:17.384286       1 leaderelection.go:327] error retrieving resource lock openshift-cluster-node-tuning-operator/node-tuning-operator-lock: the server was unable to return a response in the time allotted, but may still be processing the request (get leases.coordination.k8s.io node-tuning-operator-lock)
            E0331 20:40:04.381489       1 leaderelection.go:327] error retrieving resource lock openshift-cluster-node-tuning-operator/node-tuning-operator-lock: Get "https://172.30.0.1:443/apis/coordination.k8s.io/v1/namespaces/openshift-cluster-node-tuning-operator/leases/node-tuning-operator-lock": context deadline exceeded
            I0331 20:40:04.381572       1 leaderelection.go:280] failed to renew lease openshift-cluster-node-tuning-operator/node-tuning-operator-lock: timed out waiting for the condition
            {"level":"info","ts":"2025-03-31T20:40:09Z","msg":"Stopping and waiting for non leader election runnables"}
            {"level":"info","ts":"2025-03-31T20:40:09Z","msg":"Stopping and waiting for leader election runnables"}
            {"level":"info","ts":"2025-03-31T20:40:09Z","msg":"Stopping and waiting for caches"}
            {"level":"info","ts":"2025-03-31T20:40:09Z","msg":"Stopping and waiting for webhooks"}
            {"level":"info","ts":"2025-03-31T20:40:09Z","msg":"Wait completed, proceeding to shutdown the manager"}
            F0331 20:40:09.402559       1 main.go:205] manager exited with non-zero code: leader election lost
          reason: Error
          startedAt: "2025-03-31T20:32:13Z"
      name: cluster-node-tuning-operator
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:40:23Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.128.0.10
    podIPs:
    - ip: 10.128.0.10
    qosClass: Burstable
    startTime: "2025-03-31T20:21:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
    creationTimestamp: "2025-04-01T08:32:57Z"
    generateName: tuned-
    labels:
      controller-revision-hash: 6dd9b798d
      openshift-app: tuned
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:openshift-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fc389de-deb8-4296-9541-8c8e90356eea"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"tuned"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysctl.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/sysctl.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostIPC: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysconfig"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-systemd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:32:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:33:43Z"
    name: tuned-8mldx
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: tuned
      uid: 8fc389de-deb8-4296-9541-8c8e90356eea
    resourceVersion: "259056"
    uid: 2817df03-b18f-46b8-a882-e6f9b7c6d539
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-120
    containers:
    - command:
      - /usr/bin/cluster-node-tuning-operator
      - openshift-tuned
      - --in-cluster
      - -v=0
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OCP_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: RESYNC_PERIOD
        value: "600"
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: tuned
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/modprobe.d
        mountPropagation: HostToContainer
        name: etc-modprobe-d
      - mountPath: /etc/sysconfig
        mountPropagation: HostToContainer
        name: etc-sysconfig
      - mountPath: /etc/kubernetes
        mountPropagation: HostToContainer
        name: etc-kubernetes
        readOnly: true
      - mountPath: /etc/sysctl.d
        mountPropagation: HostToContainer
        name: etc-sysctl-d
        readOnly: true
      - mountPath: /etc/sysctl.conf
        mountPropagation: HostToContainer
        name: etc-sysctl-conf
        readOnly: true
      - mountPath: /etc/systemd
        mountPropagation: HostToContainer
        name: etc-systemd
      - mountPath: /run
        mountPropagation: HostToContainer
        name: run
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /lib/modules
        mountPropagation: HostToContainer
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: var-lib-kubelet
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q7pn5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostIPC: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tuned
    serviceAccountName: tuned
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: Directory
      name: etc-modprobe-d
    - hostPath:
        path: /etc/sysconfig
        type: Directory
      name: etc-sysconfig
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: etc-kubernetes
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: etc-sysctl-d
    - hostPath:
        path: /etc/sysctl.conf
        type: File
      name: etc-sysctl-conf
    - hostPath:
        path: /etc/systemd
        type: Directory
      name: etc-systemd
    - hostPath:
        path: /run
        type: Directory
      name: run
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - hostPath:
        path: /lib/modules
        type: Directory
      name: lib-modules
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: var-lib-kubelet
    - hostPath:
        path: /
        type: Directory
      name: host
    - name: kube-api-access-q7pn5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://43f9110118eb762dcbab84dc44ea2f21d796d5e7506842dd26ba338a9b3c39f4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState: {}
      name: tuned
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:33:42Z"
    hostIP: 10.13.3.120
    phase: Running
    podIP: 10.13.3.120
    podIPs:
    - ip: 10.13.3.120
    qosClass: Burstable
    startTime: "2025-04-01T08:33:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
    creationTimestamp: "2025-03-31T20:23:45Z"
    generateName: tuned-
    labels:
      controller-revision-hash: 6dd9b798d
      openshift-app: tuned
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:openshift-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fc389de-deb8-4296-9541-8c8e90356eea"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"tuned"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysctl.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/sysctl.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostIPC: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysconfig"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-systemd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.0.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: tuned-c4b8w
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: tuned
      uid: 8fc389de-deb8-4296-9541-8c8e90356eea
    resourceVersion: "68210"
    uid: e31cef0b-cf47-403a-aa2d-61190533a757
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-0-150
    containers:
    - command:
      - /usr/bin/cluster-node-tuning-operator
      - openshift-tuned
      - --in-cluster
      - -v=0
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OCP_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: RESYNC_PERIOD
        value: "600"
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: tuned
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/modprobe.d
        mountPropagation: HostToContainer
        name: etc-modprobe-d
      - mountPath: /etc/sysconfig
        mountPropagation: HostToContainer
        name: etc-sysconfig
      - mountPath: /etc/kubernetes
        mountPropagation: HostToContainer
        name: etc-kubernetes
        readOnly: true
      - mountPath: /etc/sysctl.d
        mountPropagation: HostToContainer
        name: etc-sysctl-d
        readOnly: true
      - mountPath: /etc/sysctl.conf
        mountPropagation: HostToContainer
        name: etc-sysctl-conf
        readOnly: true
      - mountPath: /etc/systemd
        mountPropagation: HostToContainer
        name: etc-systemd
      - mountPath: /run
        mountPropagation: HostToContainer
        name: run
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /lib/modules
        mountPropagation: HostToContainer
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: var-lib-kubelet
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-x4vdt
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostIPC: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tuned
    serviceAccountName: tuned
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: Directory
      name: etc-modprobe-d
    - hostPath:
        path: /etc/sysconfig
        type: Directory
      name: etc-sysconfig
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: etc-kubernetes
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: etc-sysctl-d
    - hostPath:
        path: /etc/sysctl.conf
        type: File
      name: etc-sysctl-conf
    - hostPath:
        path: /etc/systemd
        type: Directory
      name: etc-systemd
    - hostPath:
        path: /run
        type: Directory
      name: run
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - hostPath:
        path: /lib/modules
        type: Directory
      name: lib-modules
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: var-lib-kubelet
    - hostPath:
        path: /
        type: Directory
      name: host
    - name: kube-api-access-x4vdt
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f49b5351c4e4a6f8477aa8020cd1f6a18e6a2f786374e7626b01521884bb3aff
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState: {}
      name: tuned
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:45Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.13.0.150
    podIPs:
    - ip: 10.13.0.150
    qosClass: Burstable
    startTime: "2025-03-31T20:23:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
    creationTimestamp: "2025-04-01T08:33:00Z"
    generateName: tuned-
    labels:
      controller-revision-hash: 6dd9b798d
      openshift-app: tuned
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:openshift-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fc389de-deb8-4296-9541-8c8e90356eea"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"tuned"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysctl.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/sysctl.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostIPC: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysconfig"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-systemd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:09Z"
    name: tuned-gsmzj
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: tuned
      uid: 8fc389de-deb8-4296-9541-8c8e90356eea
    resourceVersion: "259328"
    uid: 2a8d13c4-91ef-4433-860a-63c1ab56a1db
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-1
    containers:
    - command:
      - /usr/bin/cluster-node-tuning-operator
      - openshift-tuned
      - --in-cluster
      - -v=0
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OCP_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: RESYNC_PERIOD
        value: "600"
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: tuned
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/modprobe.d
        mountPropagation: HostToContainer
        name: etc-modprobe-d
      - mountPath: /etc/sysconfig
        mountPropagation: HostToContainer
        name: etc-sysconfig
      - mountPath: /etc/kubernetes
        mountPropagation: HostToContainer
        name: etc-kubernetes
        readOnly: true
      - mountPath: /etc/sysctl.d
        mountPropagation: HostToContainer
        name: etc-sysctl-d
        readOnly: true
      - mountPath: /etc/sysctl.conf
        mountPropagation: HostToContainer
        name: etc-sysctl-conf
        readOnly: true
      - mountPath: /etc/systemd
        mountPropagation: HostToContainer
        name: etc-systemd
      - mountPath: /run
        mountPropagation: HostToContainer
        name: run
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /lib/modules
        mountPropagation: HostToContainer
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: var-lib-kubelet
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v48rn
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostIPC: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-2-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tuned
    serviceAccountName: tuned
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: Directory
      name: etc-modprobe-d
    - hostPath:
        path: /etc/sysconfig
        type: Directory
      name: etc-sysconfig
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: etc-kubernetes
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: etc-sysctl-d
    - hostPath:
        path: /etc/sysctl.conf
        type: File
      name: etc-sysctl-conf
    - hostPath:
        path: /etc/systemd
        type: Directory
      name: etc-systemd
    - hostPath:
        path: /run
        type: Directory
      name: run
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - hostPath:
        path: /lib/modules
        type: Directory
      name: lib-modules
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: var-lib-kubelet
    - hostPath:
        path: /
        type: Directory
      name: host
    - name: kube-api-access-v48rn
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3b604e63418295530e3b77f57d46802a82eae9d27ec5809b920402ec75259a88
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState: {}
      name: tuned
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:08Z"
    hostIP: 10.13.2.1
    phase: Running
    podIP: 10.13.2.1
    podIPs:
    - ip: 10.13.2.1
    qosClass: Burstable
    startTime: "2025-04-01T08:33:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
    creationTimestamp: "2025-04-01T08:27:24Z"
    generateName: tuned-
    labels:
      controller-revision-hash: 6dd9b798d
      openshift-app: tuned
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:openshift-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fc389de-deb8-4296-9541-8c8e90356eea"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"tuned"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysctl.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/sysctl.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostIPC: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysconfig"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-systemd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:27:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:27:59Z"
    name: tuned-q7kz5
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: tuned
      uid: 8fc389de-deb8-4296-9541-8c8e90356eea
    resourceVersion: "256952"
    uid: 52e547f3-66f4-412e-8a3f-af288f8cc15f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-78
    containers:
    - command:
      - /usr/bin/cluster-node-tuning-operator
      - openshift-tuned
      - --in-cluster
      - -v=0
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OCP_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: RESYNC_PERIOD
        value: "600"
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: tuned
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/modprobe.d
        mountPropagation: HostToContainer
        name: etc-modprobe-d
      - mountPath: /etc/sysconfig
        mountPropagation: HostToContainer
        name: etc-sysconfig
      - mountPath: /etc/kubernetes
        mountPropagation: HostToContainer
        name: etc-kubernetes
        readOnly: true
      - mountPath: /etc/sysctl.d
        mountPropagation: HostToContainer
        name: etc-sysctl-d
        readOnly: true
      - mountPath: /etc/sysctl.conf
        mountPropagation: HostToContainer
        name: etc-sysctl-conf
        readOnly: true
      - mountPath: /etc/systemd
        mountPropagation: HostToContainer
        name: etc-systemd
      - mountPath: /run
        mountPropagation: HostToContainer
        name: run
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /lib/modules
        mountPropagation: HostToContainer
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: var-lib-kubelet
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8rw2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostIPC: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tuned
    serviceAccountName: tuned
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: Directory
      name: etc-modprobe-d
    - hostPath:
        path: /etc/sysconfig
        type: Directory
      name: etc-sysconfig
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: etc-kubernetes
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: etc-sysctl-d
    - hostPath:
        path: /etc/sysctl.conf
        type: File
      name: etc-sysctl-conf
    - hostPath:
        path: /etc/systemd
        type: Directory
      name: etc-systemd
    - hostPath:
        path: /run
        type: Directory
      name: run
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - hostPath:
        path: /lib/modules
        type: Directory
      name: lib-modules
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: var-lib-kubelet
    - hostPath:
        path: /
        type: Directory
      name: host
    - name: kube-api-access-p8rw2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://4c7216f03c78244809d9c020973d05fe1bb5aa8dcdeb78b82683e3f31b6726d1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState: {}
      name: tuned
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:27:59Z"
    hostIP: 10.13.3.78
    phase: Running
    podIP: 10.13.3.78
    podIPs:
    - ip: 10.13.3.78
    qosClass: Burstable
    startTime: "2025-04-01T08:27:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
    creationTimestamp: "2025-03-31T20:23:45Z"
    generateName: tuned-
    labels:
      controller-revision-hash: 6dd9b798d
      openshift-app: tuned
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:openshift-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fc389de-deb8-4296-9541-8c8e90356eea"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"tuned"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysctl.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/sysctl.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostIPC: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysconfig"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-systemd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: tuned-sfxqt
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: tuned
      uid: 8fc389de-deb8-4296-9541-8c8e90356eea
    resourceVersion: "67746"
    uid: 6e238c5d-5a5d-4549-ac83-0244f1a8156c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-89
    containers:
    - command:
      - /usr/bin/cluster-node-tuning-operator
      - openshift-tuned
      - --in-cluster
      - -v=0
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OCP_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: RESYNC_PERIOD
        value: "600"
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: tuned
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/modprobe.d
        mountPropagation: HostToContainer
        name: etc-modprobe-d
      - mountPath: /etc/sysconfig
        mountPropagation: HostToContainer
        name: etc-sysconfig
      - mountPath: /etc/kubernetes
        mountPropagation: HostToContainer
        name: etc-kubernetes
        readOnly: true
      - mountPath: /etc/sysctl.d
        mountPropagation: HostToContainer
        name: etc-sysctl-d
        readOnly: true
      - mountPath: /etc/sysctl.conf
        mountPropagation: HostToContainer
        name: etc-sysctl-conf
        readOnly: true
      - mountPath: /etc/systemd
        mountPropagation: HostToContainer
        name: etc-systemd
      - mountPath: /run
        mountPropagation: HostToContainer
        name: run
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /lib/modules
        mountPropagation: HostToContainer
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: var-lib-kubelet
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pdw2v
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostIPC: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tuned
    serviceAccountName: tuned
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: Directory
      name: etc-modprobe-d
    - hostPath:
        path: /etc/sysconfig
        type: Directory
      name: etc-sysconfig
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: etc-kubernetes
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: etc-sysctl-d
    - hostPath:
        path: /etc/sysctl.conf
        type: File
      name: etc-sysctl-conf
    - hostPath:
        path: /etc/systemd
        type: Directory
      name: etc-systemd
    - hostPath:
        path: /run
        type: Directory
      name: run
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - hostPath:
        path: /lib/modules
        type: Directory
      name: lib-modules
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: var-lib-kubelet
    - hostPath:
        path: /
        type: Directory
      name: host
    - name: kube-api-access-pdw2v
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3e684b86affe45db7d53b808a67dedbffaed0754b368da31a521cb389ec40352
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState: {}
      name: tuned
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:35Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.13.2.89
    podIPs:
    - ip: 10.13.2.89
    qosClass: Burstable
    startTime: "2025-03-31T20:23:45Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      openshift.io/required-scc: privileged
      openshift.io/scc: privileged
    creationTimestamp: "2025-03-31T20:23:45Z"
    generateName: tuned-
    labels:
      controller-revision-hash: 6dd9b798d
      openshift-app: tuned
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:controller-revision-hash: {}
            f:openshift-app: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"8fc389de-deb8-4296-9541-8c8e90356eea"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"tuned"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CLUSTER_NODE_TUNED_IMAGE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"OCP_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RESYNC_PERIOD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WATCH_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/modprobe.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysconfig"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/etc/sysctl.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/sysctl.d"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/systemd"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/lib/modules"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/run"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostIPC: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-modprobe-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysconfig"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-conf"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-sysctl-d"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-systemd"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"lib-modules"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"run"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:45Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: tuned-zpvpk
    namespace: openshift-cluster-node-tuning-operator
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: tuned
      uid: 8fc389de-deb8-4296-9541-8c8e90356eea
    resourceVersion: "68034"
    uid: 4471bf2c-b714-4213-9ff2-9c7ea2450770
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-160
    containers:
    - command:
      - /usr/bin/cluster-node-tuning-operator
      - openshift-tuned
      - --in-cluster
      - -v=0
      env:
      - name: WATCH_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: OCP_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: RESYNC_PERIOD
        value: "600"
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: CLUSTER_NODE_TUNED_IMAGE
        value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imagePullPolicy: IfNotPresent
      name: tuned
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/modprobe.d
        mountPropagation: HostToContainer
        name: etc-modprobe-d
      - mountPath: /etc/sysconfig
        mountPropagation: HostToContainer
        name: etc-sysconfig
      - mountPath: /etc/kubernetes
        mountPropagation: HostToContainer
        name: etc-kubernetes
        readOnly: true
      - mountPath: /etc/sysctl.d
        mountPropagation: HostToContainer
        name: etc-sysctl-d
        readOnly: true
      - mountPath: /etc/sysctl.conf
        mountPropagation: HostToContainer
        name: etc-sysctl-conf
        readOnly: true
      - mountPath: /etc/systemd
        mountPropagation: HostToContainer
        name: etc-systemd
      - mountPath: /run
        mountPropagation: HostToContainer
        name: run
      - mountPath: /sys
        mountPropagation: HostToContainer
        name: sys
      - mountPath: /lib/modules
        mountPropagation: HostToContainer
        name: lib-modules
        readOnly: true
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: var-lib-kubelet
        readOnly: true
      - mountPath: /host
        mountPropagation: HostToContainer
        name: host
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mpwdm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostIPC: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: tuned
    serviceAccountName: tuned
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/modprobe.d
        type: Directory
      name: etc-modprobe-d
    - hostPath:
        path: /etc/sysconfig
        type: Directory
      name: etc-sysconfig
    - hostPath:
        path: /etc/kubernetes
        type: Directory
      name: etc-kubernetes
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: etc-sysctl-d
    - hostPath:
        path: /etc/sysctl.conf
        type: File
      name: etc-sysctl-conf
    - hostPath:
        path: /etc/systemd
        type: Directory
      name: etc-systemd
    - hostPath:
        path: /run
        type: Directory
      name: run
    - hostPath:
        path: /sys
        type: Directory
      name: sys
    - hostPath:
        path: /lib/modules
        type: Directory
      name: lib-modules
    - hostPath:
        path: /var/lib/kubelet
        type: Directory
      name: var-lib-kubelet
    - hostPath:
        path: /
        type: Directory
      name: host
    - name: kube-api-access-mpwdm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:45Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:45Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9aba198acda6875ffc5224e6db7f2e193ba30b69202518f2f4433618589fdca7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:edc6de23fd45410c8192b9a2bd743d1de77cade13c4e7e4ec8f5b1441218c0f5
      lastState: {}
      name: tuned
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:45Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.13.2.160
    podIPs:
    - ip: 10.13.2.160
    qosClass: Burstable
    startTime: "2025-03-31T20:23:45Z"
kind: PodList
metadata:
  resourceVersion: "718183"
