---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      include.release.openshift.io/self-managed-high-availability: "true"
    creationTimestamp: "2025-03-31T14:23:54Z"
    generation: 1
    labels:
      app: kube-storage-version-migrator-operator
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
          f:labels:
            .: {}
            f:app: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5052a10d-b0db-474e-b63d-8e02132cf28b"}: {}
        f:spec:
          f:progressDeadlineSeconds: {}
          f:replicas: {}
          f:revisionHistoryLimit: {}
          f:selector: {}
          f:strategy:
            f:type: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
              f:name: {}
            f:spec:
              f:containers:
                k:{"name":"kube-storage-version-migrator-operator"}:
                  .: {}
                  f:args: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERAND_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_IMAGE"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"OPERATOR_IMAGE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:runAsUser: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/var/run/configmaps/config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/run/secrets/serving-cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:optional: {}
                    f:secretName: {}
      manager: cluster-version-operator
      operation: Update
      time: "2025-03-31T14:23:54Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:deployment.kubernetes.io/revision: {}
        f:status:
          f:availableReplicas: {}
          f:conditions:
            .: {}
            k:{"type":"Available"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
            k:{"type":"Progressing"}:
              .: {}
              f:lastTransitionTime: {}
              f:lastUpdateTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
          f:updatedReplicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:40:18Z"
    name: kube-storage-version-migrator-operator
    namespace: openshift-kube-storage-version-migrator-operator
    ownerReferences:
    - apiVersion: config.openshift.io/v1
      controller: true
      kind: ClusterVersion
      name: version
      uid: 5052a10d-b0db-474e-b63d-8e02132cf28b
    resourceVersion: "72850"
    uid: 2f72c6b2-4ef8-4941-b433-2fbfb58950e4
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: kube-storage-version-migrator-operator
    strategy:
      type: Recreate
    template:
      metadata:
        annotations:
          openshift.io/required-scc: nonroot-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: kube-storage-version-migrator-operator
        name: kube-storage-version-migrator-operator
      spec:
        containers:
        - args:
          - --config=/var/run/configmaps/config/config.yaml
          command:
          - cluster-kube-storage-version-migrator-operator
          - start
          env:
          - name: IMAGE
            value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2d36dcbe8aaf83140eb534947cb8e54347deab7ad5e634687984393bfac6f999
          - name: OPERATOR_IMAGE
            value: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:12d5e8315fb227f9f58d9b7bd64f3ac052cfb11de4ae12f32155e791dcd938c8
          - name: OPERATOR_IMAGE_VERSION
            value: 4.15.46
          - name: OPERAND_IMAGE_VERSION
            value: 4.15.46
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:12d5e8315fb227f9f58d9b7bd64f3ac052cfb11de4ae12f32155e791dcd938c8
          imagePullPolicy: IfNotPresent
          name: kube-storage-version-migrator-operator
          ports:
          - containerPort: 8443
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            runAsUser: 1001
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /var/run/configmaps/config
            name: config
          - mountPath: /var/run/secrets/serving-cert
            name: serving-cert
        dnsPolicy: ClusterFirst
        nodeSelector:
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: kube-storage-version-migrator-operator
        serviceAccountName: kube-storage-version-migrator-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - name: serving-cert
          secret:
            defaultMode: 420
            optional: true
            secretName: serving-cert
        - configMap:
            defaultMode: 420
            name: config
          name: config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-31T20:17:20Z"
      lastUpdateTime: "2025-03-31T20:22:13Z"
      message: ReplicaSet "kube-storage-version-migrator-operator-d99954847" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-31T20:40:18Z"
      lastUpdateTime: "2025-03-31T20:40:18Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
kind: DeploymentList
metadata:
  resourceVersion: "718259"
