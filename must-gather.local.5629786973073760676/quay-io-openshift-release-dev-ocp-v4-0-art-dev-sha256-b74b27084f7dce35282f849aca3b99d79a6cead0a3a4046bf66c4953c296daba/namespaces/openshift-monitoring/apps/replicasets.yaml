---
apiVersion: apps/v1
items:
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
      include.release.openshift.io/self-managed-high-availability: "true"
      include.release.openshift.io/single-node-developer: "true"
    creationTimestamp: "2025-03-31T14:24:07Z"
    generation: 1
    labels:
      app: cluster-monitoring-operator
      app.kubernetes.io/name: cluster-monitoring-operator
      pod-template-hash: b86b57c9c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
            f:include.release.openshift.io/self-managed-high-availability: {}
            f:include.release.openshift.io/single-node-developer: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a66f4b26-d7cc-4a08-a20a-da3a201025d5"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app: {}
                f:app.kubernetes.io/name: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"cluster-monitoring-operator"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_NAME"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                    k:{"name":"RELEASE_VERSION"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/cluster-monitoring-operator/telemetry"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"cluster-monitoring-operator-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"telemetry-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T14:24:07Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: cluster-monitoring-operator-b86b57c9c
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: cluster-monitoring-operator
      uid: a66f4b26-d7cc-4a08-a20a-da3a201025d5
    resourceVersion: "68208"
    uid: 7fb6e769-d453-4ded-8cab-52d92ac6f38a
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: cluster-monitoring-operator
        pod-template-hash: b86b57c9c
    template:
      metadata:
        annotations:
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app: cluster-monitoring-operator
          app.kubernetes.io/name: cluster-monitoring-operator
          pod-template-hash: b86b57c9c
      spec:
        containers:
        - args:
          - -namespace=openshift-monitoring
          - -namespace-user-workload=openshift-user-workload-monitoring
          - -configmap=cluster-monitoring-config
          - -release-version=$(RELEASE_VERSION)
          - -logtostderr=true
          - -v=2
          - -cert-file=/etc/tls/private/tls.crt
          - -key-file=/etc/tls/private/tls.key
          - -images=prometheus-operator=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:025cffe91780ace546116b4941c75dbb41c3016d9a7b25da4c547627c1218c80
          - -images=prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
          - -images=prometheus-operator-admission-webhook=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
          - -images=configmap-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6520654ed19850062b83dda8be5e98a488327e173bab59a46be9cecf4b3d0c18
          - -images=prometheus=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
          - -images=alertmanager=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
          - -images=oauth-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
          - -images=node-exporter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
          - -images=kube-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3139fc2bcbb3fbbb011dde5fd0fc1b9b4c63024ff9896568d25cbda72e812436
          - -images=openshift-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f71669b5875746de6fdd981e186d3a31d1945f956aed6bf9957bc599ad0783e0
          - -images=kube-rbac-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          - -images=telemeter-client=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:843bee0df2aa0193f5e60ac4b27749b8ce68fdc0ffa8d08eff61f010c8479c9f
          - -images=prom-label-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
          - -images=k8s-prometheus-adapter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          - -images=thanos=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
          - -images=monitoring-plugin=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
          - -images=kube-metrics-server=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9922fda234035a707d349edc25f3f803deeacb5cdc3a045314e054f5ae7d1b4c
          env:
          - name: RELEASE_VERSION
            value: 4.15.46
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:514cb5e630bcc9ddc767f10eb024047c105555c24eb1f4cf0db22a2ce79d17d1
          imagePullPolicy: IfNotPresent
          name: cluster-monitoring-operator
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 75Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: cluster-monitoring-operator-tls
            readOnly: true
          - mountPath: /etc/cluster-monitoring-operator/telemetry
            name: telemetry-config
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cluster-monitoring-operator
        serviceAccountName: cluster-monitoring-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node.kubernetes.io/memory-pressure
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 120
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 120
        volumes:
        - configMap:
            defaultMode: 420
            name: telemetry-config
          name: telemetry-config
        - name: cluster-monitoring-operator-tls
          secret:
            defaultMode: 420
            secretName: cluster-monitoring-operator-tls
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:23:49Z"
    generation: 1
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.10.1
      pod-template-hash: 59bcf56db
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"740f2962-4f3d-44c5-8b8a-18c87fe8e4aa"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"kube-rbac-proxy-main"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-policy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"kube-rbac-proxy-self"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-policy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"kube-state-metrics"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"kube-state-metrics-kube-rbac-proxy-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"kube-state-metrics-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"metrics-client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"volume-directive-shadow"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: kube-state-metrics-59bcf56db
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: kube-state-metrics
      uid: 740f2962-4f3d-44c5-8b8a-18c87fe8e4aa
    resourceVersion: "68104"
    uid: 297a4674-b358-497b-baa3-364d103b3f47
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: kube-state-metrics
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 59bcf56db
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: kube-state-metrics
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: kube-state-metrics
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 2.10.1
          pod-template-hash: 59bcf56db
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --host=127.0.0.1
          - --port=8081
          - --telemetry-host=127.0.0.1
          - --telemetry-port=8082
          - |
            --metric-denylist=
            ^kube_secret_labels$,
            ^kube_.+_annotations$
          - --metric-labels-allowlist=pods=[*],nodes=[*],namespaces=[*],persistentvolumes=[*],persistentvolumeclaims=[*],poddisruptionbudgets=[*]
          - |
            --metric-denylist=
            ^kube_.+_created$,
            ^kube_.+_metadata_resource_version$,
            ^kube_replicaset_metadata_generation$,
            ^kube_replicaset_status_observed_generation$,
            ^kube_pod_restart_policy$,
            ^kube_pod_init_container_status_terminated$,
            ^kube_pod_init_container_status_running$,
            ^kube_pod_container_status_terminated$,
            ^kube_pod_container_status_running$,
            ^kube_pod_completion_time$,
            ^kube_pod_status_scheduled$
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3139fc2bcbb3fbbb011dde5fd0fc1b9b4c63024ff9896568d25cbda72e812436
          imagePullPolicy: IfNotPresent
          name: kube-state-metrics
          resources:
            requests:
              cpu: 2m
              memory: 80Mi
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: volume-directive-shadow
        - args:
          - --secure-listen-address=:8443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --upstream=http://127.0.0.1:8081/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --config-file=/etc/kube-rbac-policy/config.yaml
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-main
          ports:
          - containerPort: 8443
            name: https-main
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: kube-state-metrics-tls
          - mountPath: /etc/tls/client
            name: metrics-client-ca
          - mountPath: /etc/kube-rbac-policy
            name: kube-state-metrics-kube-rbac-proxy-config
            readOnly: true
        - args:
          - --secure-listen-address=:9443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --upstream=http://127.0.0.1:8082/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --config-file=/etc/kube-rbac-policy/config.yaml
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-self
          ports:
          - containerPort: 9443
            name: https-self
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: kube-state-metrics-tls
          - mountPath: /etc/tls/client
            name: metrics-client-ca
          - mountPath: /etc/kube-rbac-policy
            name: kube-state-metrics-kube-rbac-proxy-config
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-state-metrics
        serviceAccountName: kube-state-metrics
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: volume-directive-shadow
        - name: kube-state-metrics-tls
          secret:
            defaultMode: 420
            secretName: kube-state-metrics-tls
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
        - name: kube-state-metrics-kube-rbac-proxy-config
          secret:
            defaultMode: 420
            secretName: kube-state-metrics-kube-rbac-proxy-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:28:52Z"
    generation: 1
    labels:
      app.kubernetes.io/component: monitoring-plugin
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: monitoring-plugin
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 774f784c56
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"6d0ce0dd-8dc8-47af-9a09-50272589033b"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"monitoring-plugin"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"POD_IP"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/nginx/nginx.conf"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                      f:subPath: {}
                    k:{"mountPath":"/var/cert"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"monitoring-plugin-cert"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"nginx-conf"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:52Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: monitoring-plugin-774f784c56
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: monitoring-plugin
      uid: 6d0ce0dd-8dc8-47af-9a09-50272589033b
    resourceVersion: "68082"
    uid: 4e742a2f-9194-4924-aae6-55b4c3a912db
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/component: monitoring-plugin
        app.kubernetes.io/managed-by: cluster-monitoring-operator
        app.kubernetes.io/name: monitoring-plugin
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 774f784c56
    template:
      metadata:
        annotations:
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: monitoring-plugin
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: monitoring-plugin
          app.kubernetes.io/part-of: openshift-monitoring
          pod-template-hash: 774f784c56
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: monitoring-plugin
                  app.kubernetes.io/managed-by: cluster-monitoring-operator
                  app.kubernetes.io/name: monitoring-plugin
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: false
        containers:
        - command:
          - /bin/sh
          - -c
          - |
            if echo "$POD_IP" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
              LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="9443"
            else
              LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="[::]:9443"
            fi
            sed "s/LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/$LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/g" /etc/nginx/nginx.conf > /tmp/nginx.conf
            exec nginx -c /tmp/nginx.conf -g 'daemon off;'
          env:
          - name: POD_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
          imagePullPolicy: IfNotPresent
          name: monitoring-plugin
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/cert
            name: monitoring-plugin-cert
            readOnly: true
          - mountPath: /etc/nginx/nginx.conf
            name: nginx-conf
            readOnly: true
            subPath: nginx.conf
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: monitoring-plugin
          name: nginx-conf
        - name: monitoring-plugin-cert
          secret:
            defaultMode: 420
            secretName: monitoring-plugin-cert
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:23:49Z"
    generation: 1
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: openshift-state-metrics
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 5655fcff79
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"854f7f1a-5b32-4541-9095-053b19e88104"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"kube-rbac-proxy-main"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-policy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"kube-rbac-proxy-self"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-policy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"openshift-state-metrics"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"metrics-client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"openshift-state-metrics-kube-rbac-proxy-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"openshift-state-metrics-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:04Z"
    name: openshift-state-metrics-5655fcff79
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: openshift-state-metrics
      uid: 854f7f1a-5b32-4541-9095-053b19e88104
    resourceVersion: "67890"
    uid: 961316a5-11e0-4bc2-bd79-5016aab97a2e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: exporter
        app.kubernetes.io/name: openshift-state-metrics
        pod-template-hash: 5655fcff79
    template:
      metadata:
        annotations:
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: exporter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: openshift-state-metrics
          app.kubernetes.io/part-of: openshift-monitoring
          pod-template-hash: 5655fcff79
      spec:
        containers:
        - args:
          - --logtostderr
          - --secure-listen-address=:8443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --upstream=http://127.0.0.1:8081/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --config-file=/etc/kube-rbac-policy/config.yaml
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-main
          ports:
          - containerPort: 8443
            name: https-main
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: openshift-state-metrics-tls
          - mountPath: /etc/kube-rbac-policy
            name: openshift-state-metrics-kube-rbac-proxy-config
            readOnly: true
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
        - args:
          - --logtostderr
          - --secure-listen-address=:9443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --upstream=http://127.0.0.1:8082/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --config-file=/etc/kube-rbac-policy/config.yaml
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-self
          ports:
          - containerPort: 9443
            name: https-self
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: openshift-state-metrics-tls
          - mountPath: /etc/kube-rbac-policy
            name: openshift-state-metrics-kube-rbac-proxy-config
            readOnly: true
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
        - args:
          - --host=127.0.0.1
          - --port=8081
          - --telemetry-host=127.0.0.1
          - --telemetry-port=8082
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f71669b5875746de6fdd981e186d3a31d1945f956aed6bf9957bc599ad0783e0
          imagePullPolicy: IfNotPresent
          name: openshift-state-metrics
          resources:
            requests:
              cpu: 1m
              memory: 32Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: openshift-state-metrics
        serviceAccountName: openshift-state-metrics
        terminationGracePeriodSeconds: 30
        volumes:
        - name: openshift-state-metrics-tls
          secret:
            defaultMode: 420
            secretName: openshift-state-metrics-tls
        - name: openshift-state-metrics-kube-rbac-proxy-config
          secret:
            defaultMode: 420
            secretName: openshift-state-metrics-kube-rbac-proxy-config
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-04-01T08:08:00Z"
    generation: 4
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 5497c8b8db
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7ccdad4-a247-46a5-8ec6-19402fe98b8c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum.config/md5: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-adapter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"audit-log"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-audit-profiles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-prometheus-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmpfs"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T09:36:57Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-04-01T09:36:57Z"
    name: prometheus-adapter-5497c8b8db
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-adapter
      uid: a7ccdad4-a247-46a5-8ec6-19402fe98b8c
    resourceVersion: "278082"
    uid: 3e7b3357-8c55-4388-a09e-012b75bb6c41
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 5497c8b8db
    template:
      metadata:
        annotations:
          checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-adapter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-adapter
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.11.2
          pod-template-hash: 5497c8b8db
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: metrics-adapter
                  app.kubernetes.io/name: prometheus-adapter
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
          - --config=/etc/adapter/config.yaml
          - --metrics-relist-interval=1m
          - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
          - --secure-port=6443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --disable-http2
          - --client-ca-file=/etc/tls/private/client-ca-file
          - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
          - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --audit-policy-file=/etc/audit/metadata-profile.yaml
          - --audit-log-path=/var/log/adapter/audit.log
          - --audit-log-maxsize=100
          - --audit-log-maxbackup=5
          - --audit-log-compress=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-adapter
          ports:
          - containerPort: 6443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 18
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpfs
          - mountPath: /etc/adapter
            name: config
          - mountPath: /etc/prometheus-config
            name: prometheus-adapter-prometheus-config
          - mountPath: /etc/ssl/certs
            name: serving-certs-ca-bundle
          - mountPath: /etc/audit
            name: prometheus-adapter-audit-profiles
            readOnly: true
          - mountPath: /var/log/adapter
            name: audit-log
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-adapter
        serviceAccountName: prometheus-adapter
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmpfs
        - configMap:
            defaultMode: 420
            name: adapter-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-prometheus-config
          name: prometheus-adapter-prometheus-config
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - emptyDir: {}
          name: audit-log
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-audit-profiles
          name: prometheus-adapter-audit-profiles
        - name: tls
          secret:
            defaultMode: 420
            secretName: prometheus-adapter-4gn680d598j7f
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "5"
    creationTimestamp: "2025-04-01T09:36:47Z"
    generation: 4
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 55bb5b7fb
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7ccdad4-a247-46a5-8ec6-19402fe98b8c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum.config/md5: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-adapter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"audit-log"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-audit-profiles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-prometheus-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmpfs"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T13:00:37Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:37Z"
    name: prometheus-adapter-55bb5b7fb
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-adapter
      uid: a7ccdad4-a247-46a5-8ec6-19402fe98b8c
    resourceVersion: "338773"
    uid: 369ff5c7-ac60-4cb4-84ff-afbc56ca28ea
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 55bb5b7fb
    template:
      metadata:
        annotations:
          checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-adapter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-adapter
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.11.2
          pod-template-hash: 55bb5b7fb
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: metrics-adapter
                  app.kubernetes.io/name: prometheus-adapter
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
          - --config=/etc/adapter/config.yaml
          - --metrics-relist-interval=1m
          - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
          - --secure-port=6443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --disable-http2
          - --client-ca-file=/etc/tls/private/client-ca-file
          - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
          - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --audit-policy-file=/etc/audit/metadata-profile.yaml
          - --audit-log-path=/var/log/adapter/audit.log
          - --audit-log-maxsize=100
          - --audit-log-maxbackup=5
          - --audit-log-compress=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-adapter
          ports:
          - containerPort: 6443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 18
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpfs
          - mountPath: /etc/adapter
            name: config
          - mountPath: /etc/prometheus-config
            name: prometheus-adapter-prometheus-config
          - mountPath: /etc/ssl/certs
            name: serving-certs-ca-bundle
          - mountPath: /etc/audit
            name: prometheus-adapter-audit-profiles
            readOnly: true
          - mountPath: /var/log/adapter
            name: audit-log
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-adapter
        serviceAccountName: prometheus-adapter
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmpfs
        - configMap:
            defaultMode: 420
            name: adapter-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-prometheus-config
          name: prometheus-adapter-prometheus-config
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - emptyDir: {}
          name: audit-log
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-audit-profiles
          name: prometheus-adapter-audit-profiles
        - name: tls
          secret:
            defaultMode: 420
            secretName: prometheus-adapter-2ed1qsqdh6au7
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-03-31T20:28:54Z"
    generation: 4
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 5d696c69f5
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7ccdad4-a247-46a5-8ec6-19402fe98b8c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum.config/md5: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-adapter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"audit-log"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-audit-profiles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-prometheus-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmpfs"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:07:51Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-04-01T08:07:51Z"
    name: prometheus-adapter-5d696c69f5
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-adapter
      uid: a7ccdad4-a247-46a5-8ec6-19402fe98b8c
    resourceVersion: "250744"
    uid: 5513cb15-b877-4119-bdbd-bb0feb0ad7ed
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 5d696c69f5
    template:
      metadata:
        annotations:
          checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-adapter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-adapter
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.11.2
          pod-template-hash: 5d696c69f5
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: metrics-adapter
                  app.kubernetes.io/name: prometheus-adapter
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
          - --config=/etc/adapter/config.yaml
          - --metrics-relist-interval=1m
          - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
          - --secure-port=6443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --disable-http2
          - --client-ca-file=/etc/tls/private/client-ca-file
          - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
          - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --audit-policy-file=/etc/audit/metadata-profile.yaml
          - --audit-log-path=/var/log/adapter/audit.log
          - --audit-log-maxsize=100
          - --audit-log-maxbackup=5
          - --audit-log-compress=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-adapter
          ports:
          - containerPort: 6443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 18
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpfs
          - mountPath: /etc/adapter
            name: config
          - mountPath: /etc/prometheus-config
            name: prometheus-adapter-prometheus-config
          - mountPath: /etc/ssl/certs
            name: serving-certs-ca-bundle
          - mountPath: /etc/audit
            name: prometheus-adapter-audit-profiles
            readOnly: true
          - mountPath: /var/log/adapter
            name: audit-log
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-adapter
        serviceAccountName: prometheus-adapter
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmpfs
        - configMap:
            defaultMode: 420
            name: adapter-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-prometheus-config
          name: prometheus-adapter-prometheus-config
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - emptyDir: {}
          name: audit-log
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-audit-profiles
          name: prometheus-adapter-audit-profiles
        - name: tls
          secret:
            defaultMode: 420
            secretName: prometheus-adapter-7392lu1170pt0
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:23:51Z"
    generation: 3
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 687bd5f5d5
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7ccdad4-a247-46a5-8ec6-19402fe98b8c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum.config/md5: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-adapter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"audit-log"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-audit-profiles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-prometheus-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmpfs"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:29:06Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:29:06Z"
    name: prometheus-adapter-687bd5f5d5
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-adapter
      uid: a7ccdad4-a247-46a5-8ec6-19402fe98b8c
    resourceVersion: "63556"
    uid: 216d5a37-09ad-4a49-b975-14b772756ec7
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 687bd5f5d5
    template:
      metadata:
        annotations:
          checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-adapter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-adapter
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.11.2
          pod-template-hash: 687bd5f5d5
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: metrics-adapter
                  app.kubernetes.io/name: prometheus-adapter
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
          - --config=/etc/adapter/config.yaml
          - --metrics-relist-interval=1m
          - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
          - --secure-port=6443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --disable-http2
          - --client-ca-file=/etc/tls/private/client-ca-file
          - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
          - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --audit-policy-file=/etc/audit/metadata-profile.yaml
          - --audit-log-path=/var/log/adapter/audit.log
          - --audit-log-maxsize=100
          - --audit-log-maxbackup=5
          - --audit-log-compress=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-adapter
          ports:
          - containerPort: 6443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 18
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpfs
          - mountPath: /etc/adapter
            name: config
          - mountPath: /etc/prometheus-config
            name: prometheus-adapter-prometheus-config
          - mountPath: /etc/ssl/certs
            name: serving-certs-ca-bundle
          - mountPath: /etc/audit
            name: prometheus-adapter-audit-profiles
            readOnly: true
          - mountPath: /var/log/adapter
            name: audit-log
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-adapter
        serviceAccountName: prometheus-adapter
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmpfs
        - configMap:
            defaultMode: 420
            name: adapter-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-prometheus-config
          name: prometheus-adapter-prometheus-config
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - emptyDir: {}
          name: audit-log
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-audit-profiles
          name: prometheus-adapter-audit-profiles
        - name: tls
          secret:
            defaultMode: 420
            secretName: prometheus-adapter-blng3cdjehdkl
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "6"
    creationTimestamp: "2025-04-01T13:00:26Z"
    generation: 2
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 74878b69dd
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7ccdad4-a247-46a5-8ec6-19402fe98b8c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum.config/md5: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-adapter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"audit-log"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-audit-profiles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-prometheus-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmpfs"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T13:00:26Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:39Z"
    name: prometheus-adapter-74878b69dd
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-adapter
      uid: a7ccdad4-a247-46a5-8ec6-19402fe98b8c
    resourceVersion: "338792"
    uid: e99953e7-a85e-42ce-b4d8-5276ff66b9f8
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 74878b69dd
    template:
      metadata:
        annotations:
          checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-adapter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-adapter
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.11.2
          pod-template-hash: 74878b69dd
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: metrics-adapter
                  app.kubernetes.io/name: prometheus-adapter
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
          - --config=/etc/adapter/config.yaml
          - --metrics-relist-interval=1m
          - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
          - --secure-port=6443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --disable-http2
          - --client-ca-file=/etc/tls/private/client-ca-file
          - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
          - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --audit-policy-file=/etc/audit/metadata-profile.yaml
          - --audit-log-path=/var/log/adapter/audit.log
          - --audit-log-maxsize=100
          - --audit-log-maxbackup=5
          - --audit-log-compress=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-adapter
          ports:
          - containerPort: 6443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 18
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpfs
          - mountPath: /etc/adapter
            name: config
          - mountPath: /etc/prometheus-config
            name: prometheus-adapter-prometheus-config
          - mountPath: /etc/ssl/certs
            name: serving-certs-ca-bundle
          - mountPath: /etc/audit
            name: prometheus-adapter-audit-profiles
            readOnly: true
          - mountPath: /var/log/adapter
            name: audit-log
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-adapter
        serviceAccountName: prometheus-adapter
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmpfs
        - configMap:
            defaultMode: 420
            name: adapter-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-prometheus-config
          name: prometheus-adapter-prometheus-config
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - emptyDir: {}
          name: audit-log
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-audit-profiles
          name: prometheus-adapter-audit-profiles
        - name: tls
          secret:
            defaultMode: 420
            secretName: prometheus-adapter-24d24muegl3e2
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-04-01T08:07:40Z"
    generation: 4
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: bf97fd779
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"a7ccdad4-a247-46a5-8ec6-19402fe98b8c"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:checksum.config/md5: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-adapter"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":6443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:startupProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/audit"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/prometheus-config"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/ssl/certs"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/tmp"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/var/log/adapter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"audit-log"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
                k:{"name":"config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-audit-profiles"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-adapter-prometheus-config"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"tmpfs"}:
                  .: {}
                  f:emptyDir: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:08:11Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:observedGeneration: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-04-01T08:08:11Z"
    name: prometheus-adapter-bf97fd779
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-adapter
      uid: a7ccdad4-a247-46a5-8ec6-19402fe98b8c
    resourceVersion: "250996"
    uid: 58066018-27fd-4814-a9ae-3fac39f9e468
  spec:
    replicas: 0
    selector:
      matchLabels:
        app.kubernetes.io/component: metrics-adapter
        app.kubernetes.io/name: prometheus-adapter
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: bf97fd779
    template:
      metadata:
        annotations:
          checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: metrics-adapter
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-adapter
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.11.2
          pod-template-hash: bf97fd779
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: metrics-adapter
                  app.kubernetes.io/name: prometheus-adapter
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: true
        containers:
        - args:
          - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
          - --config=/etc/adapter/config.yaml
          - --metrics-relist-interval=1m
          - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
          - --secure-port=6443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --disable-http2
          - --client-ca-file=/etc/tls/private/client-ca-file
          - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
          - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
          - --requestheader-extra-headers-prefix=X-Remote-Extra-
          - --requestheader-group-headers=X-Remote-Group
          - --requestheader-username-headers=X-Remote-User
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --audit-policy-file=/etc/audit/metadata-profile.yaml
          - --audit-log-path=/var/log/adapter/audit.log
          - --audit-log-maxsize=100
          - --audit-log-maxbackup=5
          - --audit-log-compress=true
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-adapter
          ports:
          - containerPort: 6443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 5
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          startupProbe:
            failureThreshold: 18
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /tmp
            name: tmpfs
          - mountPath: /etc/adapter
            name: config
          - mountPath: /etc/prometheus-config
            name: prometheus-adapter-prometheus-config
          - mountPath: /etc/ssl/certs
            name: serving-certs-ca-bundle
          - mountPath: /etc/audit
            name: prometheus-adapter-audit-profiles
            readOnly: true
          - mountPath: /var/log/adapter
            name: audit-log
          - mountPath: /etc/tls/private
            name: tls
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-adapter
        serviceAccountName: prometheus-adapter
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmpfs
        - configMap:
            defaultMode: 420
            name: adapter-config
          name: config
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-prometheus-config
          name: prometheus-adapter-prometheus-config
        - configMap:
            defaultMode: 420
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - emptyDir: {}
          name: audit-log
        - configMap:
            defaultMode: 420
            name: prometheus-adapter-audit-profiles
          name: prometheus-adapter-audit-profiles
        - name: tls
          secret:
            defaultMode: 420
            secretName: prometheus-adapter-1rv5svhtfv505
  status:
    observedGeneration: 4
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:23:31Z"
    generation: 1
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.70.0
      pod-template-hash: 7b8984d6fd
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c6c47d20-2c7c-4ecc-a3f2-eb28c59064dd"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"kube-rbac-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-policy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                k:{"name":"prometheus-operator"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"GOGC"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:tolerations: {}
              f:volumes:
                .: {}
                k:{"name":"metrics-client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"prometheus-operator-kube-rbac-proxy-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"prometheus-operator-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:31Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: prometheus-operator-7b8984d6fd
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-operator
      uid: c6c47d20-2c7c-4ecc-a3f2-eb28c59064dd
    resourceVersion: "67753"
    uid: cd641668-425d-4696-81cb-4963eaf7e77e
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: prometheus-operator
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 7b8984d6fd
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: prometheus-operator
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: controller
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-operator
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.70.0
          pod-template-hash: 7b8984d6fd
      spec:
        automountServiceAccountToken: true
        containers:
        - args:
          - --kubelet-service=kube-system/kubelet
          - --prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
          - --prometheus-instance-namespaces=openshift-monitoring
          - --thanos-ruler-instance-namespaces=openshift-monitoring
          - --alertmanager-instance-namespaces=openshift-monitoring
          - --config-reloader-cpu-limit=0
          - --config-reloader-memory-limit=0
          - --config-reloader-cpu-request=1m
          - --config-reloader-memory-request=10Mi
          - --web.listen-address=127.0.0.1:8080
          env:
          - name: GOGC
            value: "30"
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:025cffe91780ace546116b4941c75dbb41c3016d9a7b25da4c547627c1218c80
          imagePullPolicy: IfNotPresent
          name: prometheus-operator
          resources:
            requests:
              cpu: 5m
              memory: 150Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        - args:
          - --secure-listen-address=:8443
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --upstream=http://localhost:8080/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --config-file=/etc/kube-rbac-policy/config.yaml
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: prometheus-operator-tls
            readOnly: true
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
          - mountPath: /etc/kube-rbac-policy
            name: prometheus-operator-kube-rbac-proxy-config
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
          node-role.kubernetes.io/master: ""
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-operator
        serviceAccountName: prometheus-operator
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Exists
        volumes:
        - name: prometheus-operator-tls
          secret:
            defaultMode: 420
            secretName: prometheus-operator-tls
        - name: prometheus-operator-kube-rbac-proxy-config
          secret:
            defaultMode: 420
            secretName: prometheus-operator-kube-rbac-proxy-config
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:23:10Z"
    generation: 1
    labels:
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator-admission-webhook
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.70.0
      pod-template-hash: 645ffdbb9c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"33a345ec-0630-4a06-9ed6-430c8bbacc64"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:kubectl.kubernetes.io/default-container: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:automountServiceAccountToken: {}
              f:containers:
                k:{"name":"prometheus-operator-admission-webhook"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
              f:dnsPolicy: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"tls-certificates"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:10Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:05Z"
    name: prometheus-operator-admission-webhook-645ffdbb9c
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: prometheus-operator-admission-webhook
      uid: 33a345ec-0630-4a06-9ed6-430c8bbacc64
    resourceVersion: "68005"
    uid: 9afb1c55-2a11-424c-9ed3-b01b7a7025bb
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/name: prometheus-operator-admission-webhook
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 645ffdbb9c
    template:
      metadata:
        annotations:
          kubectl.kubernetes.io/default-container: prometheus-operator-admission-webhook
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: prometheus-operator-admission-webhook
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.70.0
          pod-template-hash: 645ffdbb9c
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: prometheus-operator-admission-webhook
                  app.kubernetes.io/part-of: openshift-monitoring
              namespaces:
              - openshift-monitoring
              topologyKey: kubernetes.io/hostname
        automountServiceAccountToken: false
        containers:
        - args:
          - --web.enable-tls=true
          - --web.cert-file=/etc/tls/private/tls.crt
          - --web.key-file=/etc/tls/private/tls.key
          - --web.tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --web.tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: prometheus-operator-admission-webhook
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: https
              scheme: HTTPS
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: tls-certificates
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: prometheus-operator-admission-webhook
        serviceAccountName: prometheus-operator-admission-webhook
        terminationGracePeriodSeconds: 30
        volumes:
        - name: tls-certificates
          secret:
            defaultMode: 420
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
            secretName: prometheus-operator-admission-webhook-tls
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:23:54Z"
    generation: 1
    labels:
      app.kubernetes.io/component: telemetry-metrics-collector
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: telemeter-client
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 749cbd8bdf
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"63e67610-28db-487d-a3b6-4dc428794f17"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
                f:telemeter-token-hash: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:pod-template-hash: {}
            f:spec:
              f:containers:
                k:{"name":"kube-rbac-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8443,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-policy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"reload"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/serving-certs-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"telemeter-client"}:
                  .: {}
                  f:command: {}
                  f:env:
                    .: {}
                    k:{"name":"ANONYMIZE_LABELS"}:
                      .: {}
                      f:name: {}
                    k:{"name":"FROM"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"HTTP_PROXY"}:
                      .: {}
                      f:name: {}
                    k:{"name":"HTTPS_PROXY"}:
                      .: {}
                      f:name: {}
                    k:{"name":"ID"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                    k:{"name":"NO_PROXY"}:
                      .: {}
                      f:name: {}
                    k:{"name":"TO"}:
                      .: {}
                      f:name: {}
                      f:value: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":8080,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/serving-certs-ca-bundle"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/telemeter"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"federate-client-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"metrics-client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"secret-telemeter-client"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"secret-telemeter-client-kube-rbac-proxy-config"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"serving-certs-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"telemeter-client-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"telemeter-trusted-ca-bundle"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:items: {}
                    f:name: {}
                    f:optional: {}
                  f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:54Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: telemeter-client-749cbd8bdf
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: telemeter-client
      uid: 63e67610-28db-487d-a3b6-4dc428794f17
    resourceVersion: "68043"
    uid: c45dd4cd-8f15-4331-8884-fbc4c2011d62
  spec:
    replicas: 1
    selector:
      matchLabels:
        app.kubernetes.io/component: telemetry-metrics-collector
        app.kubernetes.io/name: telemeter-client
        pod-template-hash: 749cbd8bdf
    template:
      metadata:
        annotations:
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
          telemeter-token-hash: 68d7aovvntetq
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: telemetry-metrics-collector
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: telemeter-client
          app.kubernetes.io/part-of: openshift-monitoring
          pod-template-hash: 749cbd8bdf
      spec:
        containers:
        - command:
          - /usr/bin/telemeter-client
          - --id=$(ID)
          - --from=$(FROM)
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --from-ca-file=/etc/serving-certs-ca-bundle/service-ca.crt
          - --from-token-file=/var/run/secrets/kubernetes.io/serviceaccount/token
          - --to=$(TO)
          - --to-token-file=/etc/telemeter/token
          - --listen=localhost:8080
          - --anonymize-salt-file=/etc/telemeter/salt
          - --anonymize-labels=$(ANONYMIZE_LABELS)
          - --match={__name__=~"cluster:usage:.*"}
          - --match={__name__="count:up0"}
          - --match={__name__="count:up1"}
          - --match={__name__="cluster_version"}
          - --match={__name__="cluster_version_available_updates"}
          - --match={__name__="cluster_version_capability"}
          - --match={__name__="cluster_operator_up"}
          - --match={__name__="cluster_operator_conditions"}
          - --match={__name__="cluster_version_payload"}
          - --match={__name__="cluster_installer"}
          - --match={__name__="cluster_infrastructure_provider"}
          - --match={__name__="cluster_feature_set"}
          - --match={__name__="instance:etcd_object_counts:sum"}
          - --match={__name__="ALERTS",alertstate="firing",severity=~"critical|warning|info|none"}
          - --match={__name__="code:apiserver_request_total:rate:sum"}
          - --match={__name__="cluster:capacity_cpu_cores:sum"}
          - --match={__name__="cluster:capacity_memory_bytes:sum"}
          - --match={__name__="cluster:cpu_usage_cores:sum"}
          - --match={__name__="cluster:memory_usage_bytes:sum"}
          - --match={__name__="openshift:cpu_usage_cores:sum"}
          - --match={__name__="openshift:memory_usage_bytes:sum"}
          - --match={__name__="workload:cpu_usage_cores:sum"}
          - --match={__name__="workload:memory_usage_bytes:sum"}
          - --match={__name__="cluster:virt_platform_nodes:sum"}
          - --match={__name__="cluster:node_instance_type_count:sum"}
          - --match={__name__="cnv:vmi_status_running:count"}
          - --match={__name__="cluster:vmi_request_cpu_cores:sum"}
          - --match={__name__="node_role_os_version_machine:cpu_capacity_cores:sum"}
          - --match={__name__="node_role_os_version_machine:cpu_capacity_sockets:sum"}
          - --match={__name__="subscription_sync_total"}
          - --match={__name__="olm_resolution_duration_seconds"}
          - --match={__name__="csv_succeeded"}
          - --match={__name__="csv_abnormal"}
          - --match={__name__="cluster:kube_persistentvolumeclaim_resource_requests_storage_bytes:provisioner:sum"}
          - --match={__name__="cluster:kubelet_volume_stats_used_bytes:provisioner:sum"}
          - --match={__name__="ceph_cluster_total_bytes"}
          - --match={__name__="ceph_cluster_total_used_raw_bytes"}
          - --match={__name__="ceph_health_status"}
          - --match={__name__="odf_system_raw_capacity_total_bytes"}
          - --match={__name__="odf_system_raw_capacity_used_bytes"}
          - --match={__name__="odf_system_health_status"}
          - --match={__name__="job:ceph_osd_metadata:count"}
          - --match={__name__="job:kube_pv:count"}
          - --match={__name__="job:odf_system_pvs:count"}
          - --match={__name__="job:ceph_pools_iops:total"}
          - --match={__name__="job:ceph_pools_iops_bytes:total"}
          - --match={__name__="job:ceph_versions_running:count"}
          - --match={__name__="job:noobaa_total_unhealthy_buckets:sum"}
          - --match={__name__="job:noobaa_bucket_count:sum"}
          - --match={__name__="job:noobaa_total_object_count:sum"}
          - --match={__name__="odf_system_bucket_count", system_type="OCS", system_vendor="Red
            Hat"}
          - --match={__name__="odf_system_objects_total", system_type="OCS", system_vendor="Red
            Hat"}
          - --match={__name__="noobaa_accounts_num"}
          - --match={__name__="noobaa_total_usage"}
          - --match={__name__="console_url"}
          - --match={__name__="cluster:console_auth_login_requests_total:sum"}
          - --match={__name__="cluster:console_auth_login_successes_total:sum"}
          - --match={__name__="cluster:console_auth_login_failures_total:sum"}
          - --match={__name__="cluster:console_auth_logout_requests_total:sum"}
          - --match={__name__="cluster:console_usage_users:max"}
          - --match={__name__="cluster:console_plugins_info:max"}
          - --match={__name__="cluster:console_customization_perspectives_info:max"}
          - --match={__name__="cluster:ovnkube_master_egress_routing_via_host:max"}
          - --match={__name__="cluster:network_attachment_definition_instances:max"}
          - --match={__name__="cluster:network_attachment_definition_enabled_instance_up:max"}
          - --match={__name__="cluster:ingress_controller_aws_nlb_active:sum"}
          - --match={__name__="cluster:route_metrics_controller_routes_per_shard:min"}
          - --match={__name__="cluster:route_metrics_controller_routes_per_shard:max"}
          - --match={__name__="cluster:route_metrics_controller_routes_per_shard:avg"}
          - --match={__name__="cluster:route_metrics_controller_routes_per_shard:median"}
          - --match={__name__="cluster:openshift_route_info:tls_termination:sum"}
          - --match={__name__="insightsclient_request_send_total"}
          - --match={__name__="cam_app_workload_migrations"}
          - --match={__name__="cluster:apiserver_current_inflight_requests:sum:max_over_time:2m"}
          - --match={__name__="cluster:alertmanager_integrations:max"}
          - --match={__name__="cluster:telemetry_selected_series:count"}
          - --match={__name__="openshift:prometheus_tsdb_head_series:sum"}
          - --match={__name__="openshift:prometheus_tsdb_head_samples_appended_total:sum"}
          - --match={__name__="monitoring:container_memory_working_set_bytes:sum"}
          - --match={__name__="namespace_job:scrape_series_added:topk3_sum1h"}
          - --match={__name__="namespace_job:scrape_samples_post_metric_relabeling:topk3"}
          - --match={__name__="monitoring:haproxy_server_http_responses_total:sum"}
          - --match={__name__="profile:cluster_monitoring_operator_collection_profile:max"}
          - --match={__name__="rhmi_status"}
          - --match={__name__="status:upgrading:version:rhoam_state:max"}
          - --match={__name__="state:rhoam_critical_alerts:max"}
          - --match={__name__="state:rhoam_warning_alerts:max"}
          - --match={__name__="rhoam_7d_slo_percentile:max"}
          - --match={__name__="rhoam_7d_slo_remaining_error_budget:max"}
          - --match={__name__="cluster_legacy_scheduler_policy"}
          - --match={__name__="cluster_master_schedulable"}
          - --match={__name__="che_workspace_status"}
          - --match={__name__="che_workspace_started_total"}
          - --match={__name__="che_workspace_failure_total"}
          - --match={__name__="che_workspace_start_time_seconds_sum"}
          - --match={__name__="che_workspace_start_time_seconds_count"}
          - --match={__name__="cco_credentials_mode"}
          - --match={__name__="cluster:kube_persistentvolume_plugin_type_counts:sum"}
          - --match={__name__="acm_managed_cluster_info"}
          - --match={__name__="acm_console_page_count:sum", page=~"overview-classic|overview-fleet|search|search-details|clusters|application|governance"}
          - --match={__name__="cluster:vsphere_vcenter_info:sum"}
          - --match={__name__="cluster:vsphere_esxi_version_total:sum"}
          - --match={__name__="cluster:vsphere_node_hw_version_total:sum"}
          - --match={__name__="openshift:build_by_strategy:sum"}
          - --match={__name__="rhods_aggregate_availability"}
          - --match={__name__="rhods_total_users"}
          - --match={__name__="instance:etcd_disk_wal_fsync_duration_seconds:histogram_quantile",quantile="0.99"}
          - --match={__name__="instance:etcd_mvcc_db_total_size_in_bytes:sum"}
          - --match={__name__="instance:etcd_network_peer_round_trip_time_seconds:histogram_quantile",quantile="0.99"}
          - --match={__name__="instance:etcd_mvcc_db_total_size_in_use_in_bytes:sum"}
          - --match={__name__="instance:etcd_disk_backend_commit_duration_seconds:histogram_quantile",quantile="0.99"}
          - --match={__name__="jaeger_operator_instances_storage_types"}
          - --match={__name__="jaeger_operator_instances_strategies"}
          - --match={__name__="jaeger_operator_instances_agent_strategies"}
          - --match={__name__="appsvcs:cores_by_product:sum"}
          - --match={__name__="nto_custom_profiles:count"}
          - --match={__name__="openshift_csi_share_configmap"}
          - --match={__name__="openshift_csi_share_secret"}
          - --match={__name__="openshift_csi_share_mount_failures_total"}
          - --match={__name__="openshift_csi_share_mount_requests_total"}
          - --match={__name__="eo_es_storage_info"}
          - --match={__name__="eo_es_redundancy_policy_info"}
          - --match={__name__="eo_es_defined_delete_namespaces_total"}
          - --match={__name__="eo_es_misconfigured_memory_resources_info"}
          - --match={__name__="cluster:eo_es_data_nodes_total:max"}
          - --match={__name__="cluster:eo_es_documents_created_total:sum"}
          - --match={__name__="cluster:eo_es_documents_deleted_total:sum"}
          - --match={__name__="pod:eo_es_shards_total:max"}
          - --match={__name__="eo_es_cluster_management_state_info"}
          - --match={__name__="imageregistry:imagestreamtags_count:sum"}
          - --match={__name__="imageregistry:operations_count:sum"}
          - --match={__name__="log_logging_info"}
          - --match={__name__="log_collector_error_count_total"}
          - --match={__name__="log_forwarder_pipeline_info"}
          - --match={__name__="log_forwarder_input_info"}
          - --match={__name__="log_forwarder_output_info"}
          - --match={__name__="cluster:log_collected_bytes_total:sum"}
          - --match={__name__="cluster:log_logged_bytes_total:sum"}
          - --match={__name__="openshift_logging:log_forwarder_pipelines:sum"}
          - --match={__name__="openshift_logging:log_forwarders:sum"}
          - --match={__name__="openshift_logging:log_forwarder_input_type:sum"}
          - --match={__name__="openshift_logging:log_forwarder_output_type:sum"}
          - --match={__name__="openshift_logging:vector_component_received_bytes_total:rate5m"}
          - --match={__name__="cluster:kata_monitor_running_shim_count:sum"}
          - --match={__name__="platform:hypershift_hostedclusters:max"}
          - --match={__name__="platform:hypershift_nodepools:max"}
          - --match={__name__="namespace:noobaa_unhealthy_bucket_claims:max"}
          - --match={__name__="namespace:noobaa_buckets_claims:max"}
          - --match={__name__="namespace:noobaa_unhealthy_namespace_resources:max"}
          - --match={__name__="namespace:noobaa_namespace_resources:max"}
          - --match={__name__="namespace:noobaa_unhealthy_namespace_buckets:max"}
          - --match={__name__="namespace:noobaa_namespace_buckets:max"}
          - --match={__name__="namespace:noobaa_accounts:max"}
          - --match={__name__="namespace:noobaa_usage:max"}
          - --match={__name__="namespace:noobaa_system_health_status:max"}
          - --match={__name__="ocs_advanced_feature_usage"}
          - --match={__name__="os_image_url_override:sum"}
          - --match={__name__="cluster:vsphere_topology_tags:max"}
          - --match={__name__="cluster:vsphere_infrastructure_failure_domains:max"}
          - --match={__name__="cluster:vsphere_csi_migration:max"}
          - --match={__name__="apiserver_list_watch_request_success_total:rate:sum",
            verb=~"LIST|WATCH"}
          - --match={__name__="rhacs:telemetry:rox_central_info"}
          - --match={__name__="rhacs:telemetry:rox_central_secured_clusters"}
          - --match={__name__="rhacs:telemetry:rox_central_secured_nodes"}
          - --match={__name__="rhacs:telemetry:rox_central_secured_vcpus"}
          - --match={__name__="rhacs:telemetry:rox_sensor_info"}
          - --match={__name__="cluster:volume_manager_selinux_pod_context_mismatch_total"}
          - --match={__name__="cluster:volume_manager_selinux_volume_context_mismatch_warnings_total"}
          - --match={__name__="cluster:volume_manager_selinux_volume_context_mismatch_errors_total"}
          - --match={__name__="cluster:volume_manager_selinux_volumes_admitted_total"}
          - --match={__name__="ols:provider_model_configuration"}
          - --match={__name__="ols:rest_api_query_calls_total:2xx"}
          - --match={__name__="ols:rest_api_query_calls_total:4xx"}
          - --match={__name__="ols:rest_api_query_calls_total:5xx"}
          - --match={__name__="openshift:openshift_network_operator_ipsec_state:info"}
          - --limit-bytes=5242880
          env:
          - name: ANONYMIZE_LABELS
          - name: FROM
            value: https://prometheus-k8s.openshift-monitoring.svc:9092
          - name: ID
            value: 11cd3b4a-61b3-4179-9a90-2e824b08ccfe
          - name: TO
            value: https://infogw.api.openshift.com/
          - name: HTTP_PROXY
          - name: HTTPS_PROXY
          - name: NO_PROXY
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:843bee0df2aa0193f5e60ac4b27749b8ce68fdc0ffa8d08eff61f010c8479c9f
          imagePullPolicy: IfNotPresent
          name: telemeter-client
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 40Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/serving-certs-ca-bundle
            name: serving-certs-ca-bundle
          - mountPath: /etc/telemeter
            name: secret-telemeter-client
          - mountPath: /etc/tls/private
            name: federate-client-tls
          - mountPath: /etc/pki/ca-trust/extracted/pem/
            name: telemeter-trusted-ca-bundle
            readOnly: true
        - args:
          - --reload-url=http://localhost:8080/-/reload
          - --watched-dir=/etc/serving-certs-ca-bundle
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
          imagePullPolicy: IfNotPresent
          name: reload
          resources:
            requests:
              cpu: 1m
              memory: 10Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/serving-certs-ca-bundle
            name: serving-certs-ca-bundle
        - args:
          - --secure-listen-address=:8443
          - --upstream=http://127.0.0.1:8080/
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --config-file=/etc/kube-rbac-policy/config.yaml
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 8443
            name: https
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/tls/private
            name: telemeter-client-tls
          - mountPath: /etc/kube-rbac-policy
            name: secret-telemeter-client-kube-rbac-proxy-config
            readOnly: true
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: telemeter-client
        serviceAccountName: telemeter-client
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: telemeter-client-serving-certs-ca-bundle
          name: serving-certs-ca-bundle
        - name: secret-telemeter-client
          secret:
            defaultMode: 420
            secretName: telemeter-client
        - name: telemeter-client-tls
          secret:
            defaultMode: 420
            secretName: telemeter-client-tls
        - name: federate-client-tls
          secret:
            defaultMode: 420
            secretName: federate-client-certs
        - name: secret-telemeter-client-kube-rbac-proxy-config
          secret:
            defaultMode: 420
            secretName: telemeter-client-kube-rbac-proxy-config
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
        - configMap:
            defaultMode: 420
            items:
            - key: ca-bundle.crt
              path: tls-ca-bundle.pem
            name: telemeter-trusted-ca-bundle-56c9b9fa8d9gs
            optional: true
          name: telemeter-trusted-ca-bundle
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-31T20:28:59Z"
    generation: 1
    labels:
      app.kubernetes.io/component: query-layer
      app.kubernetes.io/instance: thanos-querier
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: thanos-query
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.32.5
      pod-template-hash: 576fbfc76c
    managedFields:
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:deployment.kubernetes.io/desired-replicas: {}
            f:deployment.kubernetes.io/max-replicas: {}
            f:deployment.kubernetes.io/revision: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"48267a15-4d21-4edc-a9ee-a140c59fa455"}: {}
        f:spec:
          f:replicas: {}
          f:selector: {}
          f:template:
            f:metadata:
              f:annotations:
                .: {}
                f:openshift.io/required-scc: {}
                f:target.workload.openshift.io/management: {}
              f:labels:
                .: {}
                f:app.kubernetes.io/component: {}
                f:app.kubernetes.io/instance: {}
                f:app.kubernetes.io/managed-by: {}
                f:app.kubernetes.io/name: {}
                f:app.kubernetes.io/part-of: {}
                f:app.kubernetes.io/version: {}
                f:pod-template-hash: {}
            f:spec:
              f:affinity:
                .: {}
                f:podAntiAffinity:
                  .: {}
                  f:requiredDuringSchedulingIgnoredDuringExecution: {}
              f:containers:
                k:{"name":"kube-rbac-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9092,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-proxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"kube-rbac-proxy-metrics"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9094,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-proxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/client"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                      f:readOnly: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"kube-rbac-proxy-rules"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9093,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-proxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"kube-rbac-proxy-web"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:livenessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9091,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:readinessProbe:
                    .: {}
                    f:failureThreshold: {}
                    f:httpGet:
                      .: {}
                      f:path: {}
                      f:port: {}
                      f:scheme: {}
                    f:initialDelaySeconds: {}
                    f:periodSeconds: {}
                    f:successThreshold: {}
                    f:timeoutSeconds: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/kube-rbac-proxy"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                    k:{"mountPath":"/etc/tls/private"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
                k:{"name":"prom-label-proxy"}:
                  .: {}
                  f:args: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                k:{"name":"thanos-query"}:
                  .: {}
                  f:args: {}
                  f:env:
                    .: {}
                    k:{"name":"HOST_IP_ADDRESS"}:
                      .: {}
                      f:name: {}
                      f:valueFrom:
                        .: {}
                        f:fieldRef: {}
                  f:image: {}
                  f:imagePullPolicy: {}
                  f:name: {}
                  f:ports:
                    .: {}
                    k:{"containerPort":9090,"protocol":"TCP"}:
                      .: {}
                      f:containerPort: {}
                      f:name: {}
                      f:protocol: {}
                  f:resources:
                    .: {}
                    f:requests:
                      .: {}
                      f:cpu: {}
                      f:memory: {}
                  f:securityContext:
                    .: {}
                    f:allowPrivilegeEscalation: {}
                    f:capabilities:
                      .: {}
                      f:drop: {}
                    f:readOnlyRootFilesystem: {}
                    f:runAsNonRoot: {}
                    f:seccompProfile:
                      .: {}
                      f:type: {}
                  f:terminationMessagePath: {}
                  f:terminationMessagePolicy: {}
                  f:volumeMounts:
                    .: {}
                    k:{"mountPath":"/etc/tls/grpc"}:
                      .: {}
                      f:mountPath: {}
                      f:name: {}
              f:dnsPolicy: {}
              f:nodeSelector: {}
              f:priorityClassName: {}
              f:restartPolicy: {}
              f:schedulerName: {}
              f:securityContext:
                .: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:serviceAccount: {}
              f:serviceAccountName: {}
              f:terminationGracePeriodSeconds: {}
              f:volumes:
                .: {}
                k:{"name":"metrics-client-ca"}:
                  .: {}
                  f:configMap:
                    .: {}
                    f:defaultMode: {}
                    f:name: {}
                  f:name: {}
                k:{"name":"secret-grpc-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"secret-thanos-querier-kube-rbac-proxy"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"secret-thanos-querier-kube-rbac-proxy-metrics"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"secret-thanos-querier-kube-rbac-proxy-rules"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"secret-thanos-querier-kube-rbac-proxy-web"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
                k:{"name":"secret-thanos-querier-tls"}:
                  .: {}
                  f:name: {}
                  f:secret:
                    .: {}
                    f:defaultMode: {}
                    f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:59Z"
    - apiVersion: apps/v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:availableReplicas: {}
          f:fullyLabeledReplicas: {}
          f:observedGeneration: {}
          f:readyReplicas: {}
          f:replicas: {}
      manager: kube-controller-manager
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: thanos-querier-576fbfc76c
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: thanos-querier
      uid: 48267a15-4d21-4edc-a9ee-a140c59fa455
    resourceVersion: "68092"
    uid: 2d1a79e3-6d22-4482-94da-185d1d5ed9c7
  spec:
    replicas: 2
    selector:
      matchLabels:
        app.kubernetes.io/component: query-layer
        app.kubernetes.io/instance: thanos-querier
        app.kubernetes.io/name: thanos-query
        app.kubernetes.io/part-of: openshift-monitoring
        pod-template-hash: 576fbfc76c
    template:
      metadata:
        annotations:
          openshift.io/required-scc: restricted-v2
          target.workload.openshift.io/management: '{"effect": "PreferredDuringScheduling"}'
        creationTimestamp: null
        labels:
          app.kubernetes.io/component: query-layer
          app.kubernetes.io/instance: thanos-querier
          app.kubernetes.io/managed-by: cluster-monitoring-operator
          app.kubernetes.io/name: thanos-query
          app.kubernetes.io/part-of: openshift-monitoring
          app.kubernetes.io/version: 0.32.5
          pod-template-hash: 576fbfc76c
      spec:
        affinity:
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/component: query-layer
                  app.kubernetes.io/instance: thanos-querier
                  app.kubernetes.io/name: thanos-query
                  app.kubernetes.io/part-of: openshift-monitoring
              topologyKey: kubernetes.io/hostname
        containers:
        - args:
          - query
          - --grpc-address=127.0.0.1:10901
          - --http-address=127.0.0.1:9090
          - --log.format=logfmt
          - --query.replica-label=prometheus_replica
          - --query.replica-label=thanos_ruler_replica
          - --endpoint=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
          - --query.auto-downsampling
          - --store.sd-dns-resolver=miekgdns
          - --grpc-client-tls-secure
          - --grpc-client-tls-cert=/etc/tls/grpc/client.crt
          - --grpc-client-tls-key=/etc/tls/grpc/client.key
          - --grpc-client-tls-ca=/etc/tls/grpc/ca.crt
          - --grpc-client-server-name=prometheus-grpc
          - --rule=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
          - --target=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
          - --web.disable-cors
          env:
          - name: HOST_IP_ADDRESS
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
          imagePullPolicy: IfNotPresent
          name: thanos-query
          ports:
          - containerPort: 9090
            name: http
            protocol: TCP
          resources:
            requests:
              cpu: 10m
              memory: 12Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/grpc
            name: secret-grpc-tls
        - args:
          - --secure-listen-address=0.0.0.0:9091
          - --upstream=http://127.0.0.1:9090
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --ignore-paths=/-/healthy,/-/ready
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 4
            httpGet:
              path: /-/healthy
              port: 9091
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 1
          name: kube-rbac-proxy-web
          ports:
          - containerPort: 9091
            name: web
            protocol: TCP
          readinessProbe:
            failureThreshold: 20
            httpGet:
              path: /-/ready
              port: 9091
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-thanos-querier-tls
          - mountPath: /etc/kube-rbac-proxy
            name: secret-thanos-querier-kube-rbac-proxy-web
        - args:
          - --secure-listen-address=0.0.0.0:9092
          - --upstream=http://127.0.0.1:9095
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --allow-paths=/api/v1/query,/api/v1/query_range,/api/v1/labels,/api/v1/label/*/values,/api/v1/series
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy
          ports:
          - containerPort: 9092
            name: tenancy
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-thanos-querier-tls
          - mountPath: /etc/kube-rbac-proxy
            name: secret-thanos-querier-kube-rbac-proxy
        - args:
          - --insecure-listen-address=127.0.0.1:9095
          - --upstream=http://127.0.0.1:9090
          - --label=namespace
          - --enable-label-apis
          - --error-on-replace
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
          imagePullPolicy: IfNotPresent
          name: prom-label-proxy
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
        - args:
          - --secure-listen-address=0.0.0.0:9093
          - --upstream=http://127.0.0.1:9095
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --allow-paths=/api/v1/rules,/api/v1/alerts
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-rules
          ports:
          - containerPort: 9093
            name: tenancy-rules
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-thanos-querier-tls
          - mountPath: /etc/kube-rbac-proxy
            name: secret-thanos-querier-kube-rbac-proxy-rules
        - args:
          - --secure-listen-address=0.0.0.0:9094
          - --upstream=http://127.0.0.1:9090
          - --config-file=/etc/kube-rbac-proxy/config.yaml
          - --tls-cert-file=/etc/tls/private/tls.crt
          - --tls-private-key-file=/etc/tls/private/tls.key
          - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
          - --client-ca-file=/etc/tls/client/client-ca.crt
          - --allow-paths=/metrics
          - --tls-min-version=VersionTLS12
          image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
          imagePullPolicy: IfNotPresent
          name: kube-rbac-proxy-metrics
          ports:
          - containerPort: 9094
            name: metrics
            protocol: TCP
          resources:
            requests:
              cpu: 1m
              memory: 15Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
          - mountPath: /etc/tls/private
            name: secret-thanos-querier-tls
          - mountPath: /etc/kube-rbac-proxy
            name: secret-thanos-querier-kube-rbac-proxy-metrics
          - mountPath: /etc/tls/client
            name: metrics-client-ca
            readOnly: true
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: thanos-querier
        serviceAccountName: thanos-querier
        terminationGracePeriodSeconds: 120
        volumes:
        - name: secret-thanos-querier-tls
          secret:
            defaultMode: 420
            secretName: thanos-querier-tls
        - name: secret-thanos-querier-kube-rbac-proxy
          secret:
            defaultMode: 420
            secretName: thanos-querier-kube-rbac-proxy
        - name: secret-thanos-querier-kube-rbac-proxy-web
          secret:
            defaultMode: 420
            secretName: thanos-querier-kube-rbac-proxy-web
        - name: secret-thanos-querier-kube-rbac-proxy-rules
          secret:
            defaultMode: 420
            secretName: thanos-querier-kube-rbac-proxy-rules
        - name: secret-thanos-querier-kube-rbac-proxy-metrics
          secret:
            defaultMode: 420
            secretName: thanos-querier-kube-rbac-proxy-metrics
        - configMap:
            defaultMode: 420
            name: metrics-client-ca
          name: metrics-client-ca
        - name: secret-grpc-tls
          secret:
            defaultMode: 420
            secretName: thanos-querier-grpc-tls-fkjv99m87p1n1
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 1
    readyReplicas: 2
    replicas: 2
kind: ReplicaSetList
metadata:
  resourceVersion: "718178"
