---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.62/23"],"mac_address":"0a:58:0a:82:00:3e","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.62/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.62"
            ],
            "mac": "0a:58:0a:82:00:3e",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: alertmanager
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2025-03-31T20:33:43Z"
    generateName: alertmanager-main-
    labels:
      alertmanager: main
      app.kubernetes.io/component: alert-router
      app.kubernetes.io/instance: main
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.26.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: alertmanager-main-5586c7b9fc
      statefulset.kubernetes.io/pod-name: alertmanager-main-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alertmanager: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5916b5b9-b32a-43ac-a57f-4125bb01a9fe"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"alertmanager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/alertmanager"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"alertmanager-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9095,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/proxy/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metric"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9097,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"alertmanager-main-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"alertmanager-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy-metric"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-main-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-main-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:33:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:44Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.62"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:34:13Z"
    name: alertmanager-main-0
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-main
      uid: 5916b5b9-b32a-43ac-a57f-4125bb01a9fe
    resourceVersion: "69518"
    uid: 53a49078-facd-49bd-a856-c1016c915ccb
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alert-router
              app.kubernetes.io/instance: main
              app.kubernetes.io/name: alertmanager
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --storage.path=/alertmanager
      - --data.retention=120h
      - --cluster.listen-address=[$(POD_IP)]:9094
      - --web.listen-address=127.0.0.1:9093
      - --web.external-url=https://console-openshift-console.apps.ovhcpococp.trikorasolutions.net/monitoring
      - --web.route-prefix=/
      - --cluster.label=openshift-monitoring/main
      - --cluster.peer=alertmanager-main-0.alertmanager-operated:9094
      - --cluster.peer=alertmanager-main-1.alertmanager-operated:9094
      - --cluster.reconnect-timeout=5m
      - --web.config.file=/etc/alertmanager/web_config/web-config.yaml
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      imagePullPolicy: IfNotPresent
      name: alertmanager
      ports:
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      resources:
        requests:
          cpu: 4m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - exec curl --fail http://localhost:9093/-/ready
        failureThreshold: 40
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/alertmanager/certs
        name: tls-assets
        readOnly: true
      - mountPath: /alertmanager
        name: alertmanager-main-db
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
        name: secret-alertmanager-main-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: alertmanager-trusted-ca-bundle
        readOnly: true
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --reload-url=http://localhost:9093/-/reload
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
        name: secret-alertmanager-main-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    - args:
      - -provider=openshift
      - -https-address=:9095
      - -http-address=
      - -email-domain=*
      - -upstream=http://localhost:9093
      - '-openshift-sar=[{"resource": "namespaces", "verb": "get"}, {"resource": "alertmanagers",
        "resourceAPIGroup": "monitoring.coreos.com", "namespace": "openshift-monitoring",
        "verb": "patch", "resourceName": "non-existant"}]'
      - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"},
        "/": {"resource":"alertmanagers", "group": "monitoring.coreos.com", "namespace":
        "openshift-monitoring", "verb": "patch", "name": "non-existant"}}'
      - -tls-cert=/etc/tls/private/tls.crt
      - -tls-key=/etc/tls/private/tls.key
      - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
      - -cookie-secret-file=/etc/proxy/secrets/session_secret
      - -openshift-service-account=alertmanager-main
      - -openshift-ca=/etc/pki/tls/cert.pem
      - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      env:
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imagePullPolicy: IfNotPresent
      name: alertmanager-proxy
      ports:
      - containerPort: 9095
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
      - mountPath: /etc/proxy/secrets
        name: secret-alertmanager-main-proxy
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: alertmanager-trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9096
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9097
      - --upstream=http://127.0.0.1:9093
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --logtostderr=true
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metric
      ports:
      - containerPort: 9097
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9096
      - --upstream=http://127.0.0.1:9093
      - --label=namespace
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: alertmanager-main-0
    imagePullSecrets:
    - name: alertmanager-main-dockercfg-7mp5d
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
        name: secret-alertmanager-main-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qqwn5
        readOnly: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c10
    serviceAccount: alertmanager-main
    serviceAccountName: alertmanager-main
    subdomain: alertmanager-operated
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: alertmanager-main-generated
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: alertmanager-main-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-alertmanager-main-tls
      secret:
        defaultMode: 420
        secretName: alertmanager-main-tls
    - name: secret-alertmanager-main-proxy
      secret:
        defaultMode: 420
        secretName: alertmanager-main-proxy
    - name: secret-alertmanager-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy
    - name: secret-alertmanager-kube-rbac-proxy-metric
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy-metric
    - name: web-config
      secret:
        defaultMode: 420
        secretName: alertmanager-main-web-config
    - emptyDir: {}
      name: alertmanager-main-db
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: alertmanager-trusted-ca-bundle-56c9b9fa8d9gs
        optional: true
      name: alertmanager-trusted-ca-bundle
    - name: kube-api-access-qqwn5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:34:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:34:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://40f42352063fcd3e687a1e4de136c77b11e533c3e0a50edaab9f43c9271ad8ac
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:44Z"
    - containerID: cri-o://a260ad7ffd0c66293c8c75754f1858db426c6ffe5ab0e006eae76fd16f74a70f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      lastState: {}
      name: alertmanager-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:44Z"
    - containerID: cri-o://43532265494fac4ad8cbd9dcb5af9ca0095afae9dfb102e6f1f9e6607369e2c5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:44Z"
    - containerID: cri-o://a956d340a9d9da21c7499892e4979f35c6504d73c5bbfdcb050d12e6bd1e0305
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:44Z"
    - containerID: cri-o://25cfaa477c76fbcf5cd608b12423ac54405fa82032d2485f3a6e4eae6a84f381
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-metric
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:44Z"
    - containerID: cri-o://a43077156036c3715f2638d6c5362cfd8ea04e0131fa009865a36eade2fbff15
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:44Z"
    hostIP: 10.13.2.89
    initContainerStatuses:
    - containerID: cri-o://023dcb53d9553d231716fa4d3923523c14aa66353848a8fe931bb5a51844e699
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://023dcb53d9553d231716fa4d3923523c14aa66353848a8fe931bb5a51844e699
          exitCode: 0
          finishedAt: "2025-03-31T20:33:44Z"
          reason: Completed
          startedAt: "2025-03-31T20:33:44Z"
    phase: Running
    podIP: 10.130.0.62
    podIPs:
    - ip: 10.130.0.62
    qosClass: Burstable
    startTime: "2025-03-31T20:33:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.58/23"],"mac_address":"0a:58:0a:81:00:3a","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.58/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.58"
            ],
            "mac": "0a:58:0a:81:00:3a",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: alertmanager
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2025-03-31T20:33:11Z"
    generateName: alertmanager-main-
    labels:
      alertmanager: main
      app.kubernetes.io/component: alert-router
      app.kubernetes.io/instance: main
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: alertmanager
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.26.0
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: alertmanager-main-5586c7b9fc
      statefulset.kubernetes.io/pod-name: alertmanager-main-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:alertmanager: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"5916b5b9-b32a-43ac-a57f-4125bb01a9fe"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"alertmanager"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":9094,"protocol":"UDP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/alertmanager"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"alertmanager-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9095,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/proxy/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metric"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9097,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/alertmanager/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/alertmanager/secrets/alertmanager-main-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"alertmanager-main-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"alertmanager-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"config-volume"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-kube-rbac-proxy-metric"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-main-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-alertmanager-main-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:33:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.58"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:41Z"
    name: alertmanager-main-1
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: alertmanager-main
      uid: 5916b5b9-b32a-43ac-a57f-4125bb01a9fe
    resourceVersion: "68875"
    uid: f2558f2a-2dcd-4f90-8563-a20605bb5cfb
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: alert-router
              app.kubernetes.io/instance: main
              app.kubernetes.io/name: alertmanager
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --config.file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --storage.path=/alertmanager
      - --data.retention=120h
      - --cluster.listen-address=[$(POD_IP)]:9094
      - --web.listen-address=127.0.0.1:9093
      - --web.external-url=https://console-openshift-console.apps.ovhcpococp.trikorasolutions.net/monitoring
      - --web.route-prefix=/
      - --cluster.label=openshift-monitoring/main
      - --cluster.peer=alertmanager-main-0.alertmanager-operated:9094
      - --cluster.peer=alertmanager-main-1.alertmanager-operated:9094
      - --cluster.reconnect-timeout=5m
      - --web.config.file=/etc/alertmanager/web_config/web-config.yaml
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      imagePullPolicy: IfNotPresent
      name: alertmanager
      ports:
      - containerPort: 9094
        name: mesh-tcp
        protocol: TCP
      - containerPort: 9094
        name: mesh-udp
        protocol: UDP
      resources:
        requests:
          cpu: 4m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - exec curl --fail http://localhost:9093/-/ready
        failureThreshold: 40
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
      - mountPath: /etc/alertmanager/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/alertmanager/certs
        name: tls-assets
        readOnly: true
      - mountPath: /alertmanager
        name: alertmanager-main-db
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
        name: secret-alertmanager-main-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: alertmanager-trusted-ca-bundle
        readOnly: true
      - mountPath: /etc/alertmanager/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --reload-url=http://localhost:9093/-/reload
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
        name: secret-alertmanager-main-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    - args:
      - -provider=openshift
      - -https-address=:9095
      - -http-address=
      - -email-domain=*
      - -upstream=http://localhost:9093
      - '-openshift-sar=[{"resource": "namespaces", "verb": "get"}, {"resource": "alertmanagers",
        "resourceAPIGroup": "monitoring.coreos.com", "namespace": "openshift-monitoring",
        "verb": "patch", "resourceName": "non-existant"}]'
      - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"},
        "/": {"resource":"alertmanagers", "group": "monitoring.coreos.com", "namespace":
        "openshift-monitoring", "verb": "patch", "name": "non-existant"}}'
      - -tls-cert=/etc/tls/private/tls.crt
      - -tls-key=/etc/tls/private/tls.key
      - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
      - -cookie-secret-file=/etc/proxy/secrets/session_secret
      - -openshift-service-account=alertmanager-main
      - -openshift-ca=/etc/pki/tls/cert.pem
      - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      env:
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imagePullPolicy: IfNotPresent
      name: alertmanager-proxy
      ports:
      - containerPort: 9095
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
      - mountPath: /etc/proxy/secrets
        name: secret-alertmanager-main-proxy
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: alertmanager-trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9096
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9097
      - --upstream=http://127.0.0.1:9093
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --logtostderr=true
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metric
      ports:
      - containerPort: 9097
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /etc/tls/private
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9096
      - --upstream=http://127.0.0.1:9093
      - --label=namespace
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: alertmanager-main-1
    imagePullSecrets:
    - name: alertmanager-main-dockercfg-7mp5d
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/alertmanager/config/alertmanager.yaml.gz
      - --config-envsubst-file=/etc/alertmanager/config_out/alertmanager.env.yaml
      - --watched-dir=/etc/alertmanager/config
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-tls
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-main-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
      - --watched-dir=/etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "-1"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/alertmanager/config
        name: config-volume
        readOnly: true
      - mountPath: /etc/alertmanager/config_out
        name: config-out
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-tls
        name: secret-alertmanager-main-tls
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-main-proxy
        name: secret-alertmanager-main-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy
        name: secret-alertmanager-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/alertmanager/secrets/alertmanager-kube-rbac-proxy-metric
        name: secret-alertmanager-kube-rbac-proxy-metric
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2sg87
        readOnly: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c10
    serviceAccount: alertmanager-main
    serviceAccountName: alertmanager-main
    subdomain: alertmanager-operated
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: config-volume
      secret:
        defaultMode: 420
        secretName: alertmanager-main-generated
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: alertmanager-main-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-alertmanager-main-tls
      secret:
        defaultMode: 420
        secretName: alertmanager-main-tls
    - name: secret-alertmanager-main-proxy
      secret:
        defaultMode: 420
        secretName: alertmanager-main-proxy
    - name: secret-alertmanager-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy
    - name: secret-alertmanager-kube-rbac-proxy-metric
      secret:
        defaultMode: 420
        secretName: alertmanager-kube-rbac-proxy-metric
    - name: web-config
      secret:
        defaultMode: 420
        secretName: alertmanager-main-web-config
    - emptyDir: {}
      name: alertmanager-main-db
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: alertmanager-trusted-ca-bundle-56c9b9fa8d9gs
        optional: true
      name: alertmanager-trusted-ca-bundle
    - name: kube-api-access-2sg87
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:12Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:11Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8e349603605d63037d1b94c0b4dafd1965e466ca4c1be3a4d5ba99c7d9ac1c69
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      lastState: {}
      name: alertmanager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:12Z"
    - containerID: cri-o://281be3566d2d5e4cc171293f3fd9af329f7de8f627d8448eeb93f5eeb7d8ae9f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      lastState: {}
      name: alertmanager-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:12Z"
    - containerID: cri-o://319a083e7e6d9332672691c8c76a675df5b623688a305ddf890e710955450d04
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:12Z"
    - containerID: cri-o://994a01e5f9e5f156cf56641e1580b13bfa20e648a6088d38ee4c564eaeac04a8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:12Z"
    - containerID: cri-o://999c97af4a2b569cb63fe42d3acaa413f53c662c919038bd2d61907493cb7ab9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-metric
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:12Z"
    - containerID: cri-o://1fc7dd0af3e3de7cd7f9bcc191fb02e68836705e1ff272ee0ce289950bea686f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:12Z"
    hostIP: 10.13.2.160
    initContainerStatuses:
    - containerID: cri-o://9ef65250d77e63f278c8e0c5219aa6afa275f9e1796026ef9ebaa6794a66c398
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://9ef65250d77e63f278c8e0c5219aa6afa275f9e1796026ef9ebaa6794a66c398
          exitCode: 0
          finishedAt: "2025-03-31T20:33:12Z"
          reason: Completed
          startedAt: "2025-03-31T20:33:11Z"
    phase: Running
    podIP: 10.129.0.58
    podIPs:
    - ip: 10.129.0.58
    qosClass: Burstable
    startTime: "2025-03-31T20:33:11Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.22/23"],"mac_address":"0a:58:0a:80:00:16","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.22/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.22"
            ],
            "mac": "0a:58:0a:80:00:16",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:17:20Z"
    generateName: cluster-monitoring-operator-b86b57c9c-
    labels:
      app: cluster-monitoring-operator
      app.kubernetes.io/name: cluster-monitoring-operator
      pod-template-hash: b86b57c9c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:app.kubernetes.io/name: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"7fb6e769-d453-4ded-8cab-52d92ac6f38a"}: {}
        f:spec:
          f:containers:
            k:{"name":"cluster-monitoring-operator"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RELEASE_VERSION"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/cluster-monitoring-operator/telemetry"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cluster-monitoring-operator-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"telemetry-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-03-31T20:17:20Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-0-150
      operation: Update
      subresource: status
      time: "2025-03-31T20:21:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:22:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.22"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: cluster-monitoring-operator-b86b57c9c-dpcj5
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: cluster-monitoring-operator-b86b57c9c
      uid: 7fb6e769-d453-4ded-8cab-52d92ac6f38a
    resourceVersion: "68206"
    uid: 07e14007-8d52-4ccd-bbde-ae2e433405e4
  spec:
    containers:
    - args:
      - -namespace=openshift-monitoring
      - -namespace-user-workload=openshift-user-workload-monitoring
      - -configmap=cluster-monitoring-config
      - -release-version=$(RELEASE_VERSION)
      - -logtostderr=true
      - -v=2
      - -cert-file=/etc/tls/private/tls.crt
      - -key-file=/etc/tls/private/tls.key
      - -images=prometheus-operator=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:025cffe91780ace546116b4941c75dbb41c3016d9a7b25da4c547627c1218c80
      - -images=prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      - -images=prometheus-operator-admission-webhook=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      - -images=configmap-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:6520654ed19850062b83dda8be5e98a488327e173bab59a46be9cecf4b3d0c18
      - -images=prometheus=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      - -images=alertmanager=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:de3a12d235e7ddbba9eed13a8881c176dd720c1026c72bbc96860f5beb69a421
      - -images=oauth-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      - -images=node-exporter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      - -images=kube-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3139fc2bcbb3fbbb011dde5fd0fc1b9b4c63024ff9896568d25cbda72e812436
      - -images=openshift-state-metrics=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f71669b5875746de6fdd981e186d3a31d1945f956aed6bf9957bc599ad0783e0
      - -images=kube-rbac-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      - -images=telemeter-client=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:843bee0df2aa0193f5e60ac4b27749b8ce68fdc0ffa8d08eff61f010c8479c9f
      - -images=prom-label-proxy=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      - -images=k8s-prometheus-adapter=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      - -images=thanos=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      - -images=monitoring-plugin=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      - -images=kube-metrics-server=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:9922fda234035a707d349edc25f3f803deeacb5cdc3a045314e054f5ae7d1b4c
      env:
      - name: RELEASE_VERSION
        value: 4.15.46
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:514cb5e630bcc9ddc767f10eb024047c105555c24eb1f4cf0db22a2ce79d17d1
      imagePullPolicy: IfNotPresent
      name: cluster-monitoring-operator
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 75Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: cluster-monitoring-operator-tls
        readOnly: true
      - mountPath: /etc/cluster-monitoring-operator/telemetry
        name: telemetry-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q6rwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cluster-monitoring-operator
    serviceAccountName: cluster-monitoring-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 120
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 120
    volumes:
    - configMap:
        defaultMode: 420
        name: telemetry-config
      name: telemetry-config
    - name: cluster-monitoring-operator-tls
      secret:
        defaultMode: 420
        secretName: cluster-monitoring-operator-tls
    - name: kube-api-access-q6rwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://789f8bdfc288052edab1295bdf17c1d9b4f02da1176a38f80ff5e644dadfd277
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:514cb5e630bcc9ddc767f10eb024047c105555c24eb1f4cf0db22a2ce79d17d1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:514cb5e630bcc9ddc767f10eb024047c105555c24eb1f4cf0db22a2ce79d17d1
      lastState: {}
      name: cluster-monitoring-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:10Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.128.0.22
    podIPs:
    - ip: 10.128.0.22
    qosClass: Burstable
    startTime: "2025-03-31T20:21:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.15/23"],"mac_address":"0a:58:0a:81:00:0f","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.15/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.15"
            ],
            "mac": "0a:58:0a:81:00:0f",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: kube-state-metrics
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:49Z"
    generateName: kube-state-metrics-59bcf56db-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: kube-state-metrics
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.10.1
      pod-template-hash: 59bcf56db
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"297a4674-b358-497b-baa3-364d103b3f47"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy-main"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-self"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-state-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"kube-state-metrics-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"kube-state-metrics-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"volume-directive-shadow"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:50Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.15"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: kube-state-metrics-59bcf56db-zv5w5
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: kube-state-metrics-59bcf56db
      uid: 297a4674-b358-497b-baa3-364d103b3f47
    resourceVersion: "68101"
    uid: e099e698-0ac9-4c5c-83b9-325f9d4fe74d
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --host=127.0.0.1
      - --port=8081
      - --telemetry-host=127.0.0.1
      - --telemetry-port=8082
      - |
        --metric-denylist=
        ^kube_secret_labels$,
        ^kube_.+_annotations$
      - --metric-labels-allowlist=pods=[*],nodes=[*],namespaces=[*],persistentvolumes=[*],persistentvolumeclaims=[*],poddisruptionbudgets=[*]
      - |
        --metric-denylist=
        ^kube_.+_created$,
        ^kube_.+_metadata_resource_version$,
        ^kube_replicaset_metadata_generation$,
        ^kube_replicaset_status_observed_generation$,
        ^kube_pod_restart_policy$,
        ^kube_pod_init_container_status_terminated$,
        ^kube_pod_init_container_status_running$,
        ^kube_pod_container_status_terminated$,
        ^kube_pod_container_status_running$,
        ^kube_pod_completion_time$,
        ^kube_pod_status_scheduled$
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3139fc2bcbb3fbbb011dde5fd0fc1b9b4c63024ff9896568d25cbda72e812436
      imagePullPolicy: IfNotPresent
      name: kube-state-metrics
      resources:
        requests:
          cpu: 2m
          memory: 80Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: volume-directive-shadow
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xq7hd
        readOnly: true
    - args:
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8081/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-main
      ports:
      - containerPort: 8443
        name: https-main
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: kube-state-metrics-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: kube-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xq7hd
        readOnly: true
    - args:
      - --secure-listen-address=:9443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8082/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-self
      ports:
      - containerPort: 9443
        name: https-self
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: kube-state-metrics-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: kube-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xq7hd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: kube-state-metrics
    serviceAccountName: kube-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: volume-directive-shadow
    - name: kube-state-metrics-tls
      secret:
        defaultMode: 420
        secretName: kube-state-metrics-tls
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: kube-state-metrics-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: kube-state-metrics-kube-rbac-proxy-config
    - name: kube-api-access-xq7hd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://1f15b23ad6a620cf0a920f992cefcfbe60e47304f14195ecc7fc91d48d973dd7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-main
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:12Z"
    - containerID: cri-o://f0842ff54c08a83baffea8d2d2617cc08be12e0b6b082370bbdc9356d965e1e7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-self
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:13Z"
    - containerID: cri-o://ce4ccec00e72f9f9f3fca65ee54a3781435dffa79282b25222d1fca05133d067
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3139fc2bcbb3fbbb011dde5fd0fc1b9b4c63024ff9896568d25cbda72e812436
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:3139fc2bcbb3fbbb011dde5fd0fc1b9b4c63024ff9896568d25cbda72e812436
      lastState: {}
      name: kube-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:12Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.129.0.15
    podIPs:
    - ip: 10.129.0.15
    qosClass: Burstable
    startTime: "2025-03-31T20:23:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.44/23"],"mac_address":"0a:58:0a:81:00:2c","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.44/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.44"
            ],
            "mac": "0a:58:0a:81:00:2c",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:28:52Z"
    generateName: monitoring-plugin-774f784c56-
    labels:
      app.kubernetes.io/component: monitoring-plugin
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: monitoring-plugin
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 774f784c56
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e742a2f-9194-4924-aae6-55b4c3a912db"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"monitoring-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/nginx/nginx.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/var/cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"monitoring-plugin-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"nginx-conf"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.44"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: monitoring-plugin-774f784c56-6wtk2
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: monitoring-plugin-774f784c56
      uid: 4e742a2f-9194-4924-aae6-55b4c3a912db
    resourceVersion: "68078"
    uid: 85fce68f-cd6a-4ac3-8c54-863ee5d471fa
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: monitoring-plugin
              app.kubernetes.io/managed-by: cluster-monitoring-operator
              app.kubernetes.io/name: monitoring-plugin
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        if echo "$POD_IP" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="9443"
        else
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="[::]:9443"
        fi
        sed "s/LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/$LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/g" /etc/nginx/nginx.conf > /tmp/nginx.conf
        exec nginx -c /tmp/nginx.conf -g 'daemon off;'
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      imagePullPolicy: IfNotPresent
      name: monitoring-plugin
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/cert
        name: monitoring-plugin-cert
        readOnly: true
      - mountPath: /etc/nginx/nginx.conf
        name: nginx-conf
        readOnly: true
        subPath: nginx.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-bvr2t
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: monitoring-plugin
      name: nginx-conf
    - name: monitoring-plugin-cert
      secret:
        defaultMode: 420
        secretName: monitoring-plugin-cert
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:04Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:04Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ddf584f966c25d596ea25001ef91d028cf3bea856d8aa5b1a02a355d8e16fb8a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      lastState: {}
      name: monitoring-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:04Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.129.0.44
    podIPs:
    - ip: 10.129.0.44
    qosClass: Burstable
    startTime: "2025-03-31T20:28:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.45/23"],"mac_address":"0a:58:0a:82:00:2d","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.45/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.45"
            ],
            "mac": "0a:58:0a:82:00:2d",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:28:52Z"
    generateName: monitoring-plugin-774f784c56-
    labels:
      app.kubernetes.io/component: monitoring-plugin
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: monitoring-plugin
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 774f784c56
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4e742a2f-9194-4924-aae6-55b4c3a912db"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"monitoring-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/nginx/nginx.conf"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/var/cert"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"monitoring-plugin-cert"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"nginx-conf"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:52Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.45"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: monitoring-plugin-774f784c56-7rrcn
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: monitoring-plugin-774f784c56
      uid: 4e742a2f-9194-4924-aae6-55b4c3a912db
    resourceVersion: "67830"
    uid: 67941e9d-3908-43b6-af83-e0fea0223bb5
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: monitoring-plugin
              app.kubernetes.io/managed-by: cluster-monitoring-operator
              app.kubernetes.io/name: monitoring-plugin
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - command:
      - /bin/sh
      - -c
      - |
        if echo "$POD_IP" | grep -qE '^([0-9]{1,3}\.){3}[0-9]{1,3}$'; then
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="9443"
        else
          LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME="[::]:9443"
        fi
        sed "s/LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/$LISTEN_ADDRESS_PORT_REPLACED_AT_RUNTIME/g" /etc/nginx/nginx.conf > /tmp/nginx.conf
        exec nginx -c /tmp/nginx.conf -g 'daemon off;'
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      imagePullPolicy: IfNotPresent
      name: monitoring-plugin
      ports:
      - containerPort: 9443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/cert
        name: monitoring-plugin-cert
        readOnly: true
      - mountPath: /etc/nginx/nginx.conf
        name: nginx-conf
        readOnly: true
        subPath: nginx.conf
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: default-dockercfg-bvr2t
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: monitoring-plugin
      name: nginx-conf
    - name: monitoring-plugin-cert
      secret:
        defaultMode: 420
        secretName: monitoring-plugin-cert
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5e39a2dc01d858a3f5614f7161a0b01a2b158b2c74c1a4dcb29481321cad61d3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:13ba70e33cee8660db6f2675f40f04b36412230a28315723592d40c6b09e1865
      lastState: {}
      name: monitoring-plugin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:02Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.45
    podIPs:
    - ip: 10.130.0.45
    qosClass: Burstable
    startTime: "2025-03-31T20:28:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:49Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.7.0
      controller-revision-hash: 65f8f95b66
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f42470a5-478e-4982-89d1-6ed77d8d13a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.0.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: node-exporter-4rpsj
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: f42470a5-478e-4982-89d1-6ed77d8d13a8
    resourceVersion: "68200"
    uid: 0a0cb549-cad1-4440-acb3-d2e89a1554a1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-0-150
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fsq84
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fsq84
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fsq84
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-fsq84
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:01Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:01Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b678abaf6a9e9d56fe4575b6c37f29af9a30a4d0fc8ed4537eee3b493862c282
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:00Z"
    - containerID: cri-o://047f305ed5bb9b6b75ba19f71d1371613e3b9b5510a72918e1a30e57c39f116d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:00Z"
    hostIP: 10.13.0.150
    initContainerStatuses:
    - containerID: cri-o://02237588f5503d845036acad0a238b474e71ecab7a7b108d2f234aa5269f2489
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://02237588f5503d845036acad0a238b474e71ecab7a7b108d2f234aa5269f2489
          exitCode: 0
          finishedAt: "2025-03-31T20:24:00Z"
          reason: Completed
          startedAt: "2025-03-31T20:24:00Z"
    phase: Running
    podIP: 10.13.0.150
    podIPs:
    - ip: 10.13.0.150
    qosClass: Burstable
    startTime: "2025-03-31T20:23:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-04-01T08:33:00Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.7.0
      controller-revision-hash: 65f8f95b66
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f42470a5-478e-4982-89d1-6ed77d8d13a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:33:43Z"
    name: node-exporter-9hw28
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: f42470a5-478e-4982-89d1-6ed77d8d13a8
    resourceVersion: "259060"
    uid: 77f012e1-11f1-4f43-b0c4-b5e6e58a014b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-1
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wwrjs
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wwrjs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wwrjs
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: host-10-13-2-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-wwrjs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://e95060863b2f9e429125ca1182ceca524a91a67d481285f4fbec60758e87302a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:33:42Z"
    - containerID: cri-o://b7f7cf2dce39d0b45e8eb53c3d86ff0e5cd1e817410cdf4af2bdca60347565b4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:33:42Z"
    hostIP: 10.13.2.1
    initContainerStatuses:
    - containerID: cri-o://9a824ddf910db64d98c9a4c03941479e471bcb4de4e14e8ad84622782d198765
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://9a824ddf910db64d98c9a4c03941479e471bcb4de4e14e8ad84622782d198765
          exitCode: 0
          finishedAt: "2025-04-01T08:33:41Z"
          reason: Completed
          startedAt: "2025-04-01T08:33:41Z"
    phase: Running
    podIP: 10.13.2.1
    podIPs:
    - ip: 10.13.2.1
    qosClass: Burstable
    startTime: "2025-04-01T08:33:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-04-01T08:27:24Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.7.0
      controller-revision-hash: 65f8f95b66
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f42470a5-478e-4982-89d1-6ed77d8d13a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:27:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:27:32Z"
    name: node-exporter-gqb67
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: f42470a5-478e-4982-89d1-6ed77d8d13a8
    resourceVersion: "256764"
    uid: 142bd0aa-1da1-4859-8542-54aaffca8e51
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-78
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5xbr6
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5xbr6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5xbr6
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-5xbr6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d415dae22f1902626214583c8e0938f6c41a72ec51205dffd45c08abaf7ca475
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:27:31Z"
    - containerID: cri-o://9fcf068b1aea018ebcdc0d7d3218d04982b8eeffe9a32f08980961dfb3992d50
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:27:31Z"
    hostIP: 10.13.3.78
    initContainerStatuses:
    - containerID: cri-o://3f3ad63c723fb7b41e96246af52a760e2a82927a3d8fdebc9d733ea497a2132f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://3f3ad63c723fb7b41e96246af52a760e2a82927a3d8fdebc9d733ea497a2132f
          exitCode: 0
          finishedAt: "2025-04-01T08:27:31Z"
          reason: Completed
          startedAt: "2025-04-01T08:27:31Z"
    phase: Running
    podIP: 10.13.3.78
    podIPs:
    - ip: 10.13.3.78
    qosClass: Burstable
    startTime: "2025-04-01T08:27:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-04-01T08:32:57Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.7.0
      controller-revision-hash: 65f8f95b66
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f42470a5-478e-4982-89d1-6ed77d8d13a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:32:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:33:51Z"
    name: node-exporter-jsv7x
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: f42470a5-478e-4982-89d1-6ed77d8d13a8
    resourceVersion: "259173"
    uid: e8e4132b-a265-400a-b5ba-9b5ac6a6c916
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-120
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xxwgp
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xxwgp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xxwgp
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-xxwgp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:50Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://961d9989e54aaf4fec27fcdd797db9be2cc1c60a6436b12676aac08b78861297
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:33:50Z"
    - containerID: cri-o://3f454a4e631c4bc04481df877ca2526df57fa765774c29a289493e79659fdb23
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:33:50Z"
    hostIP: 10.13.3.120
    initContainerStatuses:
    - containerID: cri-o://6ca7f24a1169df32935164f8c85ede48b7e187cbd8441a36b384aeaf14a75fce
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://6ca7f24a1169df32935164f8c85ede48b7e187cbd8441a36b384aeaf14a75fce
          exitCode: 0
          finishedAt: "2025-04-01T08:33:49Z"
          reason: Completed
          startedAt: "2025-04-01T08:33:49Z"
    phase: Running
    podIP: 10.13.3.120
    podIPs:
    - ip: 10.13.3.120
    qosClass: Burstable
    startTime: "2025-04-01T08:33:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:49Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.7.0
      controller-revision-hash: 65f8f95b66
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f42470a5-478e-4982-89d1-6ed77d8d13a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: node-exporter-r9zxk
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: f42470a5-478e-4982-89d1-6ed77d8d13a8
    resourceVersion: "67838"
    uid: c1726f9a-a341-473b-99f3-bce199f469eb
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-89
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9lbj2
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9lbj2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9lbj2
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-9lbj2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:02Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://bd1f65a2829306f286b30d366ad095188e4b279f40444fcf971a6274ab1a7a31
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:02Z"
    - containerID: cri-o://87c11b7720b30592a836adc742968c641d1a3e92f30eb9dc46a9df3db8fa1f6f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:02Z"
    hostIP: 10.13.2.89
    initContainerStatuses:
    - containerID: cri-o://ab5ee053c45fe47dce064d065fa0c812f83ec212e9f70bf1f2ace332c6b9ce27
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ab5ee053c45fe47dce064d065fa0c812f83ec212e9f70bf1f2ace332c6b9ce27
          exitCode: 0
          finishedAt: "2025-03-31T20:24:01Z"
          reason: Completed
          startedAt: "2025-03-31T20:24:01Z"
    phase: Running
    podIP: 10.13.2.89
    podIPs:
    - ip: 10.13.2.89
    qosClass: Burstable
    startTime: "2025-03-31T20:23:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      kubectl.kubernetes.io/default-container: node-exporter
      openshift.io/required-scc: node-exporter
      openshift.io/scc: node-exporter
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:49Z"
    generateName: node-exporter-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: node-exporter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 1.7.0
      controller-revision-hash: 65f8f95b66
      pod-template-generation: "1"
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:controller-revision-hash: {}
            f:pod-template-generation: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f42470a5-478e-4982-89d1-6ed77d8d13a8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9100,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:hostPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsGroup: {}
                f:runAsNonRoot: {}
                f:runAsUser: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"node-exporter"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DBUS_SYSTEM_BUS_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/root"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/sys"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
              f:workingDir: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:initContainers:
            .: {}
            k:{"name":"init-textfile"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"TMPDIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
                f:runAsUser: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/var/log/wtmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/var/node_exporter/textfile"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
              f:workingDir: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"node-exporter-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-textfile"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"node-exporter-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"node-exporter-wtmp"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"root"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"sys"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: node-exporter-zpcpv
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: node-exporter
      uid: f42470a5-478e-4982-89d1-6ed77d8d13a8
    resourceVersion: "68036"
    uid: b6235c91-9cbe-4a72-8c93-4d3f363310a7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-160
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.listen-address=127.0.0.1:9100
      - --path.sysfs=/host/sys
      - --path.rootfs=/host/root
      - --path.udev.data=/host/root/run/udev/data
      - --no-collector.wifi
      - --collector.filesystem.mount-points-exclude=^/(dev|proc|sys|run/k3s/containerd/.+|var/lib/docker/.+|var/lib/kubelet/pods/.+)($|/)
      - --collector.netclass.ignored-devices=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.netdev.device-exclude=^(veth.*|[a-f0-9]{15}|enP.*|ovn-k8s-mp[0-9]*|br-ex|br-int|br-ext|br[0-9]*|tun[0-9]*|cali[a-f0-9]*)$
      - --collector.cpu.info
      - --collector.textfile.directory=/var/node_exporter/textfile
      - --no-collector.btrfs
      - --runtime.gomaxprocs=0
      - --no-collector.cpufreq
      - --no-collector.tcpstat
      - --collector.netdev
      - --collector.netclass
      - --collector.netclass.netlink
      - --no-collector.buddyinfo
      - --no-collector.mountstats
      - --no-collector.ksmd
      - --no-collector.processes
      - --no-collector.systemd
      command:
      - /bin/sh
      - -c
      - |
        export GOMAXPROCS=4
        # We don't take CPU affinity into account as the container doesn't have integer CPU requests.
        # In case of error, fallback to the default value.
        NUM_CPUS=$(grep -c '^processor' "/proc/cpuinfo" 2>/dev/null || echo "0")
        if [ "$NUM_CPUS" -lt "$GOMAXPROCS" ]; then
          export GOMAXPROCS="$NUM_CPUS"
        fi
        echo "ts=$(date --iso-8601=seconds) num_cpus=$NUM_CPUS gomaxprocs=$GOMAXPROCS"
        exec /bin/node_exporter "$0" "$@"
      env:
      - name: DBUS_SYSTEM_BUS_ADDRESS
        value: unix:path=/host/root/var/run/dbus/system_bus_socket
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: node-exporter
      resources:
        requests:
          cpu: 8m
          memory: 32Mi
      securityContext: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /host/sys
        mountPropagation: HostToContainer
        name: sys
        readOnly: true
      - mountPath: /host/root
        mountPropagation: HostToContainer
        name: root
        readOnly: true
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fcb6q
        readOnly: true
      workingDir: /var/node_exporter/textfile
    - args:
      - --secure-listen-address=[$(IP)]:9100
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:9100/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      env:
      - name: IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9100
        hostPort: 9100
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: node-exporter-tls
      - mountPath: /etc/tls/client
        name: metrics-client-ca
      - mountPath: /etc/kube-rbac-policy
        name: node-exporter-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fcb6q
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - '[[ ! -d /node_exporter/collectors/init ]] || find /node_exporter/collectors/init
        -perm /111 -type f -exec {} \;'
      env:
      - name: TMPDIR
        value: /tmp
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imagePullPolicy: IfNotPresent
      name: init-textfile
      resources:
        requests:
          cpu: 1m
          memory: 1Mi
      securityContext:
        privileged: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/node_exporter/textfile
        name: node-exporter-textfile
      - mountPath: /var/log/wtmp
        name: node-exporter-wtmp
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fcb6q
        readOnly: true
      workingDir: /var/node_exporter/textfile
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: node-exporter
    serviceAccountName: node-exporter
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /sys
        type: ""
      name: sys
    - hostPath:
        path: /
        type: ""
      name: root
    - emptyDir: {}
      name: node-exporter-textfile
    - name: node-exporter-tls
      secret:
        defaultMode: 420
        secretName: node-exporter-tls
    - hostPath:
        path: /var/log/wtmp
        type: File
      name: node-exporter-wtmp
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: node-exporter-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: node-exporter-kube-rbac-proxy-config
    - name: kube-api-access-fcb6q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8fbe46e8cc0f0bde813186e0c86c86525c01025690067076f621a994c2ed1d2c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:58Z"
    - containerID: cri-o://75b73383c27cec3debf14ff89d97dfe98da304b7eb8d811b298894dacb4a94b5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: node-exporter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:58Z"
    hostIP: 10.13.2.160
    initContainerStatuses:
    - containerID: cri-o://35f88569364e6207f7a4c648ddba12d292bd6fbb89eb4771f0449a8e386921a2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:b7548e3dfb2cbcce35cad43a7c824788b43cd4ed83ff037858b06449233c658c
      lastState: {}
      name: init-textfile
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://35f88569364e6207f7a4c648ddba12d292bd6fbb89eb4771f0449a8e386921a2
          exitCode: 0
          finishedAt: "2025-03-31T20:23:58Z"
          reason: Completed
          startedAt: "2025-03-31T20:23:58Z"
    phase: Running
    podIP: 10.13.2.160
    podIPs:
    - ip: 10.13.2.160
    qosClass: Burstable
    startTime: "2025-03-31T20:23:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.19/23"],"mac_address":"0a:58:0a:82:00:13","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.19/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.19"
            ],
            "mac": "0a:58:0a:82:00:13",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:49Z"
    generateName: openshift-state-metrics-5655fcff79-
    labels:
      app.kubernetes.io/component: exporter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: openshift-state-metrics
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 5655fcff79
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"961316a5-11e0-4bc2-bd79-5016aab97a2e"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy-main"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-self"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"openshift-state-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"openshift-state-metrics-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"openshift-state-metrics-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:49Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.19"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:04Z"
    name: openshift-state-metrics-5655fcff79-d99n9
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: openshift-state-metrics-5655fcff79
      uid: 961316a5-11e0-4bc2-bd79-5016aab97a2e
    resourceVersion: "67886"
    uid: c3382a47-2bad-4e65-8e15-9968cb8b47a5
  spec:
    containers:
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8081/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-main
      ports:
      - containerPort: 8443
        name: https-main
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: openshift-state-metrics-tls
      - mountPath: /etc/kube-rbac-policy
        name: openshift-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hdlv7
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:9443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://127.0.0.1:8082/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-self
      ports:
      - containerPort: 9443
        name: https-self
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: openshift-state-metrics-tls
      - mountPath: /etc/kube-rbac-policy
        name: openshift-state-metrics-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hdlv7
        readOnly: true
    - args:
      - --host=127.0.0.1
      - --port=8081
      - --telemetry-host=127.0.0.1
      - --telemetry-port=8082
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f71669b5875746de6fdd981e186d3a31d1945f956aed6bf9957bc599ad0783e0
      imagePullPolicy: IfNotPresent
      name: openshift-state-metrics
      resources:
        requests:
          cpu: 1m
          memory: 32Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hdlv7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: openshift-state-metrics
    serviceAccountName: openshift-state-metrics
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: openshift-state-metrics-tls
      secret:
        defaultMode: 420
        secretName: openshift-state-metrics-tls
    - name: openshift-state-metrics-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: openshift-state-metrics-kube-rbac-proxy-config
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: kube-api-access-hdlv7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://aef322ce7c5b221a492e434a77c8e250ab8769e88aa3e52dca3d10b90b433da5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-main
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:49Z"
    - containerID: cri-o://5978281b7a49f8035c7d707d58fdea6018e6fd1c5dade334d802b18b5f9ae1fa
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-self
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:49Z"
    - containerID: cri-o://4cb8dcfea6fd5a47c2faa1c7d068a2ae9b9d581000e06601f2f8fb16e819b6b9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f71669b5875746de6fdd981e186d3a31d1945f956aed6bf9957bc599ad0783e0
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:f71669b5875746de6fdd981e186d3a31d1945f956aed6bf9957bc599ad0783e0
      lastState: {}
      name: openshift-state-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:58Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.19
    podIPs:
    - ip: 10.130.0.19
    qosClass: Burstable
    startTime: "2025-03-31T20:23:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.8/23"],"mac_address":"0a:58:0a:80:02:08","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.8/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.8"
            ],
            "mac": "0a:58:0a:80:02:08",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-04-01T13:00:26Z"
    generateName: prometheus-adapter-74878b69dd-
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 74878b69dd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-3-120
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum.config/md5: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e99953e7-a85e-42ce-b4d8-5276ff66b9f8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"prometheus-adapter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/adapter"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ssl/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/adapter"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"audit-log"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-adapter-audit-profiles"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-adapter-prometheus-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tmpfs"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T13:00:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:37Z"
    name: prometheus-adapter-74878b69dd-7pqxq
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-adapter-74878b69dd
      uid: e99953e7-a85e-42ce-b4d8-5276ff66b9f8
    resourceVersion: "338758"
    uid: cd05c728-07f9-4628-8920-eb1b7c1bb428
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: metrics-adapter
              app.kubernetes.io/name: prometheus-adapter
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
      - --config=/etc/adapter/config.yaml
      - --metrics-relist-interval=1m
      - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
      - --secure-port=6443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --disable-http2
      - --client-ca-file=/etc/tls/private/client-ca-file
      - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
      - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --audit-policy-file=/etc/audit/metadata-profile.yaml
      - --audit-log-path=/var/log/adapter/audit.log
      - --audit-log-maxsize=100
      - --audit-log-maxbackup=5
      - --audit-log-compress=true
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-adapter
      ports:
      - containerPort: 6443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000440000
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 18
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp
        name: tmpfs
      - mountPath: /etc/adapter
        name: config
      - mountPath: /etc/prometheus-config
        name: prometheus-adapter-prometheus-config
      - mountPath: /etc/ssl/certs
        name: serving-certs-ca-bundle
      - mountPath: /etc/audit
        name: prometheus-adapter-audit-profiles
        readOnly: true
      - mountPath: /var/log/adapter
        name: audit-log
      - mountPath: /etc/tls/private
        name: tls
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8w4lb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: prometheus-adapter-dockercfg-h9sk5
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-adapter
    serviceAccountName: prometheus-adapter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmpfs
    - configMap:
        defaultMode: 420
        name: adapter-config
      name: config
    - configMap:
        defaultMode: 420
        name: prometheus-adapter-prometheus-config
      name: prometheus-adapter-prometheus-config
    - configMap:
        defaultMode: 420
        items:
        - key: service-ca.crt
          path: service-ca.crt
        name: serving-certs-ca-bundle
      name: serving-certs-ca-bundle
    - emptyDir: {}
      name: audit-log
    - configMap:
        defaultMode: 420
        name: prometheus-adapter-audit-profiles
      name: prometheus-adapter-audit-profiles
    - name: tls
      secret:
        defaultMode: 420
        secretName: prometheus-adapter-24d24muegl3e2
    - name: kube-api-access-8w4lb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:37Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:37Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://24acba2950706f03b4413d101ff5b7dc5d0ea3ff1bfc47236d82f81306db5ff1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      lastState: {}
      name: prometheus-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T13:00:31Z"
    hostIP: 10.13.3.120
    phase: Running
    podIP: 10.128.2.8
    podIPs:
    - ip: 10.128.2.8
    qosClass: Burstable
    startTime: "2025-04-01T13:00:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum.config/md5: c7fb4696aad1a53eaad3f90f16b9905b
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.8/23"],"mac_address":"0a:58:0a:83:00:08","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.8/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.8"
            ],
            "mac": "0a:58:0a:83:00:08",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-04-01T13:00:26Z"
    generateName: prometheus-adapter-74878b69dd-
    labels:
      app.kubernetes.io/component: metrics-adapter
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-adapter
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.11.2
      pod-template-hash: 74878b69dd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:checksum.config/md5: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e99953e7-a85e-42ce-b4d8-5276ff66b9f8"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"prometheus-adapter"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":6443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:startupProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/adapter"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/audit"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus-config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/ssl/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/tmp"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/log/adapter"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"audit-log"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-adapter-audit-profiles"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-adapter-prometheus-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tmpfs"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T13:00:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            .: {}
            k:{"type":"PodScheduled"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:message: {}
              f:reason: {}
              f:status: {}
              f:type: {}
      manager: kube-scheduler
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:26Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-3-78
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:28Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.8"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T13:00:39Z"
    name: prometheus-adapter-74878b69dd-qz4fm
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-adapter-74878b69dd
      uid: e99953e7-a85e-42ce-b4d8-5276ff66b9f8
    resourceVersion: "338790"
    uid: 06570d3a-8cfc-442b-874d-00ea5e0ca772
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: metrics-adapter
              app.kubernetes.io/name: prometheus-adapter
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --prometheus-auth-config=/etc/prometheus-config/prometheus-config.yaml
      - --config=/etc/adapter/config.yaml
      - --metrics-relist-interval=1m
      - --prometheus-url=https://prometheus-k8s.openshift-monitoring.svc:9091
      - --secure-port=6443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --disable-http2
      - --client-ca-file=/etc/tls/private/client-ca-file
      - --requestheader-client-ca-file=/etc/tls/private/requestheader-client-ca-file
      - --requestheader-allowed-names=kube-apiserver-proxy,system:kube-apiserver-proxy,system:openshift-aggregator
      - --requestheader-extra-headers-prefix=X-Remote-Extra-
      - --requestheader-group-headers=X-Remote-Group
      - --requestheader-username-headers=X-Remote-User
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --audit-policy-file=/etc/audit/metadata-profile.yaml
      - --audit-log-path=/var/log/adapter/audit.log
      - --audit-log-maxsize=100
      - --audit-log-maxbackup=5
      - --audit-log-compress=true
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-adapter
      ports:
      - containerPort: 6443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 5
        httpGet:
          path: /readyz
          port: https
          scheme: HTTPS
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000440000
        seccompProfile:
          type: RuntimeDefault
      startupProbe:
        failureThreshold: 18
        httpGet:
          path: /livez
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /tmp
        name: tmpfs
      - mountPath: /etc/adapter
        name: config
      - mountPath: /etc/prometheus-config
        name: prometheus-adapter-prometheus-config
      - mountPath: /etc/ssl/certs
        name: serving-certs-ca-bundle
      - mountPath: /etc/audit
        name: prometheus-adapter-audit-profiles
        readOnly: true
      - mountPath: /var/log/adapter
        name: audit-log
      - mountPath: /etc/tls/private
        name: tls
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7zn85
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: prometheus-adapter-dockercfg-h9sk5
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-adapter
    serviceAccountName: prometheus-adapter
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmpfs
    - configMap:
        defaultMode: 420
        name: adapter-config
      name: config
    - configMap:
        defaultMode: 420
        name: prometheus-adapter-prometheus-config
      name: prometheus-adapter-prometheus-config
    - configMap:
        defaultMode: 420
        items:
        - key: service-ca.crt
          path: service-ca.crt
        name: serving-certs-ca-bundle
      name: serving-certs-ca-bundle
    - emptyDir: {}
      name: audit-log
    - configMap:
        defaultMode: 420
        name: prometheus-adapter-audit-profiles
      name: prometheus-adapter-audit-profiles
    - name: tls
      secret:
        defaultMode: 420
        secretName: prometheus-adapter-24d24muegl3e2
    - name: kube-api-access-7zn85
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T13:00:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b637823c8620b26a6eb9d31b0a3714acb5d6df6223902c3c46acf349ca90156a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98a88bc64fb877335c42eca944e758707dded0d7b6ff29c097a8063dbd994736
      lastState: {}
      name: prometheus-adapter
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T13:00:29Z"
    hostIP: 10.13.3.78
    phase: Running
    podIP: 10.131.0.8
    podIPs:
    - ip: 10.131.0.8
    qosClass: Burstable
    startTime: "2025-04-01T13:00:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.60/23"],"mac_address":"0a:58:0a:82:00:3c","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.60/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.60"
            ],
            "mac": "0a:58:0a:82:00:3c",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2025-03-31T20:33:34Z"
    generateName: prometheus-k8s-
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.48.0
      apps.kubernetes.io/pod-index: "0"
      controller-revision-hash: prometheus-k8s-6b8b866c4c
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
      prometheus: k8s
      statefulset.kubernetes.io/pod-name: prometheus-k8s-0
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:operator.prometheus.io/name: {}
            f:operator.prometheus.io/shard: {}
            f:prometheus: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1cee407c-46c4-46cc-81fc-d9707adb357e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-thanos"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10903,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/kubelet-serving-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/metrics-client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/serving-certs-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/secrets/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/metrics-client-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/prometheus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/proxy/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"thanos-sidecar"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10901,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":10902,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"configmap-kubelet-serving-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-k8s-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"prometheus-k8s-rulefiles-0"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-metrics-client-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-thanos-sidecar-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:33:34Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:35Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.60"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:50Z"
    name: prometheus-k8s-0
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-k8s
      uid: 1cee407c-46c4-46cc-81fc-d9707adb357e
    resourceVersion: "69107"
    uid: 75cdbd8b-4b01-492b-be9c-a66b88bdf27a
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: k8s
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
      - --web.enable-lifecycle
      - --web.external-url=https://console-openshift-console.apps.ovhcpococp.trikorasolutions.net/monitoring
      - --web.route-prefix=/
      - --web.listen-address=127.0.0.1:9090
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.path=/prometheus
      - --web.config.file=/etc/prometheus/web_config/web-config.yaml
      - --scrape.timestamp-tolerance=15ms
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/healthy;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/healthy;
            else exit 1; fi
        failureThreshold: 6
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: prometheus
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        requests:
          cpu: 70m
          memory: 1Gi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 240
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: prometheus-trusted-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: tls-assets
        readOnly: true
      - mountPath: /prometheus
        name: prometheus-k8s-db
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-tls
        name: secret-prometheus-k8s-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-proxy
        name: secret-prometheus-k8s-proxy
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls
        name: secret-prometheus-k8s-thanos-sidecar-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/kube-rbac-proxy
        name: secret-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/prometheus/secrets/metrics-client-certs
        name: secret-metrics-client-certs
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/serving-certs-ca-bundle
        name: configmap-serving-certs-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/kubelet-serving-ca-bundle
        name: configmap-kubelet-serving-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/metrics-client-ca
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --reload-url=http://localhost:9090/-/reload
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    - args:
      - sidecar
      - --prometheus.url=http://localhost:9090/
      - --tsdb.path=/prometheus
      - --http-address=127.0.0.1:10902
      - --grpc-server-tls-cert=/etc/tls/grpc/server.crt
      - --grpc-server-tls-key=/etc/tls/grpc/server.key
      - --grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imagePullPolicy: IfNotPresent
      name: thanos-sidecar
      ports:
      - containerPort: 10902
        name: http
        protocol: TCP
      - containerPort: 10901
        name: grpc
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 25Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    - args:
      - -provider=openshift
      - -https-address=:9091
      - -http-address=
      - -email-domain=*
      - -upstream=http://localhost:9090
      - -openshift-service-account=prometheus-k8s
      - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
      - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
      - -tls-cert=/etc/tls/private/tls.crt
      - -tls-key=/etc/tls/private/tls.key
      - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
      - -cookie-secret-file=/etc/proxy/secrets/session_secret
      - -openshift-ca=/etc/pki/tls/cert.pem
      - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      env:
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imagePullPolicy: IfNotPresent
      name: prometheus-proxy
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/proxy/secrets
        name: secret-prometheus-k8s-proxy
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: prometheus-trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9090
      - --allow-paths=/metrics,/federate
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/tls/client
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    - args:
      - --secure-listen-address=[$(POD_IP)]:10903
      - --upstream=http://127.0.0.1:10902
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/metrics
      - --logtostderr=true
      - --tls-min-version=VersionTLS12
      - --client-ca-file=/etc/tls/client/client-ca.crt
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-thanos
      ports:
      - containerPort: 10903
        name: thanos-proxy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-thanos-sidecar-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-k8s-0
    imagePullSecrets:
    - name: prometheus-k8s-dockercfg-bs8xx
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l6cpk
        readOnly: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c10
    serviceAccount: prometheus-k8s
    serviceAccountName: prometheus-k8s
    shareProcessNamespace: false
    subdomain: prometheus-operated
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: prometheus-k8s-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-prometheus-k8s-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-tls
    - name: secret-prometheus-k8s-proxy
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-proxy
    - name: secret-prometheus-k8s-thanos-sidecar-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-thanos-sidecar-tls
    - name: secret-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: kube-rbac-proxy
    - name: secret-metrics-client-certs
      secret:
        defaultMode: 420
        secretName: metrics-client-certs
    - configMap:
        defaultMode: 420
        name: serving-certs-ca-bundle
      name: configmap-serving-certs-ca-bundle
    - configMap:
        defaultMode: 420
        name: kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: configmap-metrics-client-ca
    - configMap:
        defaultMode: 420
        name: prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - name: web-config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-web-config
    - emptyDir: {}
      name: prometheus-k8s-db
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-grpc-tls-7sh2nmovatj28
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: prometheus-trusted-ca-bundle-56c9b9fa8d9gs
        optional: true
      name: prometheus-trusted-ca-bundle
    - name: kube-api-access-l6cpk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:50Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:50Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ca7a2ad14b61a09c6f1406c5a47ed04c931a463c0caa378bae3eb597e79a7577
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:35Z"
    - containerID: cri-o://b839df9fec7bc6e0024922a48c0de365e1d7f7817d93fa94f13508c342cf03e5
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:35Z"
    - containerID: cri-o://af91ee5854da4063d0cfe8f8a911ac8e42f1cd22380589c432e0a95470bd8d26
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-thanos
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:35Z"
    - containerID: cri-o://5e1be8e02a2a06e066f213ba8e13d8749bec4a25156f42b9c6b453154ae877d2
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:35Z"
    - containerID: cri-o://073a113244c109f9af8721abe81625731b2a3fe778c9128a61cd3651948f3f85
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      lastState: {}
      name: prometheus-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:35Z"
    - containerID: cri-o://5152e3eea9ef136f1b4bdda31f0d54ca553810e9ebfb881af41fdbeef4a7ab23
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      lastState: {}
      name: thanos-sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:35Z"
    hostIP: 10.13.2.89
    initContainerStatuses:
    - containerID: cri-o://37a7b0c7c75de50f2ccd942e9f0d960eefc855f8bf1bb5c914f90c5041b7f566
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://37a7b0c7c75de50f2ccd942e9f0d960eefc855f8bf1bb5c914f90c5041b7f566
          exitCode: 0
          finishedAt: "2025-03-31T20:33:35Z"
          reason: Completed
          startedAt: "2025-03-31T20:33:35Z"
    phase: Running
    podIP: 10.130.0.60
    podIPs:
    - ip: 10.130.0.60
    qosClass: Burstable
    startTime: "2025-03-31T20:33:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.59/23"],"mac_address":"0a:58:0a:81:00:3b","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.59/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.59"
            ],
            "mac": "0a:58:0a:81:00:3b",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus
      openshift.io/required-scc: nonroot
      openshift.io/scc: nonroot
    creationTimestamp: "2025-03-31T20:33:16Z"
    generateName: prometheus-k8s-
    labels:
      app.kubernetes.io/component: prometheus
      app.kubernetes.io/instance: k8s
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: prometheus
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 2.48.0
      apps.kubernetes.io/pod-index: "1"
      controller-revision-hash: prometheus-k8s-6b8b866c4c
      operator.prometheus.io/name: k8s
      operator.prometheus.io/shard: "0"
      prometheus: k8s
      statefulset.kubernetes.io/pod-name: prometheus-k8s-1
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:apps.kubernetes.io/pod-index: {}
            f:controller-revision-hash: {}
            f:operator.prometheus.io/name: {}
            f:operator.prometheus.io/shard: {}
            f:prometheus: {}
            f:statefulset.kubernetes.io/pod-name: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"1cee407c-46c4-46cc-81fc-d9707adb357e"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-thanos"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"POD_IP"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10903,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:readinessProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:startupProbe:
                .: {}
                f:exec:
                  .: {}
                  f:command: {}
                f:failureThreshold: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/kubelet-serving-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/metrics-client-ca"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/configmaps/serving-certs-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/secrets/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/metrics-client-certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/secrets/prometheus-k8s-tls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/prometheus/web_config/web-config.yaml"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                  f:subPath: {}
                k:{"mountPath":"/prometheus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prometheus-proxy"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/proxy/secrets"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"thanos-sidecar"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":10901,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
                k:{"containerPort":10902,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostname: {}
          f:initContainers:
            .: {}
            k:{"name":"init-config-reloader"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"POD_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"SHARD"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/prometheus/config"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/config_out"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/prometheus/rules/prometheus-k8s-rulefiles-0"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:fsGroup: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:shareProcessNamespace: {}
          f:subdomain: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"config-out"}:
              .: {}
              f:emptyDir:
                .: {}
                f:medium: {}
              f:name: {}
            k:{"name":"configmap-kubelet-serving-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"configmap-serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-k8s-db"}:
              .: {}
              f:emptyDir: {}
              f:name: {}
            k:{"name":"prometheus-k8s-rulefiles-0"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-metrics-client-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-thanos-sidecar-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-prometheus-k8s-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"tls-assets"}:
              .: {}
              f:name: {}
              f:projected:
                .: {}
                f:defaultMode: {}
                f:sources: {}
            k:{"name":"web-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:33:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:16Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.59"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:32Z"
    name: prometheus-k8s-1
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: StatefulSet
      name: prometheus-k8s
      uid: 1cee407c-46c4-46cc-81fc-d9707adb357e
    resourceVersion: "68656"
    uid: 07230d6d-1e7b-4180-b6e2-1494d9f68bbc
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: prometheus
              app.kubernetes.io/instance: k8s
              app.kubernetes.io/name: prometheus
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: true
    containers:
    - args:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --config.file=/etc/prometheus/config_out/prometheus.env.yaml
      - --web.enable-lifecycle
      - --web.external-url=https://console-openshift-console.apps.ovhcpococp.trikorasolutions.net/monitoring
      - --web.route-prefix=/
      - --web.listen-address=127.0.0.1:9090
      - --storage.tsdb.retention.time=15d
      - --storage.tsdb.path=/prometheus
      - --web.config.file=/etc/prometheus/web_config/web-config.yaml
      - --scrape.timestamp-tolerance=15ms
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/healthy;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/healthy;
            else exit 1; fi
        failureThreshold: 6
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      name: prometheus
      readinessProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 3
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 3
      resources:
        requests:
          cpu: 70m
          memory: 1Gi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      startupProbe:
        exec:
          command:
          - sh
          - -c
          - if [ -x "$(command -v curl)" ]; then exec curl --fail http://localhost:9090/-/ready;
            elif [ -x "$(command -v wget)" ]; then exec wget -q -O /dev/null http://localhost:9090/-/ready;
            else exit 1; fi
        failureThreshold: 240
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 3
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: prometheus-trusted-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/config_out
        name: config-out
        readOnly: true
      - mountPath: /etc/prometheus/certs
        name: tls-assets
        readOnly: true
      - mountPath: /prometheus
        name: prometheus-k8s-db
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-tls
        name: secret-prometheus-k8s-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-proxy
        name: secret-prometheus-k8s-proxy
        readOnly: true
      - mountPath: /etc/prometheus/secrets/prometheus-k8s-thanos-sidecar-tls
        name: secret-prometheus-k8s-thanos-sidecar-tls
        readOnly: true
      - mountPath: /etc/prometheus/secrets/kube-rbac-proxy
        name: secret-kube-rbac-proxy
        readOnly: true
      - mountPath: /etc/prometheus/secrets/metrics-client-certs
        name: secret-metrics-client-certs
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/serving-certs-ca-bundle
        name: configmap-serving-certs-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/kubelet-serving-ca-bundle
        name: configmap-kubelet-serving-ca-bundle
        readOnly: true
      - mountPath: /etc/prometheus/configmaps/metrics-client-ca
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /etc/prometheus/web_config/web-config.yaml
        name: web-config
        readOnly: true
        subPath: web-config.yaml
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    - args:
      - --listen-address=localhost:8080
      - --reload-url=http://localhost:9090/-/reload
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: config-reloader
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    - args:
      - sidecar
      - --prometheus.url=http://localhost:9090/
      - --tsdb.path=/prometheus
      - --http-address=127.0.0.1:10902
      - --grpc-server-tls-cert=/etc/tls/grpc/server.crt
      - --grpc-server-tls-key=/etc/tls/grpc/server.key
      - --grpc-server-tls-client-ca=/etc/tls/grpc/ca.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imagePullPolicy: IfNotPresent
      name: thanos-sidecar
      ports:
      - containerPort: 10902
        name: http
        protocol: TCP
      - containerPort: 10901
        name: grpc
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 25Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    - args:
      - -provider=openshift
      - -https-address=:9091
      - -http-address=
      - -email-domain=*
      - -upstream=http://localhost:9090
      - -openshift-service-account=prometheus-k8s
      - '-openshift-sar={"resource": "namespaces", "verb": "get"}'
      - '-openshift-delegate-urls={"/": {"resource": "namespaces", "verb": "get"}}'
      - -tls-cert=/etc/tls/private/tls.crt
      - -tls-key=/etc/tls/private/tls.key
      - -client-secret-file=/var/run/secrets/kubernetes.io/serviceaccount/token
      - -cookie-secret-file=/etc/proxy/secrets/session_secret
      - -openshift-ca=/etc/pki/tls/cert.pem
      - -openshift-ca=/var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      env:
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imagePullPolicy: IfNotPresent
      name: prometheus-proxy
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/proxy/secrets
        name: secret-prometheus-k8s-proxy
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: prometheus-trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9090
      - --allow-paths=/metrics,/federate
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-tls
      - mountPath: /etc/tls/client
        name: configmap-metrics-client-ca
        readOnly: true
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    - args:
      - --secure-listen-address=[$(POD_IP)]:10903
      - --upstream=http://127.0.0.1:10902
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/metrics
      - --logtostderr=true
      - --tls-min-version=VersionTLS12
      - --client-ca-file=/etc/tls/client/client-ca.crt
      env:
      - name: POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-thanos
      ports:
      - containerPort: 10903
        name: thanos-proxy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - KILL
          - MKNOD
          - SETGID
          - SETUID
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-prometheus-k8s-thanos-sidecar-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-kube-rbac-proxy
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostname: prometheus-k8s-1
    imagePullSecrets:
    - name: prometheus-k8s-dockercfg-bs8xx
    initContainers:
    - args:
      - --watch-interval=0
      - --listen-address=:8080
      - --config-file=/etc/prometheus/config/prometheus.yaml.gz
      - --config-envsubst-file=/etc/prometheus/config_out/prometheus.env.yaml
      - --watched-dir=/etc/prometheus/rules/prometheus-k8s-rulefiles-0
      command:
      - /bin/prometheus-config-reloader
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: SHARD
        value: "0"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: init-config-reloader
      ports:
      - containerPort: 8080
        name: reloader-web
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
          - KILL
          - MKNOD
          - SETGID
          - SETUID
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/prometheus/config
        name: config
      - mountPath: /etc/prometheus/config_out
        name: config-out
      - mountPath: /etc/prometheus/rules/prometheus-k8s-rulefiles-0
        name: prometheus-k8s-rulefiles-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-82pn7
        readOnly: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 65534
      runAsNonRoot: true
      runAsUser: 65534
      seLinuxOptions:
        level: s0:c21,c10
    serviceAccount: prometheus-k8s
    serviceAccountName: prometheus-k8s
    shareProcessNamespace: false
    subdomain: prometheus-operated
    terminationGracePeriodSeconds: 600
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s
    - name: tls-assets
      projected:
        defaultMode: 420
        sources:
        - secret:
            name: prometheus-k8s-tls-assets-0
    - emptyDir:
        medium: Memory
      name: config-out
    - name: secret-prometheus-k8s-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-tls
    - name: secret-prometheus-k8s-proxy
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-proxy
    - name: secret-prometheus-k8s-thanos-sidecar-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-thanos-sidecar-tls
    - name: secret-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: kube-rbac-proxy
    - name: secret-metrics-client-certs
      secret:
        defaultMode: 420
        secretName: metrics-client-certs
    - configMap:
        defaultMode: 420
        name: serving-certs-ca-bundle
      name: configmap-serving-certs-ca-bundle
    - configMap:
        defaultMode: 420
        name: kubelet-serving-ca-bundle
      name: configmap-kubelet-serving-ca-bundle
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: configmap-metrics-client-ca
    - configMap:
        defaultMode: 420
        name: prometheus-k8s-rulefiles-0
      name: prometheus-k8s-rulefiles-0
    - name: web-config
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-web-config
    - emptyDir: {}
      name: prometheus-k8s-db
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: prometheus-k8s-grpc-tls-7sh2nmovatj28
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: prometheus-trusted-ca-bundle-56c9b9fa8d9gs
        optional: true
      name: prometheus-trusted-ca-bundle
    - name: kube-api-access-82pn7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:17Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8d58e01123b7b6ddd3908f93c254c30ef4a3b2f745209eb8a4a5aa3e865f5d98
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: config-reloader
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:17Z"
    - containerID: cri-o://aad8707e81093abae2b83aa3d096ce714b613476ab25b45fd58797fe637205a8
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:17Z"
    - containerID: cri-o://8dfe25bc2ed0053c526c113d14a2c38210934c1957ddb13016a3e6e46e0ae136
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-thanos
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:17Z"
    - containerID: cri-o://2bddb4bfbc4f9ae29bf75480626971fcc71ba84b152ee6befde5209a4f4a73c0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:2dcb47edaff7d620d2047a801bbc74be406ead5b9146584bb0319c99abe13ba4
      lastState: {}
      name: prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:17Z"
    - containerID: cri-o://56abb708d4a7aa0ace63f32a481b52100d03139902cb9ec1c22ae5951db0fe08
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:98f8f075dd923014c71aa4592b2181ab07f51439e5933e94a7377c3d22b9063c
      lastState: {}
      name: prometheus-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:17Z"
    - containerID: cri-o://0f3176bd5a9f504625bdb258815b9cef2db6ed0528eb789a2ff0fcec5ab64d33
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      lastState: {}
      name: thanos-sidecar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:17Z"
    hostIP: 10.13.2.160
    initContainerStatuses:
    - containerID: cri-o://137b11e84754be6d3c71940941200eb4b9ba03a2e46e8edbf3e6fa309b7e9927
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: init-config-reloader
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://137b11e84754be6d3c71940941200eb4b9ba03a2e46e8edbf3e6fa309b7e9927
          exitCode: 0
          finishedAt: "2025-03-31T20:33:16Z"
          reason: Completed
          startedAt: "2025-03-31T20:33:16Z"
    phase: Running
    podIP: 10.129.0.59
    podIPs:
    - ip: 10.129.0.59
    qosClass: Burstable
    startTime: "2025-03-31T20:33:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.17/23"],"mac_address":"0a:58:0a:82:00:11","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.17/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.17"
            ],
            "mac": "0a:58:0a:82:00:11",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus-operator
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:31Z"
    generateName: prometheus-operator-7b8984d6fd-
    labels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.70.0
      pod-template-hash: 7b8984d6fd
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"cd641668-425d-4696-81cb-4963eaf7e77e"}: {}
        f:spec:
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"prometheus-operator"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"GOGC"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"prometheus-operator-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"prometheus-operator-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:31Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:32Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: prometheus-operator-7b8984d6fd-xhdss
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-7b8984d6fd
      uid: cd641668-425d-4696-81cb-4963eaf7e77e
    resourceVersion: "67751"
    uid: 6bf5d155-3b2f-422c-8e44-47f1f0d6ca85
  spec:
    automountServiceAccountToken: true
    containers:
    - args:
      - --kubelet-service=kube-system/kubelet
      - --prometheus-config-reloader=quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      - --prometheus-instance-namespaces=openshift-monitoring
      - --thanos-ruler-instance-namespaces=openshift-monitoring
      - --alertmanager-instance-namespaces=openshift-monitoring
      - --config-reloader-cpu-limit=0
      - --config-reloader-memory-limit=0
      - --config-reloader-cpu-request=1m
      - --config-reloader-memory-request=10Mi
      - --web.listen-address=127.0.0.1:8080
      env:
      - name: GOGC
        value: "30"
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:025cffe91780ace546116b4941c75dbb41c3016d9a7b25da4c547627c1218c80
      imagePullPolicy: IfNotPresent
      name: prometheus-operator
      resources:
        requests:
          cpu: 5m
          memory: 150Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njtjv
        readOnly: true
    - args:
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --upstream=http://localhost:8080/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: prometheus-operator-tls
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /etc/kube-rbac-policy
        name: prometheus-operator-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-njtjv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-operator
    serviceAccountName: prometheus-operator
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: prometheus-operator-tls
      secret:
        defaultMode: 420
        secretName: prometheus-operator-tls
    - name: prometheus-operator-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: prometheus-operator-kube-rbac-proxy-config
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: kube-api-access-njtjv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:41Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:41Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://ff4683297715f8851fdb6bdd2edb1596eb3d47c7ea09f53b0260b53ba389e7f1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:41Z"
    - containerID: cri-o://3c97bdd39db8381a76ced03104c64f89e6f389ae00223c79ed72fd3a2f8915c3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:025cffe91780ace546116b4941c75dbb41c3016d9a7b25da4c547627c1218c80
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:025cffe91780ace546116b4941c75dbb41c3016d9a7b25da4c547627c1218c80
      lastState: {}
      name: prometheus-operator
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:41Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.17
    podIPs:
    - ip: 10.130.0.17
    qosClass: Burstable
    startTime: "2025-03-31T20:23:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.15/23"],"mac_address":"0a:58:0a:82:00:0f","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.15/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.15"
            ],
            "mac": "0a:58:0a:82:00:0f",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus-operator-admission-webhook
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:10Z"
    generateName: prometheus-operator-admission-webhook-645ffdbb9c-
    labels:
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator-admission-webhook
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.70.0
      pod-template-hash: 645ffdbb9c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9afb1c55-2a11-424c-9ed3-b01b7a7025bb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"prometheus-operator-admission-webhook"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"tls-certificates"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.15"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: prometheus-operator-admission-webhook-645ffdbb9c-ldzx7
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-admission-webhook-645ffdbb9c
      uid: 9afb1c55-2a11-424c-9ed3-b01b7a7025bb
    resourceVersion: "67778"
    uid: 2b061b1a-adb5-43ac-ab0e-af363b072be8
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-operator-admission-webhook
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - args:
      - --web.enable-tls=true
      - --web.cert-file=/etc/tls/private/tls.crt
      - --web.key-file=/etc/tls/private/tls.key
      - --web.tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --web.tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-operator-admission-webhook
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: tls-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-89
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-operator-admission-webhook
    serviceAccountName: prometheus-operator-admission-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: tls-certificates
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        secretName: prometheus-operator-admission-webhook-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://5483969dd15a8e976d62344603f1161e76691ef19866de29df60721a096ffe23
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      lastState: {}
      name: prometheus-operator-admission-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:30Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.15
    podIPs:
    - ip: 10.130.0.15
    qosClass: Burstable
    startTime: "2025-03-31T20:23:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.12/23"],"mac_address":"0a:58:0a:81:00:0c","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.12/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.12"
            ],
            "mac": "0a:58:0a:81:00:0c",
            "default": true,
            "dns": {}
        }]
      kubectl.kubernetes.io/default-container: prometheus-operator-admission-webhook
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:23:10Z"
    generateName: prometheus-operator-admission-webhook-645ffdbb9c-
    labels:
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: prometheus-operator-admission-webhook
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.70.0
      pod-template-hash: 645ffdbb9c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/default-container: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"9afb1c55-2a11-424c-9ed3-b01b7a7025bb"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:automountServiceAccountToken: {}
          f:containers:
            k:{"name":"prometheus-operator-admission-webhook"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"tls-certificates"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:10Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:11Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.12"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:05Z"
    name: prometheus-operator-admission-webhook-645ffdbb9c-w8j7l
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: prometheus-operator-admission-webhook-645ffdbb9c
      uid: 9afb1c55-2a11-424c-9ed3-b01b7a7025bb
    resourceVersion: "68001"
    uid: 99e73dbd-703a-4c24-a5bd-d8a302fb45bd
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus-operator-admission-webhook
              app.kubernetes.io/part-of: openshift-monitoring
          namespaces:
          - openshift-monitoring
          topologyKey: kubernetes.io/hostname
    automountServiceAccountToken: false
    containers:
    - args:
      - --web.enable-tls=true
      - --web.cert-file=/etc/tls/private/tls.crt
      - --web.key-file=/etc/tls/private/tls.key
      - --web.tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --web.tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: prometheus-operator-admission-webhook
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: https
          scheme: HTTPS
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: tls-certificates
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-160
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: prometheus-operator-admission-webhook
    serviceAccountName: prometheus-operator-admission-webhook
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: tls-certificates
      secret:
        defaultMode: 420
        items:
        - key: tls.crt
          path: tls.crt
        - key: tls.key
          path: tls.key
        secretName: prometheus-operator-admission-webhook-tls
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:26Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:26Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://3b6aaa6c117ce931165f3a9aef38618d3b472bc19b9c40ca0c9f99730c693d01
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:395369d59bf29c8091aec79b446ce6bfb2070c561b806c7b73826934f9fd5056
      lastState: {}
      name: prometheus-operator-admission-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:23:25Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.129.0.12
    podIPs:
    - ip: 10.129.0.12
    qosClass: Burstable
    startTime: "2025-03-31T20:23:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.17/23"],"mac_address":"0a:58:0a:81:00:11","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.17/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.17"
            ],
            "mac": "0a:58:0a:81:00:11",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
      telemeter-token-hash: 68d7aovvntetq
    creationTimestamp: "2025-03-31T20:23:54Z"
    generateName: telemeter-client-749cbd8bdf-
    labels:
      app.kubernetes.io/component: telemetry-metrics-collector
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: telemeter-client
      app.kubernetes.io/part-of: openshift-monitoring
      pod-template-hash: 749cbd8bdf
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
            f:telemeter-token-hash: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"c45dd4cd-8f15-4331-8884-fbc4c2011d62"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-policy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"reload"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/serving-certs-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"telemeter-client"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"ANONYMIZE_LABELS"}:
                  .: {}
                  f:name: {}
                k:{"name":"FROM"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"HTTP_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"HTTPS_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"ID"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"NO_PROXY"}:
                  .: {}
                  f:name: {}
                k:{"name":"TO"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8080,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/pki/ca-trust/extracted/pem/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/serving-certs-ca-bundle"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/telemeter"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"federate-client-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-telemeter-client"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-telemeter-client-kube-rbac-proxy-config"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"serving-certs-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"telemeter-client-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"telemeter-trusted-ca-bundle"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
                f:optional: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:23:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:23:54Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.17"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: telemeter-client-749cbd8bdf-r778g
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: telemeter-client-749cbd8bdf
      uid: c45dd4cd-8f15-4331-8884-fbc4c2011d62
    resourceVersion: "68040"
    uid: 27889611-afdd-45c7-8f9c-b41e50129227
  spec:
    containers:
    - command:
      - /usr/bin/telemeter-client
      - --id=$(ID)
      - --from=$(FROM)
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --from-ca-file=/etc/serving-certs-ca-bundle/service-ca.crt
      - --from-token-file=/var/run/secrets/kubernetes.io/serviceaccount/token
      - --to=$(TO)
      - --to-token-file=/etc/telemeter/token
      - --listen=localhost:8080
      - --anonymize-salt-file=/etc/telemeter/salt
      - --anonymize-labels=$(ANONYMIZE_LABELS)
      - --match={__name__=~"cluster:usage:.*"}
      - --match={__name__="count:up0"}
      - --match={__name__="count:up1"}
      - --match={__name__="cluster_version"}
      - --match={__name__="cluster_version_available_updates"}
      - --match={__name__="cluster_version_capability"}
      - --match={__name__="cluster_operator_up"}
      - --match={__name__="cluster_operator_conditions"}
      - --match={__name__="cluster_version_payload"}
      - --match={__name__="cluster_installer"}
      - --match={__name__="cluster_infrastructure_provider"}
      - --match={__name__="cluster_feature_set"}
      - --match={__name__="instance:etcd_object_counts:sum"}
      - --match={__name__="ALERTS",alertstate="firing",severity=~"critical|warning|info|none"}
      - --match={__name__="code:apiserver_request_total:rate:sum"}
      - --match={__name__="cluster:capacity_cpu_cores:sum"}
      - --match={__name__="cluster:capacity_memory_bytes:sum"}
      - --match={__name__="cluster:cpu_usage_cores:sum"}
      - --match={__name__="cluster:memory_usage_bytes:sum"}
      - --match={__name__="openshift:cpu_usage_cores:sum"}
      - --match={__name__="openshift:memory_usage_bytes:sum"}
      - --match={__name__="workload:cpu_usage_cores:sum"}
      - --match={__name__="workload:memory_usage_bytes:sum"}
      - --match={__name__="cluster:virt_platform_nodes:sum"}
      - --match={__name__="cluster:node_instance_type_count:sum"}
      - --match={__name__="cnv:vmi_status_running:count"}
      - --match={__name__="cluster:vmi_request_cpu_cores:sum"}
      - --match={__name__="node_role_os_version_machine:cpu_capacity_cores:sum"}
      - --match={__name__="node_role_os_version_machine:cpu_capacity_sockets:sum"}
      - --match={__name__="subscription_sync_total"}
      - --match={__name__="olm_resolution_duration_seconds"}
      - --match={__name__="csv_succeeded"}
      - --match={__name__="csv_abnormal"}
      - --match={__name__="cluster:kube_persistentvolumeclaim_resource_requests_storage_bytes:provisioner:sum"}
      - --match={__name__="cluster:kubelet_volume_stats_used_bytes:provisioner:sum"}
      - --match={__name__="ceph_cluster_total_bytes"}
      - --match={__name__="ceph_cluster_total_used_raw_bytes"}
      - --match={__name__="ceph_health_status"}
      - --match={__name__="odf_system_raw_capacity_total_bytes"}
      - --match={__name__="odf_system_raw_capacity_used_bytes"}
      - --match={__name__="odf_system_health_status"}
      - --match={__name__="job:ceph_osd_metadata:count"}
      - --match={__name__="job:kube_pv:count"}
      - --match={__name__="job:odf_system_pvs:count"}
      - --match={__name__="job:ceph_pools_iops:total"}
      - --match={__name__="job:ceph_pools_iops_bytes:total"}
      - --match={__name__="job:ceph_versions_running:count"}
      - --match={__name__="job:noobaa_total_unhealthy_buckets:sum"}
      - --match={__name__="job:noobaa_bucket_count:sum"}
      - --match={__name__="job:noobaa_total_object_count:sum"}
      - --match={__name__="odf_system_bucket_count", system_type="OCS", system_vendor="Red
        Hat"}
      - --match={__name__="odf_system_objects_total", system_type="OCS", system_vendor="Red
        Hat"}
      - --match={__name__="noobaa_accounts_num"}
      - --match={__name__="noobaa_total_usage"}
      - --match={__name__="console_url"}
      - --match={__name__="cluster:console_auth_login_requests_total:sum"}
      - --match={__name__="cluster:console_auth_login_successes_total:sum"}
      - --match={__name__="cluster:console_auth_login_failures_total:sum"}
      - --match={__name__="cluster:console_auth_logout_requests_total:sum"}
      - --match={__name__="cluster:console_usage_users:max"}
      - --match={__name__="cluster:console_plugins_info:max"}
      - --match={__name__="cluster:console_customization_perspectives_info:max"}
      - --match={__name__="cluster:ovnkube_master_egress_routing_via_host:max"}
      - --match={__name__="cluster:network_attachment_definition_instances:max"}
      - --match={__name__="cluster:network_attachment_definition_enabled_instance_up:max"}
      - --match={__name__="cluster:ingress_controller_aws_nlb_active:sum"}
      - --match={__name__="cluster:route_metrics_controller_routes_per_shard:min"}
      - --match={__name__="cluster:route_metrics_controller_routes_per_shard:max"}
      - --match={__name__="cluster:route_metrics_controller_routes_per_shard:avg"}
      - --match={__name__="cluster:route_metrics_controller_routes_per_shard:median"}
      - --match={__name__="cluster:openshift_route_info:tls_termination:sum"}
      - --match={__name__="insightsclient_request_send_total"}
      - --match={__name__="cam_app_workload_migrations"}
      - --match={__name__="cluster:apiserver_current_inflight_requests:sum:max_over_time:2m"}
      - --match={__name__="cluster:alertmanager_integrations:max"}
      - --match={__name__="cluster:telemetry_selected_series:count"}
      - --match={__name__="openshift:prometheus_tsdb_head_series:sum"}
      - --match={__name__="openshift:prometheus_tsdb_head_samples_appended_total:sum"}
      - --match={__name__="monitoring:container_memory_working_set_bytes:sum"}
      - --match={__name__="namespace_job:scrape_series_added:topk3_sum1h"}
      - --match={__name__="namespace_job:scrape_samples_post_metric_relabeling:topk3"}
      - --match={__name__="monitoring:haproxy_server_http_responses_total:sum"}
      - --match={__name__="profile:cluster_monitoring_operator_collection_profile:max"}
      - --match={__name__="rhmi_status"}
      - --match={__name__="status:upgrading:version:rhoam_state:max"}
      - --match={__name__="state:rhoam_critical_alerts:max"}
      - --match={__name__="state:rhoam_warning_alerts:max"}
      - --match={__name__="rhoam_7d_slo_percentile:max"}
      - --match={__name__="rhoam_7d_slo_remaining_error_budget:max"}
      - --match={__name__="cluster_legacy_scheduler_policy"}
      - --match={__name__="cluster_master_schedulable"}
      - --match={__name__="che_workspace_status"}
      - --match={__name__="che_workspace_started_total"}
      - --match={__name__="che_workspace_failure_total"}
      - --match={__name__="che_workspace_start_time_seconds_sum"}
      - --match={__name__="che_workspace_start_time_seconds_count"}
      - --match={__name__="cco_credentials_mode"}
      - --match={__name__="cluster:kube_persistentvolume_plugin_type_counts:sum"}
      - --match={__name__="acm_managed_cluster_info"}
      - --match={__name__="acm_console_page_count:sum", page=~"overview-classic|overview-fleet|search|search-details|clusters|application|governance"}
      - --match={__name__="cluster:vsphere_vcenter_info:sum"}
      - --match={__name__="cluster:vsphere_esxi_version_total:sum"}
      - --match={__name__="cluster:vsphere_node_hw_version_total:sum"}
      - --match={__name__="openshift:build_by_strategy:sum"}
      - --match={__name__="rhods_aggregate_availability"}
      - --match={__name__="rhods_total_users"}
      - --match={__name__="instance:etcd_disk_wal_fsync_duration_seconds:histogram_quantile",quantile="0.99"}
      - --match={__name__="instance:etcd_mvcc_db_total_size_in_bytes:sum"}
      - --match={__name__="instance:etcd_network_peer_round_trip_time_seconds:histogram_quantile",quantile="0.99"}
      - --match={__name__="instance:etcd_mvcc_db_total_size_in_use_in_bytes:sum"}
      - --match={__name__="instance:etcd_disk_backend_commit_duration_seconds:histogram_quantile",quantile="0.99"}
      - --match={__name__="jaeger_operator_instances_storage_types"}
      - --match={__name__="jaeger_operator_instances_strategies"}
      - --match={__name__="jaeger_operator_instances_agent_strategies"}
      - --match={__name__="appsvcs:cores_by_product:sum"}
      - --match={__name__="nto_custom_profiles:count"}
      - --match={__name__="openshift_csi_share_configmap"}
      - --match={__name__="openshift_csi_share_secret"}
      - --match={__name__="openshift_csi_share_mount_failures_total"}
      - --match={__name__="openshift_csi_share_mount_requests_total"}
      - --match={__name__="eo_es_storage_info"}
      - --match={__name__="eo_es_redundancy_policy_info"}
      - --match={__name__="eo_es_defined_delete_namespaces_total"}
      - --match={__name__="eo_es_misconfigured_memory_resources_info"}
      - --match={__name__="cluster:eo_es_data_nodes_total:max"}
      - --match={__name__="cluster:eo_es_documents_created_total:sum"}
      - --match={__name__="cluster:eo_es_documents_deleted_total:sum"}
      - --match={__name__="pod:eo_es_shards_total:max"}
      - --match={__name__="eo_es_cluster_management_state_info"}
      - --match={__name__="imageregistry:imagestreamtags_count:sum"}
      - --match={__name__="imageregistry:operations_count:sum"}
      - --match={__name__="log_logging_info"}
      - --match={__name__="log_collector_error_count_total"}
      - --match={__name__="log_forwarder_pipeline_info"}
      - --match={__name__="log_forwarder_input_info"}
      - --match={__name__="log_forwarder_output_info"}
      - --match={__name__="cluster:log_collected_bytes_total:sum"}
      - --match={__name__="cluster:log_logged_bytes_total:sum"}
      - --match={__name__="openshift_logging:log_forwarder_pipelines:sum"}
      - --match={__name__="openshift_logging:log_forwarders:sum"}
      - --match={__name__="openshift_logging:log_forwarder_input_type:sum"}
      - --match={__name__="openshift_logging:log_forwarder_output_type:sum"}
      - --match={__name__="openshift_logging:vector_component_received_bytes_total:rate5m"}
      - --match={__name__="cluster:kata_monitor_running_shim_count:sum"}
      - --match={__name__="platform:hypershift_hostedclusters:max"}
      - --match={__name__="platform:hypershift_nodepools:max"}
      - --match={__name__="namespace:noobaa_unhealthy_bucket_claims:max"}
      - --match={__name__="namespace:noobaa_buckets_claims:max"}
      - --match={__name__="namespace:noobaa_unhealthy_namespace_resources:max"}
      - --match={__name__="namespace:noobaa_namespace_resources:max"}
      - --match={__name__="namespace:noobaa_unhealthy_namespace_buckets:max"}
      - --match={__name__="namespace:noobaa_namespace_buckets:max"}
      - --match={__name__="namespace:noobaa_accounts:max"}
      - --match={__name__="namespace:noobaa_usage:max"}
      - --match={__name__="namespace:noobaa_system_health_status:max"}
      - --match={__name__="ocs_advanced_feature_usage"}
      - --match={__name__="os_image_url_override:sum"}
      - --match={__name__="cluster:vsphere_topology_tags:max"}
      - --match={__name__="cluster:vsphere_infrastructure_failure_domains:max"}
      - --match={__name__="cluster:vsphere_csi_migration:max"}
      - --match={__name__="apiserver_list_watch_request_success_total:rate:sum", verb=~"LIST|WATCH"}
      - --match={__name__="rhacs:telemetry:rox_central_info"}
      - --match={__name__="rhacs:telemetry:rox_central_secured_clusters"}
      - --match={__name__="rhacs:telemetry:rox_central_secured_nodes"}
      - --match={__name__="rhacs:telemetry:rox_central_secured_vcpus"}
      - --match={__name__="rhacs:telemetry:rox_sensor_info"}
      - --match={__name__="cluster:volume_manager_selinux_pod_context_mismatch_total"}
      - --match={__name__="cluster:volume_manager_selinux_volume_context_mismatch_warnings_total"}
      - --match={__name__="cluster:volume_manager_selinux_volume_context_mismatch_errors_total"}
      - --match={__name__="cluster:volume_manager_selinux_volumes_admitted_total"}
      - --match={__name__="ols:provider_model_configuration"}
      - --match={__name__="ols:rest_api_query_calls_total:2xx"}
      - --match={__name__="ols:rest_api_query_calls_total:4xx"}
      - --match={__name__="ols:rest_api_query_calls_total:5xx"}
      - --match={__name__="openshift:openshift_network_operator_ipsec_state:info"}
      - --limit-bytes=5242880
      env:
      - name: ANONYMIZE_LABELS
      - name: FROM
        value: https://prometheus-k8s.openshift-monitoring.svc:9092
      - name: ID
        value: 11cd3b4a-61b3-4179-9a90-2e824b08ccfe
      - name: TO
        value: https://infogw.api.openshift.com/
      - name: HTTP_PROXY
      - name: HTTPS_PROXY
      - name: NO_PROXY
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:843bee0df2aa0193f5e60ac4b27749b8ce68fdc0ffa8d08eff61f010c8479c9f
      imagePullPolicy: IfNotPresent
      name: telemeter-client
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 40Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/serving-certs-ca-bundle
        name: serving-certs-ca-bundle
      - mountPath: /etc/telemeter
        name: secret-telemeter-client
      - mountPath: /etc/tls/private
        name: federate-client-tls
      - mountPath: /etc/pki/ca-trust/extracted/pem/
        name: telemeter-trusted-ca-bundle
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6l9gp
        readOnly: true
    - args:
      - --reload-url=http://localhost:8080/-/reload
      - --watched-dir=/etc/serving-certs-ca-bundle
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imagePullPolicy: IfNotPresent
      name: reload
      resources:
        requests:
          cpu: 1m
          memory: 10Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/serving-certs-ca-bundle
        name: serving-certs-ca-bundle
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6l9gp
        readOnly: true
    - args:
      - --secure-listen-address=:8443
      - --upstream=http://127.0.0.1:8080/
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --config-file=/etc/kube-rbac-policy/config.yaml
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 20Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/tls/private
        name: telemeter-client-tls
      - mountPath: /etc/kube-rbac-policy
        name: secret-telemeter-client-kube-rbac-proxy-config
        readOnly: true
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6l9gp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: telemeter-client
    serviceAccountName: telemeter-client
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        name: telemeter-client-serving-certs-ca-bundle
      name: serving-certs-ca-bundle
    - name: secret-telemeter-client
      secret:
        defaultMode: 420
        secretName: telemeter-client
    - name: telemeter-client-tls
      secret:
        defaultMode: 420
        secretName: telemeter-client-tls
    - name: federate-client-tls
      secret:
        defaultMode: 420
        secretName: federate-client-certs
    - name: secret-telemeter-client-kube-rbac-proxy-config
      secret:
        defaultMode: 420
        secretName: telemeter-client-kube-rbac-proxy-config
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - configMap:
        defaultMode: 420
        items:
        - key: ca-bundle.crt
          path: tls-ca-bundle.pem
        name: telemeter-trusted-ca-bundle-56c9b9fa8d9gs
        optional: true
      name: telemeter-trusted-ca-bundle
    - name: kube-api-access-6l9gp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:36Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:36Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:23:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://b2f6c135dbfb36821ccb0df11223d85bd52e5ecae2867510ec4dc3880b01060f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:36Z"
    - containerID: cri-o://96ce3d33287ecddb1be35176b73942520a3234b7aefc0bca024290f03abb5155
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:0141bc5145fd34d4f740a732a0e4463840f1dfd9350b872bf0f88f093565150c
      lastState: {}
      name: reload
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:35Z"
    - containerID: cri-o://0d7833ca80f31d06c6dea7452d14bff8bceb394cdb5dac94fd27bb9422b5e875
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:843bee0df2aa0193f5e60ac4b27749b8ce68fdc0ffa8d08eff61f010c8479c9f
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:843bee0df2aa0193f5e60ac4b27749b8ce68fdc0ffa8d08eff61f010c8479c9f
      lastState: {}
      name: telemeter-client
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:20Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.129.0.17
    podIPs:
    - ip: 10.129.0.17
    qosClass: Burstable
    startTime: "2025-03-31T20:23:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.48/23"],"mac_address":"0a:58:0a:82:00:30","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.48/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.48"
            ],
            "mac": "0a:58:0a:82:00:30",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:28:59Z"
    generateName: thanos-querier-576fbfc76c-
    labels:
      app.kubernetes.io/component: query-layer
      app.kubernetes.io/instance: thanos-querier
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: thanos-query
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.32.5
      pod-template-hash: 576fbfc76c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2d1a79e3-6d22-4482-94da-185d1d5ed9c7"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-rules"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9093,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"thanos-query"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-metrics"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-rules"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.48"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:04Z"
    name: thanos-querier-576fbfc76c-gph2c
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: thanos-querier-576fbfc76c
      uid: 2d1a79e3-6d22-4482-94da-185d1d5ed9c7
    resourceVersion: "67916"
    uid: 2d17b301-25c8-4e8d-80c4-78bb7136cd85
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query-layer
              app.kubernetes.io/instance: thanos-querier
              app.kubernetes.io/name: thanos-query
              app.kubernetes.io/part-of: openshift-monitoring
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - query
      - --grpc-address=127.0.0.1:10901
      - --http-address=127.0.0.1:9090
      - --log.format=logfmt
      - --query.replica-label=prometheus_replica
      - --query.replica-label=thanos_ruler_replica
      - --endpoint=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --query.auto-downsampling
      - --store.sd-dns-resolver=miekgdns
      - --grpc-client-tls-secure
      - --grpc-client-tls-cert=/etc/tls/grpc/client.crt
      - --grpc-client-tls-key=/etc/tls/grpc/client.key
      - --grpc-client-tls-ca=/etc/tls/grpc/ca.crt
      - --grpc-client-server-name=prometheus-grpc
      - --rule=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --target=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --web.disable-cors
      env:
      - name: HOST_IP_ADDRESS
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imagePullPolicy: IfNotPresent
      name: thanos-query
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 12Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000440000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qfx6j
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9091
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 4
        httpGet:
          path: /-/healthy
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 20
        httpGet:
          path: /-/ready
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-web
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qfx6j
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/query,/api/v1/query_range,/api/v1/labels,/api/v1/label/*/values,/api/v1/series
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qfx6j
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9095
      - --upstream=http://127.0.0.1:9090
      - --label=namespace
      - --enable-label-apis
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qfx6j
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9093
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/rules,/api/v1/alerts
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-rules
      ports:
      - containerPort: 9093
        name: tenancy-rules
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qfx6j
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9094
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metrics
      ports:
      - containerPort: 9094
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-metrics
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qfx6j
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: thanos-querier-dockercfg-52p47
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: thanos-querier
    serviceAccountName: thanos-querier
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-thanos-querier-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-tls
    - name: secret-thanos-querier-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy
    - name: secret-thanos-querier-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-web
    - name: secret-thanos-querier-kube-rbac-proxy-rules
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-rules
    - name: secret-thanos-querier-kube-rbac-proxy-metrics
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-metrics
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-grpc-tls-fkjv99m87p1n1
    - name: kube-api-access-qfx6j
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cb8d1483fe7f135f3d71f80822dade29470e226f0db12f46c9a461a4707d2a8d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:34Z"
    - containerID: cri-o://8bdd09d8dc1e284c362417a3c6367a735e2f0d9e53593c95f32ea1dc5c75a382
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:42Z"
    - containerID: cri-o://6a6613444b5c1b4c423d5d803a57e4129db3eb70af36c0835b1b825416521935
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:42Z"
    - containerID: cri-o://f86803bc24f05201fe34ab62e84629038ec53455db4373f0aff487bfcc3f66ee
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:34Z"
    - containerID: cri-o://8aa221bb13eb6f1aa22814a65945e70c26a278aa0775d84799e2f3b65e7f96a1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:42Z"
    - containerID: cri-o://b657d7c8b00c6917980e69ee9e0ed55ee4a57cb9a51c452c5a3e9c3ebf7898dc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      lastState: {}
      name: thanos-query
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:34Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.48
    podIPs:
    - ip: 10.130.0.48
    qosClass: Burstable
    startTime: "2025-03-31T20:28:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.49/23"],"mac_address":"0a:58:0a:81:00:31","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.49/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.49"
            ],
            "mac": "0a:58:0a:81:00:31",
            "default": true,
            "dns": {}
        }]
      openshift.io/required-scc: restricted-v2
      openshift.io/scc: restricted-v2
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-03-31T20:28:59Z"
    generateName: thanos-querier-576fbfc76c-
    labels:
      app.kubernetes.io/component: query-layer
      app.kubernetes.io/instance: thanos-querier
      app.kubernetes.io/managed-by: cluster-monitoring-operator
      app.kubernetes.io/name: thanos-query
      app.kubernetes.io/part-of: openshift-monitoring
      app.kubernetes.io/version: 0.32.5
      pod-template-hash: 576fbfc76c
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:28:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:openshift.io/required-scc: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app.kubernetes.io/component: {}
            f:app.kubernetes.io/instance: {}
            f:app.kubernetes.io/managed-by: {}
            f:app.kubernetes.io/name: {}
            f:app.kubernetes.io/part-of: {}
            f:app.kubernetes.io/version: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"2d1a79e3-6d22-4482-94da-185d1d5ed9c7"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:podAntiAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9092,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-metrics"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9094,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/client"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-rules"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9093,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"kube-rbac-proxy-web"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:livenessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:readinessProbe:
                .: {}
                f:failureThreshold: {}
                f:httpGet:
                  .: {}
                  f:path: {}
                  f:port: {}
                  f:scheme: {}
                f:initialDelaySeconds: {}
                f:periodSeconds: {}
                f:successThreshold: {}
                f:timeoutSeconds: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/kube-rbac-proxy"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/tls/private"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"prom-label-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
            k:{"name":"thanos-query"}:
              .: {}
              f:args: {}
              f:env:
                .: {}
                k:{"name":"HOST_IP_ADDRESS"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9090,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:allowPrivilegeEscalation: {}
                f:capabilities:
                  .: {}
                  f:drop: {}
                f:readOnlyRootFilesystem: {}
                f:runAsNonRoot: {}
                f:seccompProfile:
                  .: {}
                  f:type: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/tls/grpc"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:seccompProfile:
              .: {}
              f:type: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-client-ca"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"secret-grpc-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-metrics"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-rules"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-kube-rbac-proxy-web"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
            k:{"name":"secret-thanos-querier-tls"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:28:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:29:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.49"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: thanos-querier-576fbfc76c-hcfvl
    namespace: openshift-monitoring
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: thanos-querier-576fbfc76c
      uid: 2d1a79e3-6d22-4482-94da-185d1d5ed9c7
    resourceVersion: "68087"
    uid: 0bd30b00-fcf4-41da-b1ef-1b2366f629a2
  spec:
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchLabels:
              app.kubernetes.io/component: query-layer
              app.kubernetes.io/instance: thanos-querier
              app.kubernetes.io/name: thanos-query
              app.kubernetes.io/part-of: openshift-monitoring
          topologyKey: kubernetes.io/hostname
    containers:
    - args:
      - query
      - --grpc-address=127.0.0.1:10901
      - --http-address=127.0.0.1:9090
      - --log.format=logfmt
      - --query.replica-label=prometheus_replica
      - --query.replica-label=thanos_ruler_replica
      - --endpoint=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --query.auto-downsampling
      - --store.sd-dns-resolver=miekgdns
      - --grpc-client-tls-secure
      - --grpc-client-tls-cert=/etc/tls/grpc/client.crt
      - --grpc-client-tls-key=/etc/tls/grpc/client.key
      - --grpc-client-tls-ca=/etc/tls/grpc/ca.crt
      - --grpc-client-server-name=prometheus-grpc
      - --rule=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --target=dnssrv+_grpc._tcp.prometheus-operated.openshift-monitoring.svc.cluster.local
      - --web.disable-cors
      env:
      - name: HOST_IP_ADDRESS
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imagePullPolicy: IfNotPresent
      name: thanos-query
      ports:
      - containerPort: 9090
        name: http
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 12Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: false
        runAsNonRoot: true
        runAsUser: 1000440000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/grpc
        name: secret-grpc-tls
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7229n
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9091
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --ignore-paths=/-/healthy,/-/ready
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 4
        httpGet:
          path: /-/healthy
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 1
      name: kube-rbac-proxy-web
      ports:
      - containerPort: 9091
        name: web
        protocol: TCP
      readinessProbe:
        failureThreshold: 20
        httpGet:
          path: /-/ready
          port: 9091
          scheme: HTTPS
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-web
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7229n
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9092
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/query,/api/v1/query_range,/api/v1/labels,/api/v1/label/*/values,/api/v1/series
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 9092
        name: tenancy
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7229n
        readOnly: true
    - args:
      - --insecure-listen-address=127.0.0.1:9095
      - --upstream=http://127.0.0.1:9090
      - --label=namespace
      - --enable-label-apis
      - --error-on-replace
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imagePullPolicy: IfNotPresent
      name: prom-label-proxy
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7229n
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9093
      - --upstream=http://127.0.0.1:9095
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --allow-paths=/api/v1/rules,/api/v1/alerts
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-rules
      ports:
      - containerPort: 9093
        name: tenancy-rules
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-rules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7229n
        readOnly: true
    - args:
      - --secure-listen-address=0.0.0.0:9094
      - --upstream=http://127.0.0.1:9090
      - --config-file=/etc/kube-rbac-proxy/config.yaml
      - --tls-cert-file=/etc/tls/private/tls.crt
      - --tls-private-key-file=/etc/tls/private/tls.key
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256
      - --client-ca-file=/etc/tls/client/client-ca.crt
      - --allow-paths=/metrics
      - --tls-min-version=VersionTLS12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy-metrics
      ports:
      - containerPort: 9094
        name: metrics
        protocol: TCP
      resources:
        requests:
          cpu: 1m
          memory: 15Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        runAsUser: 1000440000
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/tls/private
        name: secret-thanos-querier-tls
      - mountPath: /etc/kube-rbac-proxy
        name: secret-thanos-querier-kube-rbac-proxy-metrics
      - mountPath: /etc/tls/client
        name: metrics-client-ca
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-7229n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: thanos-querier-dockercfg-52p47
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      fsGroup: 1000440000
      runAsNonRoot: true
      seLinuxOptions:
        level: s0:c21,c10
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: thanos-querier
    serviceAccountName: thanos-querier
    terminationGracePeriodSeconds: 120
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: secret-thanos-querier-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-tls
    - name: secret-thanos-querier-kube-rbac-proxy
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy
    - name: secret-thanos-querier-kube-rbac-proxy-web
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-web
    - name: secret-thanos-querier-kube-rbac-proxy-rules
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-rules
    - name: secret-thanos-querier-kube-rbac-proxy-metrics
      secret:
        defaultMode: 420
        secretName: thanos-querier-kube-rbac-proxy-metrics
    - configMap:
        defaultMode: 420
        name: metrics-client-ca
      name: metrics-client-ca
    - name: secret-grpc-tls
      secret:
        defaultMode: 420
        secretName: thanos-querier-grpc-tls-fkjv99m87p1n1
    - name: kube-api-access-7229n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:48Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:29:48Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:28:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f1bc9ec78e55b1429cb58fa0250580d767dde00bc6e9bcaa7f432ce759ae38ad
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:37Z"
    - containerID: cri-o://4d36c839b0e4bd7fb4545523bdbd655cdd96f1ef221358e7d5f1a67ebd490eee
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-metrics
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:46Z"
    - containerID: cri-o://95ee07d1c88f3ba1bf15f5db5842c8a1a4d208c054e3e3e1a15a9450bc484420
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-rules
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:46Z"
    - containerID: cri-o://541542fe4758ed58b9a3cb4057e8809aac44f4ef1c9fd4e46793ce7cdd1b9d79
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy-web
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:36Z"
    - containerID: cri-o://b94f3e97c8afbe757a486febfa24179a3dc20c2c821c50e2c5ce7758fef5e35d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ac00b0b546aab476fe5f07af1a141ea51813e49c1088112d0e58f1fbc0f33859
      lastState: {}
      name: prom-label-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:46Z"
    - containerID: cri-o://7529cc5eeb81e0e7af6ce18e2369dc49bc3c4193a45be6ddde707da16a3c6f26
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a31452bf582a28c09ca9b46de7a597774366a70237c49d5aa514e1cac1bd7823
      lastState: {}
      name: thanos-query
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:29:36Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.129.0.49
    podIPs:
    - ip: 10.129.0.49
    qosClass: Burstable
    startTime: "2025-03-31T20:28:59Z"
kind: PodList
metadata:
  resourceVersion: "718178"
