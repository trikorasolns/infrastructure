---
apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-31T20:17:59Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 55469cc7f7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b314baad-5977-4282-beb7-52a961bad0ee"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.0.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: multus-additional-cni-plugins-27m8j
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: b314baad-5977-4282-beb7-52a961bad0ee
    resourceVersion: "68204"
    uid: 01ee9997-c827-4182-94ac-bf2480eedbfd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-0-150
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zc55t
        readOnly: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-zc55t
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:16Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:16Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9d8aaac18fb995e527ea952792e9bcb69ea9b659e14d54272815cc3e62afe111
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:16Z"
    hostIP: 10.13.0.150
    initContainerStatuses:
    - containerID: cri-o://017abf2705afd6b1b7c1c135789e187ea8a7cec086319739fb0b77f258c370cb
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://017abf2705afd6b1b7c1c135789e187ea8a7cec086319739fb0b77f258c370cb
          exitCode: 0
          finishedAt: "2025-03-31T20:18:17Z"
          reason: Completed
          startedAt: "2025-03-31T20:18:17Z"
    - containerID: cri-o://b7ef0761a088ac33af6ce5293a6e2501cd11a9d45588d7f708b6465272664a4b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b7ef0761a088ac33af6ce5293a6e2501cd11a9d45588d7f708b6465272664a4b
          exitCode: 0
          finishedAt: "2025-03-31T20:19:44Z"
          reason: Completed
          startedAt: "2025-03-31T20:19:44Z"
    - containerID: cri-o://283f7eb1ef4dbdabf8b60d61810afc277a1e0f806dfc301fb42775d1999c69fa
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://283f7eb1ef4dbdabf8b60d61810afc277a1e0f806dfc301fb42775d1999c69fa
          exitCode: 0
          finishedAt: "2025-03-31T20:19:55Z"
          reason: Completed
          startedAt: "2025-03-31T20:19:55Z"
    - containerID: cri-o://69c6e91bb0dee1064afb620b3f1d5473daad6f9292d50e38d32c1ffe67e48dd1
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://69c6e91bb0dee1064afb620b3f1d5473daad6f9292d50e38d32c1ffe67e48dd1
          exitCode: 0
          finishedAt: "2025-03-31T20:20:09Z"
          reason: Completed
          startedAt: "2025-03-31T20:20:09Z"
    - containerID: cri-o://ec536e4f8a67cc361396c94232de159a0e7a3a332f7a833d4b9be1363508b243
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ec536e4f8a67cc361396c94232de159a0e7a3a332f7a833d4b9be1363508b243
          exitCode: 0
          finishedAt: "2025-03-31T20:21:13Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:13Z"
    - containerID: cri-o://af761e2cee39c260ec2b5093ca1d96318bb0a38ffbaca529e7f46d808a3c0f8a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://af761e2cee39c260ec2b5093ca1d96318bb0a38ffbaca529e7f46d808a3c0f8a
          exitCode: 0
          finishedAt: "2025-03-31T20:21:15Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:15Z"
    phase: Running
    podIP: 10.13.0.150
    podIPs:
    - ip: 10.13.0.150
    qosClass: Burstable
    startTime: "2025-03-31T20:17:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-01T08:33:00Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 55469cc7f7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b314baad-5977-4282-beb7-52a961bad0ee"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:35:00Z"
    name: multus-additional-cni-plugins-4lxcb
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: b314baad-5977-4282-beb7-52a961bad0ee
    resourceVersion: "259801"
    uid: c6df75f1-9cd1-408f-99c3-be4943d4ee62
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-1
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lt6qd
        readOnly: true
    nodeName: host-10-13-2-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-lt6qd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://a118b69eaa39017572e11106f20642d24d1bced657b2870168c0d98d61c9e0da
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:59Z"
    hostIP: 10.13.2.1
    initContainerStatuses:
    - containerID: cri-o://d055f41dfaea5cc2060433587317a9d4d8e50a8015679e37061c4ea2242dcd6f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://d055f41dfaea5cc2060433587317a9d4d8e50a8015679e37061c4ea2242dcd6f
          exitCode: 0
          finishedAt: "2025-04-01T08:34:00Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:00Z"
    - containerID: cri-o://97e9062666308384ea19492aaeaba111b95eb1d4eb34b1a674c995a75bcecf15
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://97e9062666308384ea19492aaeaba111b95eb1d4eb34b1a674c995a75bcecf15
          exitCode: 0
          finishedAt: "2025-04-01T08:34:30Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:30Z"
    - containerID: cri-o://c15eb22fca9721276d4175432f2c1fc117db19f319d0c1569a226a622a81f0ca
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c15eb22fca9721276d4175432f2c1fc117db19f319d0c1569a226a622a81f0ca
          exitCode: 0
          finishedAt: "2025-04-01T08:34:40Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:40Z"
    - containerID: cri-o://9ee3742eba115e571fecf2b80784944b64d593c473eb8998769973d57ca67f7d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://9ee3742eba115e571fecf2b80784944b64d593c473eb8998769973d57ca67f7d
          exitCode: 0
          finishedAt: "2025-04-01T08:34:43Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:43Z"
    - containerID: cri-o://7f503fd32a724ad2ae1ace0bbfe792b737df7bebb83603f8d5cabe5dec56013b
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7f503fd32a724ad2ae1ace0bbfe792b737df7bebb83603f8d5cabe5dec56013b
          exitCode: 0
          finishedAt: "2025-04-01T08:34:58Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:58Z"
    - containerID: cri-o://464b713435889f67bab943af42db73f48243fc6f4457989f0a96a8e39fd72ec0
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://464b713435889f67bab943af42db73f48243fc6f4457989f0a96a8e39fd72ec0
          exitCode: 0
          finishedAt: "2025-04-01T08:34:59Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:59Z"
    phase: Running
    podIP: 10.13.2.1
    podIPs:
    - ip: 10.13.2.1
    qosClass: Burstable
    startTime: "2025-04-01T08:33:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-31T20:17:59Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 55469cc7f7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b314baad-5977-4282-beb7-52a961bad0ee"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:04Z"
    name: multus-additional-cni-plugins-gpbhm
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: b314baad-5977-4282-beb7-52a961bad0ee
    resourceVersion: "67921"
    uid: 70e6afde-9b5e-4702-923f-9780c8bd35e5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-89
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-czddz
        readOnly: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-czddz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:19Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8eeca585b07458a39512baf2183722327c5463cafc2e9e1a3d527f41ad6f8ce4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:19Z"
    hostIP: 10.13.2.89
    initContainerStatuses:
    - containerID: cri-o://e6f08b15be4d4d76179182ec6daad9fb99ffaab3375ffdeed0e20d413c281633
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://e6f08b15be4d4d76179182ec6daad9fb99ffaab3375ffdeed0e20d413c281633
          exitCode: 0
          finishedAt: "2025-03-31T20:18:17Z"
          reason: Completed
          startedAt: "2025-03-31T20:18:17Z"
    - containerID: cri-o://f8568b9456346277694ed86db276e9e221f3631ee3dfc99162825edb01f3c6bc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://f8568b9456346277694ed86db276e9e221f3631ee3dfc99162825edb01f3c6bc
          exitCode: 0
          finishedAt: "2025-03-31T20:19:52Z"
          reason: Completed
          startedAt: "2025-03-31T20:19:52Z"
    - containerID: cri-o://7d97b0d43cc21d8be6c13ff7a8cb3075924dca0dcb1ecedd25e4be4ecceda477
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7d97b0d43cc21d8be6c13ff7a8cb3075924dca0dcb1ecedd25e4be4ecceda477
          exitCode: 0
          finishedAt: "2025-03-31T20:20:01Z"
          reason: Completed
          startedAt: "2025-03-31T20:20:01Z"
    - containerID: cri-o://48dcc89696ee9469875c9a0433b08e10e51fdcf997bb2862d48f5b219fb75b12
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://48dcc89696ee9469875c9a0433b08e10e51fdcf997bb2862d48f5b219fb75b12
          exitCode: 0
          finishedAt: "2025-03-31T20:20:17Z"
          reason: Completed
          startedAt: "2025-03-31T20:20:17Z"
    - containerID: cri-o://43770d52250b5b7707e5e0d4c9395b6e71ad5daa52dbb3a03ebc7210df772c70
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://43770d52250b5b7707e5e0d4c9395b6e71ad5daa52dbb3a03ebc7210df772c70
          exitCode: 0
          finishedAt: "2025-03-31T20:21:18Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:18Z"
    - containerID: cri-o://ca5b91c306c9def18d113e914311d53a52243fd5338fe341de6230b5b85c7b2c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ca5b91c306c9def18d113e914311d53a52243fd5338fe341de6230b5b85c7b2c
          exitCode: 0
          finishedAt: "2025-03-31T20:21:18Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:18Z"
    phase: Running
    podIP: 10.13.2.89
    podIPs:
    - ip: 10.13.2.89
    qosClass: Burstable
    startTime: "2025-03-31T20:17:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-01T08:27:24Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 55469cc7f7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b314baad-5977-4282-beb7-52a961bad0ee"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:27:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:28:57Z"
    name: multus-additional-cni-plugins-jptk9
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: b314baad-5977-4282-beb7-52a961bad0ee
    resourceVersion: "257372"
    uid: 18c44725-14f1-48cb-9dd3-ddcd23e7c9d9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-78
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-99vr2
        readOnly: true
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-99vr2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:57Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:57Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://31080a81e6b02f6bc65cb5fd9a66b9a29bf89f0a8b95d58f720fbf1bae2a0500
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:57Z"
    hostIP: 10.13.3.78
    initContainerStatuses:
    - containerID: cri-o://c5ba1bd22825671a5b891d808f36afbc8484515ae6ef1234273a5a2e73600753
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c5ba1bd22825671a5b891d808f36afbc8484515ae6ef1234273a5a2e73600753
          exitCode: 0
          finishedAt: "2025-04-01T08:27:53Z"
          reason: Completed
          startedAt: "2025-04-01T08:27:53Z"
    - containerID: cri-o://00590c8e77476ce0a3eeddb53ed7671b9943807331a72d642b489a4ab8c91f5a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://00590c8e77476ce0a3eeddb53ed7671b9943807331a72d642b489a4ab8c91f5a
          exitCode: 0
          finishedAt: "2025-04-01T08:28:27Z"
          reason: Completed
          startedAt: "2025-04-01T08:28:27Z"
    - containerID: cri-o://1efdee3d6524c9059b9d4d48682691f632acfee2ed3b0b6ae6f4564d779922da
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://1efdee3d6524c9059b9d4d48682691f632acfee2ed3b0b6ae6f4564d779922da
          exitCode: 0
          finishedAt: "2025-04-01T08:28:31Z"
          reason: Completed
          startedAt: "2025-04-01T08:28:31Z"
    - containerID: cri-o://768bc4e81f49ded212d0a4135bbd96c8e0b396b5df7270917cda434676a3319f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://768bc4e81f49ded212d0a4135bbd96c8e0b396b5df7270917cda434676a3319f
          exitCode: 0
          finishedAt: "2025-04-01T08:28:41Z"
          reason: Completed
          startedAt: "2025-04-01T08:28:41Z"
    - containerID: cri-o://929cb4ab001369881a4adf759f6b20d9b47ce937b84e9bd2cf40a534232bf32e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://929cb4ab001369881a4adf759f6b20d9b47ce937b84e9bd2cf40a534232bf32e
          exitCode: 0
          finishedAt: "2025-04-01T08:28:55Z"
          reason: Completed
          startedAt: "2025-04-01T08:28:55Z"
    - containerID: cri-o://ac4da0bc47864581ffcc8cbe735a2ac2c4822e6ad0cedaaa35be53f4d3503279
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://ac4da0bc47864581ffcc8cbe735a2ac2c4822e6ad0cedaaa35be53f4d3503279
          exitCode: 0
          finishedAt: "2025-04-01T08:28:56Z"
          reason: Completed
          startedAt: "2025-04-01T08:28:56Z"
    phase: Running
    podIP: 10.13.3.78
    podIPs:
    - ip: 10.13.3.78
    qosClass: Burstable
    startTime: "2025-04-01T08:27:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-01T08:32:57Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 55469cc7f7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b314baad-5977-4282-beb7-52a961bad0ee"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:32:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:58Z"
    name: multus-additional-cni-plugins-lrgth
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: b314baad-5977-4282-beb7-52a961bad0ee
    resourceVersion: "259742"
    uid: ed72509f-8d27-4ed9-9da8-f1f0dd5cbe5e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-120
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xpkrl
        readOnly: true
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-xpkrl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:58Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:58Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://af24cbe81e4cae02ca7d647a7ebb111ff7e23956a5358b035f804459c9491707
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:57Z"
    hostIP: 10.13.3.120
    initContainerStatuses:
    - containerID: cri-o://45775c0fac527bca0eade3feb61590da151e98b25f16bed61279cc31569b38aa
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://45775c0fac527bca0eade3feb61590da151e98b25f16bed61279cc31569b38aa
          exitCode: 0
          finishedAt: "2025-04-01T08:33:47Z"
          reason: Completed
          startedAt: "2025-04-01T08:33:47Z"
    - containerID: cri-o://7f7f59b4c28dd5cb7862d013fde7ba86facf63aca4831d746c7da10c9043f855
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://7f7f59b4c28dd5cb7862d013fde7ba86facf63aca4831d746c7da10c9043f855
          exitCode: 0
          finishedAt: "2025-04-01T08:34:28Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:28Z"
    - containerID: cri-o://337f1f300d696271fa8a7307977bd0c818fa686b72c5274a7d428151e3f85d4f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://337f1f300d696271fa8a7307977bd0c818fa686b72c5274a7d428151e3f85d4f
          exitCode: 0
          finishedAt: "2025-04-01T08:34:37Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:37Z"
    - containerID: cri-o://b89a5adfc2fdcee12ba5cdbf6da7d4147dcbca1fced03a0cc38a94f0438ccc7d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://b89a5adfc2fdcee12ba5cdbf6da7d4147dcbca1fced03a0cc38a94f0438ccc7d
          exitCode: 0
          finishedAt: "2025-04-01T08:34:45Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:44Z"
    - containerID: cri-o://52c8982bfa520317369faac8942d492dde5065448dbcbd4fd3abb9e9b2d6bd7d
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://52c8982bfa520317369faac8942d492dde5065448dbcbd4fd3abb9e9b2d6bd7d
          exitCode: 0
          finishedAt: "2025-04-01T08:34:56Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:56Z"
    - containerID: cri-o://207352090d24a8733e23ddf128c96dc3b70b3d0d70773ed612716777f1b960e4
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://207352090d24a8733e23ddf128c96dc3b70b3d0d70773ed612716777f1b960e4
          exitCode: 0
          finishedAt: "2025-04-01T08:34:56Z"
          reason: Completed
          startedAt: "2025-04-01T08:34:56Z"
    phase: Running
    podIP: 10.13.3.120
    podIPs:
    - ip: 10.13.3.120
    qosClass: Burstable
    startTime: "2025-04-01T08:33:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-31T20:17:59Z"
    generateName: multus-additional-cni-plugins-
    labels:
      app: multus-additional-cni-plugins
      component: network
      controller-revision-hash: 55469cc7f7
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"b314baad-5977-4282-beb7-52a961bad0ee"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus-additional-cni-plugins"}:
              .: {}
              f:args: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:initContainers:
            .: {}
            k:{"name":"bond-cni-plugin"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"cni-plugins"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/tuning/"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/sysctls"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"egress-router-binary-copy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"routeoverride-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"CNI_BIN_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"CNI_CONF_DIR"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"SLEEP"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"WHEREABOUTS_NAMESPACE"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
            k:{"name":"whereabouts-cni-bincopy"}:
              .: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cni-sysctl-allowlist"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"tuning-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:initContainerStatuses: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:05Z"
    name: multus-additional-cni-plugins-m87zl
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus-additional-cni-plugins
      uid: b314baad-5977-4282-beb7-52a961bad0ee
    resourceVersion: "67996"
    uid: ee811af9-d837-4fc6-ba66-778c92436c5b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-160
    containers:
    - args:
      - |
        trap : TERM INT; sleep infinity & wait
      command:
      - /bin/bash
      - -ec
      - --
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus-additional-cni-plugins
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/egress-router-cni/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imagePullPolicy: IfNotPresent
      name: egress-router-binary-copy
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    - command:
      - /bin/bash
      - -c
      - /entrypoint/cnibincopy.sh && cp -n /sysctls/allowlist.conf /host/etc/cni/tuning/
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/plugins/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/plugins/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imagePullPolicy: IfNotPresent
      name: cni-plugins
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /host/etc/cni/tuning/
        name: tuning-conf-dir
      - mountPath: /sysctls
        name: cni-sysctl-allowlist
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /bondcni/rhel8/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /bondcni/rhel9/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imagePullPolicy: IfNotPresent
      name: bond-cni-plugin
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/route-override/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/route-override/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imagePullPolicy: IfNotPresent
      name: routeoverride-cni
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    - command:
      - /entrypoint/cnibincopy.sh
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/whereabouts/bin/
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni-bincopy
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/os-release
        name: os-release
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    - command:
      - /bin/sh
      - -c
      - |
        #!/bin/sh

        set -u -e

        CNI_BIN_DIR=${CNI_BIN_DIR:-"/host/opt/cni/bin/"}
        WHEREABOUTS_KUBECONFIG_FILE_HOST=${WHEREABOUTS_KUBECONFIG_FILE_HOST:-"/etc/cni/net.d/whereabouts.d/whereabouts.kubeconfig"}
        CNI_CONF_DIR=${CNI_CONF_DIR:-"/host/etc/cni/net.d"}

        # Make a whereabouts.d directory (for our kubeconfig)

        mkdir -p $CNI_CONF_DIR/whereabouts.d
        WHEREABOUTS_KUBECONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.kubeconfig
        WHEREABOUTS_GLOBALCONFIG=$CNI_CONF_DIR/whereabouts.d/whereabouts.conf

        # ------------------------------- Generate a "kube-config"
        SERVICE_ACCOUNT_PATH=/var/run/secrets/kubernetes.io/serviceaccount
        KUBE_CA_FILE=${KUBE_CA_FILE:-$SERVICE_ACCOUNT_PATH/ca.crt}
        SERVICEACCOUNT_TOKEN=$(cat $SERVICE_ACCOUNT_PATH/token)
        SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-false}


        # Check if we're running as a k8s pod.
        if [ -f "$SERVICE_ACCOUNT_PATH/token" ]; then
          # We're running as a k8d pod - expect some variables.
          if [ -z ${KUBERNETES_SERVICE_HOST} ]; then
            error "KUBERNETES_SERVICE_HOST not set"; exit 1;
          fi
          if [ -z ${KUBERNETES_SERVICE_PORT} ]; then
            error "KUBERNETES_SERVICE_PORT not set"; exit 1;
          fi

          if [ "$SKIP_TLS_VERIFY" == "true" ]; then
            TLS_CFG="insecure-skip-tls-verify: true"
          elif [ -f "$KUBE_CA_FILE" ]; then
            TLS_CFG="certificate-authority-data: $(cat $KUBE_CA_FILE | base64 | tr -d '\n')"
          fi

          # Write a kubeconfig file for the CNI plugin.  Do this
          # to skip TLS verification for now.  We should eventually support
          # writing more complete kubeconfig files. This is only used
          # if the provided CNI network config references it.
          touch $WHEREABOUTS_KUBECONFIG
          chmod ${KUBECONFIG_MODE:-600} $WHEREABOUTS_KUBECONFIG
          cat > $WHEREABOUTS_KUBECONFIG <<EOF
        # Kubeconfig file for Multus CNI plugin.
        apiVersion: v1
        kind: Config
        clusters:
        - name: local
          cluster:
            server: ${KUBERNETES_SERVICE_PROTOCOL:-https}://${KUBERNETES_SERVICE_HOST}:${KUBERNETES_SERVICE_PORT}
            $TLS_CFG
        users:
        - name: whereabouts
          user:
            token: "${SERVICEACCOUNT_TOKEN}"
        contexts:
        - name: whereabouts-context
          context:
            cluster: local
            user: whereabouts
            namespace: ${WHEREABOUTS_NAMESPACE}
        current-context: whereabouts-context
        EOF

        # Kubeconfig file for Whereabouts CNI plugin.
        cat > $WHEREABOUTS_GLOBALCONFIG <<EOF
        {
          "datastore": "kubernetes",
          "kubernetes": {
            "kubeconfig": "/etc/kubernetes/cni/net.d/whereabouts.d/whereabouts.kubeconfig"
          },
          "reconciler_cron_expression": "30 4 * * *",
          "log_level": "debug"
        }
        EOF
        chmod 600 $WHEREABOUTS_GLOBALCONFIG

        else
          warn "Doesn't look like we're running in a kubernetes environment (no serviceaccount token)"
        fi

        # copy whereabouts to the cni bin dir
        # SKIPPED DUE TO FIPS COPY.
        # cp -f /whereabouts $CNI_BIN_DIR

        # ---------------------- end Generate a "kube-config".

        # Unless told otherwise, sleep forever.
        # This prevents Kubernetes from restarting the pod repeatedly.
        should_sleep=${SLEEP:-"true"}
        echo "Done configuring CNI.  Sleep=$should_sleep"
        while [ "$should_sleep" == "true"  ]; do
            sleep 1000000000000
        done
      env:
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: CNI_BIN_DIR
        value: /host/opt/cni/bin/
      - name: CNI_CONF_DIR
        value: /host/etc/cni/net.d
      - name: SLEEP
        value: "false"
      - name: WHEREABOUTS_NAMESPACE
        value: openshift-multus
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imagePullPolicy: IfNotPresent
      name: whereabouts-cni
      resources:
        requests:
          cpu: 10m
          memory: 10Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t7ms9
        readOnly: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: multus-ancillary-tools
    serviceAccountName: multus-ancillary-tools
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: ""
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: ""
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /etc/cni/tuning/
        type: DirectoryOrCreate
      name: tuning-conf-dir
    - configMap:
        defaultMode: 484
        name: default-cni-sysctl-allowlist
      name: cni-sysctl-allowlist
    - name: kube-api-access-t7ms9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://c966bfb4bab91c338c478e5dbb73c2af4b6e241c84caba20e445e88ba53ca97c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus-additional-cni-plugins
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:29Z"
    hostIP: 10.13.2.160
    initContainerStatuses:
    - containerID: cri-o://4abcc781ef0e67143e1389cf7340c12bc339ffbfa2d974d5bf1d6843c27a9dda
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:515f6839b24bf53bdc9f6370a2ba757c557f7688c0326e8a7513248fd992c8df
      lastState: {}
      name: egress-router-binary-copy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://4abcc781ef0e67143e1389cf7340c12bc339ffbfa2d974d5bf1d6843c27a9dda
          exitCode: 0
          finishedAt: "2025-03-31T20:18:20Z"
          reason: Completed
          startedAt: "2025-03-31T20:18:20Z"
    - containerID: cri-o://c6b097475d077d56c0f41b936cfe0bea54a5ab01313b4fc2c75e465417734652
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:36b299859349b06bb6dabfaa8229cb36f46589f30e8fe5269890913aa7672464
      lastState: {}
      name: cni-plugins
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://c6b097475d077d56c0f41b936cfe0bea54a5ab01313b4fc2c75e465417734652
          exitCode: 0
          finishedAt: "2025-03-31T20:20:09Z"
          reason: Completed
          startedAt: "2025-03-31T20:20:09Z"
    - containerID: cri-o://a14642cf17b5db7e71d03edf0d8090f238c5b4fe078f921bb855293bb2ab68a9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:03dc5c9352a08fae0cb8c5880eb31883d230091a26d417fc872fff516aafefab
      lastState: {}
      name: bond-cni-plugin
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://a14642cf17b5db7e71d03edf0d8090f238c5b4fe078f921bb855293bb2ab68a9
          exitCode: 0
          finishedAt: "2025-03-31T20:20:17Z"
          reason: Completed
          startedAt: "2025-03-31T20:20:17Z"
    - containerID: cri-o://247d43f0fcc7eaee355672dccf3ad2348d425c25af759e936dcd115e7f90610f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:5d1d461ff8418559d3af7aed948ac39251623c0bc52cf9ae33ad00e915cd15bf
      lastState: {}
      name: routeoverride-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://247d43f0fcc7eaee355672dccf3ad2348d425c25af759e936dcd115e7f90610f
          exitCode: 0
          finishedAt: "2025-03-31T20:20:25Z"
          reason: Completed
          startedAt: "2025-03-31T20:20:25Z"
    - containerID: cri-o://3fb49d2e4f37cc3f0794ed1e058e28578195cbec14e521690d5b410266b7ab28
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni-bincopy
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://3fb49d2e4f37cc3f0794ed1e058e28578195cbec14e521690d5b410266b7ab28
          exitCode: 0
          finishedAt: "2025-03-31T20:21:24Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:24Z"
    - containerID: cri-o://aa82a97734b1e6cd5e03a303495a5ae9a878b700583de5420a3085588059b2c7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:1e69260916585902da3f892747e3e2ed9c2392862b9df8c0bcd1e65983f73f4d
      lastState: {}
      name: whereabouts-cni
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: cri-o://aa82a97734b1e6cd5e03a303495a5ae9a878b700583de5420a3085588059b2c7
          exitCode: 0
          finishedAt: "2025-03-31T20:21:25Z"
          reason: Completed
          startedAt: "2025-03-31T20:21:25Z"
    phase: Running
    podIP: 10.13.2.160
    podIPs:
    - ip: 10.13.2.160
    qosClass: Burstable
    startTime: "2025-03-31T20:17:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.74/23"],"mac_address":"0a:58:0a:80:00:4a","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.74/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.74"
            ],
            "mac": "0a:58:0a:80:00:4a",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-03-31T20:32:51Z"
    generateName: multus-admission-controller-7bdf9cfb97-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 7bdf9cfb97
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4b0204b-958a-40e6-99d8-d5923b855a0e"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:32:51Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-0-150
      operation: Update
      subresource: status
      time: "2025-03-31T20:32:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:32:58Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.74"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:00Z"
    name: multus-admission-controller-7bdf9cfb97-mmgf2
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-7bdf9cfb97
      uid: e4b0204b-958a-40e6-99d8-d5923b855a0e
    resourceVersion: "67568"
    uid: 4e98d92d-ee36-4118-b2a3-7b7ad2e54a93
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-console,openshift-console-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a17b97cfe172f4e11aad61c493d2c582d837b7dccda397c88a4de983735cca95
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bxdgz
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bxdgz
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: multus-ac-dockercfg-frwjl
    nodeName: host-10-13-0-150
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-bxdgz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:32:57Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://7426544769da3c42ed78ce219ee90ae065ebdfba73bda0ec08d5c9749853bb49
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:32:59Z"
    - containerID: cri-o://1dc92d74ac005add2d24e8f2eeb7b8c17b9acdb0503709058e5834225c9537c7
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a17b97cfe172f4e11aad61c493d2c582d837b7dccda397c88a4de983735cca95
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a17b97cfe172f4e11aad61c493d2c582d837b7dccda397c88a4de983735cca95
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:32:59Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.128.0.74
    podIPs:
    - ip: 10.128.0.74
    qosClass: Burstable
    startTime: "2025-03-31T20:32:57Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: hosted-cluster-api-access
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.56/23"],"mac_address":"0a:58:0a:82:00:38","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.56/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.56"
            ],
            "mac": "0a:58:0a:82:00:38",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-03-31T20:33:00Z"
    generateName: multus-admission-controller-7bdf9cfb97-
    labels:
      app: multus-admission-controller
      component: network
      namespace: openshift-multus
      openshift.io/component: network
      pod-template-hash: 7bdf9cfb97
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cluster-autoscaler.kubernetes.io/safe-to-evict-local-volumes: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:namespace: {}
            f:openshift.io/component: {}
            f:pod-template-hash: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"e4b0204b-958a-40e6-99d8-d5923b855a0e"}: {}
        f:spec:
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"multus-admission-controller"}:
              .: {}
              f:command: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":9091,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/webhook"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"webhook-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.56"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:02Z"
    name: multus-admission-controller-7bdf9cfb97-mxrgk
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: multus-admission-controller-7bdf9cfb97
      uid: e4b0204b-958a-40e6-99d8-d5923b855a0e
    resourceVersion: "67668"
    uid: 38b9e53c-ac3f-4a86-946d-92453120b9e9
  spec:
    containers:
    - command:
      - /bin/bash
      - -c
      - |-
        set -euo pipefail
        exec /usr/bin/webhook \
          -bind-address=0.0.0.0 \
          -port=6443 \
          -tls-private-key-file=/etc/webhook/tls.key \
          -tls-cert-file=/etc/webhook/tls.crt \
          -metrics-listen-address=127.0.0.1:9091 \
          -alsologtostderr=true \
          -ignore-namespaces=openshift-etcd,openshift-console,openshift-ingress-canary,openshift-apiserver,openshift-apiserver-operator,openshift-authentication,openshift-authentication-operator,openshift-cloud-controller-manager,openshift-cloud-controller-manager-operator,openshift-cloud-credential-operator,openshift-cloud-network-config-controller,openshift-cluster-csi-drivers,openshift-cluster-machine-approver,openshift-cluster-node-tuning-operator,openshift-cluster-samples-operator,openshift-cluster-storage-operator,openshift-cluster-version,openshift-config-operator,openshift-console,openshift-console-operator,openshift-controller-manager,openshift-controller-manager-operator,openshift-dns,openshift-dns-operator,openshift-etcd-operator,openshift-image-registry,openshift-ingress,openshift-ingress-operator,openshift-insights,openshift-kube-apiserver,openshift-kube-apiserver-operator,openshift-kube-controller-manager,openshift-kube-controller-manager-operator,openshift-kube-scheduler,openshift-kube-scheduler-operator,openshift-kube-storage-version-migrator,openshift-kube-storage-version-migrator-operator,openshift-machine-api,openshift-machine-config-operator,openshift-marketplace,openshift-monitoring,openshift-multus,openshift-network-diagnostics,openshift-network-node-identity,openshift-network-operator,openshift-oauth-apiserver,openshift-operator-lifecycle-manager,openshift-ovn-kubernetes,openshift-route-controller-manager,openshift-service-ca-operator,openshift-user-workload-monitoring
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a17b97cfe172f4e11aad61c493d2c582d837b7dccda397c88a4de983735cca95
      imagePullPolicy: IfNotPresent
      name: multus-admission-controller
      ports:
      - containerPort: 9091
        name: metrics-port
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 50Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xbtt6
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/webhook/tls.key
      - --tls-cert-file=/etc/webhook/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/webhook
        name: webhook-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xbtt6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: multus-ac-dockercfg-frwjl
    nodeName: host-10-13-2-89
    nodeSelector:
      node-role.kubernetes.io/master: ""
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: multus-ac
    serviceAccountName: multus-ac
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: webhook-certs
      secret:
        defaultMode: 420
        secretName: multus-admission-controller-secret
    - name: kube-api-access-xbtt6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:00Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://d3a92f1d027c933a80a31f2830a95eb6528d1b90c445e7d53d9a9673b2dee3e3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:01Z"
    - containerID: cri-o://ec9bc0caa1bf8330d0e76789be8707c0ec8ec593980a446f06d5fa08ce6a8c25
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a17b97cfe172f4e11aad61c493d2c582d837b7dccda397c88a4de983735cca95
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:a17b97cfe172f4e11aad61c493d2c582d837b7dccda397c88a4de983735cca95
      lastState: {}
      name: multus-admission-controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:33:01Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.56
    podIPs:
    - ip: 10.130.0.56
    qosClass: Burstable
    startTime: "2025-03-31T20:33:00Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-31T20:17:59Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 869569b9db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9615fb5-7b7c-42c3-b1b4-5fe077d39185"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.89"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:03Z"
    name: multus-d44k9
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: f9615fb5-7b7c-42c3-b1b4-5fe077d39185
    resourceVersion: "67759"
    uid: 90acd8c6-ee60-4f03-b7b6-0d81f5447a75
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-89
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mg89g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-mg89g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:00Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:00Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://8f6a9fe6433a14aede1402415e7fe5a7f5f8e5e200c3b4fa021f0271403e8d20
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState:
        terminated:
          containerID: cri-o://227a73fb3b7137ea6cf0d0b21f0f1265fc3150697823d62d6a9bd1e989ccad59
          exitCode: 1
          finishedAt: "2025-03-31T20:20:58Z"
          reason: Error
          startedAt: "2025-03-31T20:20:13Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:20:59Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.13.2.89
    podIPs:
    - ip: 10.13.2.89
    qosClass: Burstable
    startTime: "2025-03-31T20:17:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-31T20:17:59Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 869569b9db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9615fb5-7b7c-42c3-b1b4-5fe077d39185"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.0.150"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: multus-lbpms
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: f9615fb5-7b7c-42c3-b1b4-5fe077d39185
    resourceVersion: "68213"
    uid: 8008c3b5-aea6-4739-ac2c-da835666a2a7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-0-150
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-fxk8h
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-fxk8h
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://fd82c349d205cf9ad96d06186e897055d4eae4191a7d75cd507a701249480d17
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState:
        terminated:
          containerID: cri-o://905ea75d49fd23813b72f4d15b537f787961a4aece410ccb42eeaa465a1cf0ff
          exitCode: 1
          finishedAt: "2025-03-31T20:21:11Z"
          reason: Error
          startedAt: "2025-03-31T20:20:26Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:11Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.13.0.150
    podIPs:
    - ip: 10.13.0.150
    qosClass: Burstable
    startTime: "2025-03-31T20:17:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-01T08:27:24Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 869569b9db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9615fb5-7b7c-42c3-b1b4-5fe077d39185"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:27:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.78"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:28:39Z"
    name: multus-px4hp
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: f9615fb5-7b7c-42c3-b1b4-5fe077d39185
    resourceVersion: "257166"
    uid: 51720a86-aaeb-4bf8-83d9-5703da408c58
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-78
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jwk6n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-jwk6n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:28:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://9f02b1224256e8d77452a0d2120688e794777023a831f1bd10eaabbc9286605f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:28:39Z"
    hostIP: 10.13.3.78
    phase: Running
    podIP: 10.13.3.78
    podIPs:
    - ip: 10.13.3.78
    qosClass: Burstable
    startTime: "2025-04-01T08:27:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-31T20:17:59Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 869569b9db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9615fb5-7b7c-42c3-b1b4-5fe077d39185"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:17:59Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.160"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: multus-rf82p
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: f9615fb5-7b7c-42c3-b1b4-5fe077d39185
    resourceVersion: "68069"
    uid: 184da46d-d29c-464e-9c87-47397c1d932f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-160
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mtwwq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-mtwwq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:21:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:17:59Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cb2477dcc1f1a0854d5755f426d364cdd135d72de27ea08e74b05938381274e9
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState:
        terminated:
          containerID: cri-o://9d57a8efac11066b30eaf10e83041129ac1abf98642b1892e1cbd50bfe4088d7
          exitCode: 1
          finishedAt: "2025-03-31T20:21:26Z"
          reason: Error
          startedAt: "2025-03-31T20:20:41Z"
      name: kube-multus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:21:29Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.13.2.160
    podIPs:
    - ip: 10.13.2.160
    qosClass: Burstable
    startTime: "2025-03-31T20:17:59Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-01T08:33:00Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 869569b9db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9615fb5-7b7c-42c3-b1b4-5fe077d39185"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.2.1"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:40Z"
    name: multus-s8z98
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: f9615fb5-7b7c-42c3-b1b4-5fe077d39185
    resourceVersion: "259537"
    uid: c050fd67-c658-43f6-952a-6848a1163687
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-1
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-26dr9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-2-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-26dr9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cf83c3a1aec15a1a9b75aa46396474b76c1977d8b8fb62bce22e6ca5ade1e18a
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:40Z"
    hostIP: 10.13.2.1
    phase: Running
    podIP: 10.13.2.1
    podIPs:
    - ip: 10.13.2.1
    qosClass: Burstable
    startTime: "2025-04-01T08:33:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-04-01T08:32:57Z"
    generateName: multus-
    labels:
      app: multus
      component: network
      controller-revision-hash: 869569b9db
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"f9615fb5-7b7c-42c3-b1b4-5fe077d39185"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-multus"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"DEFAULT_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"K8S_NODE"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"KUBERNETES_SERVICE_HOST"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"KUBERNETES_SERVICE_PORT"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"MULTUS_NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
                k:{"name":"RHEL8_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
                k:{"name":"RHEL9_SOURCE_DIRECTORY"}:
                  .: {}
                  f:name: {}
                  f:value: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:securityContext:
                .: {}
                f:privileged: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/entrypoint"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/certs"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/multus/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/etc/cni/net.d/multus.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
                k:{"mountPath":"/etc/kubernetes"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/etc/os-release"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/opt/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/host/run/multus/cni/net.d"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/hostroot"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/run/k8s.cni.cncf.io"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/run/netns"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/bin"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/cni/multus"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                k:{"mountPath":"/var/lib/kubelet"}:
                  .: {}
                  f:mountPath: {}
                  f:mountPropagation: {}
                  f:name: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:hostNetwork: {}
          f:hostPID: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"cni-binary-copy"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:name: {}
              f:name: {}
            k:{"name":"cnibin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"etc-kubernetes"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-k8s-cni-cncf-io"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-multus-certs"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-run-netns"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-bin"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-cni-multus"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"host-var-lib-kubelet"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"hostroot"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-conf-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"multus-daemon-config"}:
              .: {}
              f:configMap:
                .: {}
                f:defaultMode: {}
                f:items: {}
                f:name: {}
              f:name: {}
            k:{"name":"multus-socket-dir-parent"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"os-release"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
            k:{"name":"system-cni-dir"}:
              .: {}
              f:hostPath:
                .: {}
                f:path: {}
                f:type: {}
              f:name: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:32:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.13.3.120"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:25Z"
    name: multus-twdcw
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: multus
      uid: f9615fb5-7b7c-42c3-b1b4-5fe077d39185
    resourceVersion: "259428"
    uid: fe2c86ad-d17f-43a4-993d-03a44a5dfc9e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-120
    containers:
    - args:
      - |
        MULTUS_DAEMON_OPT=""
        /entrypoint/cnibincopy.sh; exec /usr/src/multus-cni/bin/multus-daemon $MULTUS_DAEMON_OPT
      command:
      - /bin/bash
      - -ec
      - --
      env:
      - name: RHEL8_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel8/bin/
      - name: RHEL9_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/rhel9/bin/
      - name: DEFAULT_SOURCE_DIRECTORY
        value: /usr/src/multus-cni/bin/
      - name: KUBERNETES_SERVICE_PORT
        value: "6443"
      - name: KUBERNETES_SERVICE_HOST
        value: api-int.ovhcpococp.trikorasolutions.net
      - name: MULTUS_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: K8S_NODE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imagePullPolicy: IfNotPresent
      name: kube-multus
      resources:
        requests:
          cpu: 10m
          memory: 65Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /entrypoint
        name: cni-binary-copy
      - mountPath: /host/etc/os-release
        name: os-release
      - mountPath: /host/etc/cni/net.d
        name: system-cni-dir
      - mountPath: /host/run/multus/cni/net.d
        name: multus-cni-dir
      - mountPath: /host/opt/cni/bin
        name: cnibin
      - mountPath: /host/run/multus
        mountPropagation: HostToContainer
        name: multus-socket-dir-parent
      - mountPath: /run/k8s.cni.cncf.io
        name: host-run-k8s-cni-cncf-io
      - mountPath: /run/netns
        mountPropagation: HostToContainer
        name: host-run-netns
      - mountPath: /var/lib/cni/bin
        name: host-var-lib-cni-bin
      - mountPath: /var/lib/cni/multus
        name: host-var-lib-cni-multus
      - mountPath: /var/lib/kubelet
        mountPropagation: HostToContainer
        name: host-var-lib-kubelet
      - mountPath: /hostroot
        mountPropagation: HostToContainer
        name: hostroot
      - mountPath: /etc/cni/multus/net.d
        name: multus-conf-dir
      - mountPath: /etc/cni/net.d/multus.d
        name: multus-daemon-config
        readOnly: true
      - mountPath: /etc/cni/multus/certs
        name: host-run-multus-certs
      - mountPath: /etc/kubernetes
        name: etc-kubernetes
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-kmpm2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    hostPID: true
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 10
    tolerations:
    - operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/cni/net.d
        type: Directory
      name: system-cni-dir
    - hostPath:
        path: /var/run/multus/cni/net.d
        type: Directory
      name: multus-cni-dir
    - hostPath:
        path: /var/lib/cni/bin
        type: Directory
      name: cnibin
    - hostPath:
        path: /etc/os-release
        type: File
      name: os-release
    - configMap:
        defaultMode: 484
        name: cni-copy-resources
      name: cni-binary-copy
    - hostPath:
        path: /run/multus
        type: DirectoryOrCreate
      name: multus-socket-dir-parent
    - hostPath:
        path: /run/k8s.cni.cncf.io
        type: ""
      name: host-run-k8s-cni-cncf-io
    - hostPath:
        path: /run/netns/
        type: ""
      name: host-run-netns
    - hostPath:
        path: /var/lib/cni/bin
        type: ""
      name: host-var-lib-cni-bin
    - hostPath:
        path: /var/lib/cni/multus
        type: ""
      name: host-var-lib-cni-multus
    - hostPath:
        path: /var/lib/kubelet
        type: ""
      name: host-var-lib-kubelet
    - hostPath:
        path: /
        type: ""
      name: hostroot
    - hostPath:
        path: /etc/cni/multus/net.d
        type: ""
      name: multus-conf-dir
    - configMap:
        defaultMode: 420
        items:
        - key: daemon-config.json
          path: daemon-config.json
        name: multus-daemon-config
      name: multus-daemon-config
    - hostPath:
        path: /etc/cni/multus/certs
        type: ""
      name: host-run-multus-certs
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: etc-kubernetes
    - name: kube-api-access-kmpm2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:34:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://cda24b1df99d5c49661795e40cb31424d0f8debc7a7d978f56318f84b14ed8ba
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:61950f82b95f506efc3bffc8557749c8964d77b30a4e7e356b884312b2dbc0f6
      lastState: {}
      name: kube-multus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:34:24Z"
    hostIP: 10.13.3.120
    phase: Running
    podIP: 10.13.3.120
    podIPs:
    - ip: 10.13.3.120
    qosClass: Burstable
    startTime: "2025-04-01T08:33:06Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.2.4/23"],"mac_address":"0a:58:0a:81:02:04","gateway_ips":["10.129.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.2.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.2.1"}],"ip_address":"10.129.2.4/23","gateway_ip":"10.129.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.2.4"
            ],
            "mac": "0a:58:0a:81:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-04-01T08:33:00Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 86f5c66f4b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4236620e-8f08-4797-b2c9-dfffba994338"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:33:00Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-1
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-04-01T08:35:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:35:45Z"
    name: network-metrics-daemon-2hq4z
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 4236620e-8f08-4797-b2c9-dfffba994338
    resourceVersion: "260065"
    uid: b631a797-3f5a-40dd-b078-2939f204c162
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-1
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79bv4
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-79bv4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-1
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-79bv4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:00Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://010a83f1648a110ac48045253ef619732616e765f93036f1747740fca528319c
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:35:45Z"
    - containerID: cri-o://12510d5150552c29f7c8a37e92da78877d9acdfa4e8e5081c1abf26cc16a218e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:35:45Z"
    hostIP: 10.13.2.1
    phase: Running
    podIP: 10.129.2.4
    podIPs:
    - ip: 10.129.2.4
    qosClass: Burstable
    startTime: "2025-04-01T08:33:33Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.129.0.3/23"],"mac_address":"0a:58:0a:81:00:03","gateway_ips":["10.129.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.129.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.129.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.129.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.129.0.1"}],"ip_address":"10.129.0.3/23","gateway_ip":"10.129.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.129.0.3"
            ],
            "mac": "0a:58:0a:81:00:03",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-03-31T20:18:01Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 86f5c66f4b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4236620e-8f08-4797-b2c9-dfffba994338"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:18:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-160
      operation: Update
      subresource: status
      time: "2025-03-31T20:21:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:24:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.129.0.3"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:06Z"
    name: network-metrics-daemon-b9r86
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 4236620e-8f08-4797-b2c9-dfffba994338
    resourceVersion: "68063"
    uid: 7f476cbd-5d10-4d24-bd66-4050f6da696f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-160
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2nq9
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z2nq9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-160
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-z2nq9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://614f30d93e1f3a37fb616dc7635144335dbafeef26e557598f40740d55f87aa3
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:28Z"
    - containerID: cri-o://195a75fbbd6728835a2e66371eb91c328ddcfe325e451e8508ac7560ed3b5698
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:28Z"
    hostIP: 10.13.2.160
    phase: Running
    podIP: 10.129.0.3
    podIPs:
    - ip: 10.129.0.3
    qosClass: Burstable
    startTime: "2025-03-31T20:18:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.131.0.4/23"],"mac_address":"0a:58:0a:83:00:04","gateway_ips":["10.131.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.131.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.131.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.131.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.131.0.1"}],"ip_address":"10.131.0.4/23","gateway_ip":"10.131.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.131.0.4"
            ],
            "mac": "0a:58:0a:83:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-04-01T08:27:24Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 86f5c66f4b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4236620e-8f08-4797-b2c9-dfffba994338"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:27:24Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-3-78
      operation: Update
      subresource: status
      time: "2025-04-01T08:28:47Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-04-01T08:29:36Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.131.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:29:46Z"
    name: network-metrics-daemon-hbcjf
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 4236620e-8f08-4797-b2c9-dfffba994338
    resourceVersion: "257614"
    uid: 82918b82-23d4-4b87-ab4e-c8c88ba54fa1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-78
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6f9r7
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6f9r7
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-3-78
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-6f9r7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:29:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:29:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:27:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://0321b21fc2e4ce9f15504131e73d53ab38549b686cbed5871d7e9ee4cbcdf664
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:29:45Z"
    - containerID: cri-o://07b86ac482cac98ea33f60b1fdb982fbf03b645a06057ba8780c722bfc321529
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:29:45Z"
    hostIP: 10.13.3.78
    phase: Running
    podIP: 10.131.0.4
    podIPs:
    - ip: 10.131.0.4
    qosClass: Burstable
    startTime: "2025-04-01T08:27:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.0.4/23"],"mac_address":"0a:58:0a:80:00:04","gateway_ips":["10.128.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.0.1"}],"ip_address":"10.128.0.4/23","gateway_ip":"10.128.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.0.4"
            ],
            "mac": "0a:58:0a:80:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-03-31T20:18:01Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 86f5c66f4b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4236620e-8f08-4797-b2c9-dfffba994338"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:18:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-0-150
      operation: Update
      subresource: status
      time: "2025-03-31T20:21:42Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:24:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:07Z"
    name: network-metrics-daemon-klgmr
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 4236620e-8f08-4797-b2c9-dfffba994338
    resourceVersion: "68225"
    uid: 88aa1502-26c3-4536-9cbc-c80bcf55ff2b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-0-150
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t2fzb
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-t2fzb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-0-150
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-t2fzb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://776bbab110c3d925888b6b901147153a1656e81a3bc83a3418c595007b0f2b72
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:39Z"
    - containerID: cri-o://6f08dae541c2b01bd59f896393f7449171ceb93df2599d40adae98e334a81902
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:38Z"
    hostIP: 10.13.0.150
    phase: Running
    podIP: 10.128.0.4
    podIPs:
    - ip: 10.128.0.4
    qosClass: Burstable
    startTime: "2025-03-31T20:18:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.130.0.4/23"],"mac_address":"0a:58:0a:82:00:04","gateway_ips":["10.130.0.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.130.0.1"},{"dest":"172.30.0.0/16","nextHop":"10.130.0.1"},{"dest":"169.254.169.5/32","nextHop":"10.130.0.1"},{"dest":"100.64.0.0/16","nextHop":"10.130.0.1"}],"ip_address":"10.130.0.4/23","gateway_ip":"10.130.0.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.130.0.4"
            ],
            "mac": "0a:58:0a:82:00:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-03-31T20:18:01Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 86f5c66f4b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4236620e-8f08-4797-b2c9-dfffba994338"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-03-31T20:18:01Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-2-89
      operation: Update
      subresource: status
      time: "2025-03-31T20:21:43Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-03-31T20:24:13Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.130.0.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-03-31T20:33:04Z"
    name: network-metrics-daemon-p9zv7
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 4236620e-8f08-4797-b2c9-dfffba994338
    resourceVersion: "67925"
    uid: c226602b-0e68-44cd-823d-35e9c53517a9
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-2-89
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lwq4c
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lwq4c
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-2-89
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-lwq4c
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:01Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:24:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-31T20:18:01Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://f6323306efe5964f01a477a4475c9dccab6f78e517d327ac1d15a41f2183b1cc
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:27Z"
    - containerID: cri-o://f62363efad1bf916c70f8d06c356c9cdbb02ea65e25ef70669d6112102fd909e
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-31T20:24:27Z"
    hostIP: 10.13.2.89
    phase: Running
    podIP: 10.130.0.4
    podIPs:
    - ip: 10.130.0.4
    qosClass: Burstable
    startTime: "2025-03-31T20:18:01Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      k8s.ovn.org/pod-networks: '{"default":{"ip_addresses":["10.128.2.4/23"],"mac_address":"0a:58:0a:80:02:04","gateway_ips":["10.128.2.1"],"routes":[{"dest":"10.128.0.0/14","nextHop":"10.128.2.1"},{"dest":"172.30.0.0/16","nextHop":"10.128.2.1"},{"dest":"169.254.169.5/32","nextHop":"10.128.2.1"},{"dest":"100.64.0.0/16","nextHop":"10.128.2.1"}],"ip_address":"10.128.2.4/23","gateway_ip":"10.128.2.1"}}'
      k8s.v1.cni.cncf.io/network-status: |-
        [{
            "name": "ovn-kubernetes",
            "interface": "eth0",
            "ips": [
                "10.128.2.4"
            ],
            "mac": "0a:58:0a:80:02:04",
            "default": true,
            "dns": {}
        }]
    creationTimestamp: "2025-04-01T08:32:57Z"
    generateName: network-metrics-daemon-
    labels:
      app: network-metrics-daemon
      component: network
      controller-revision-hash: 86f5c66f4b
      openshift.io/component: network
      pod-template-generation: "1"
      type: infra
    managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:target.workload.openshift.io/management: {}
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:component: {}
            f:controller-revision-hash: {}
            f:openshift.io/component: {}
            f:pod-template-generation: {}
            f:type: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"4236620e-8f08-4797-b2c9-dfffba994338"}: {}
        f:spec:
          f:affinity:
            .: {}
            f:nodeAffinity:
              .: {}
              f:requiredDuringSchedulingIgnoredDuringExecution: {}
          f:containers:
            k:{"name":"kube-rbac-proxy"}:
              .: {}
              f:args: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:ports:
                .: {}
                k:{"containerPort":8443,"protocol":"TCP"}:
                  .: {}
                  f:containerPort: {}
                  f:name: {}
                  f:protocol: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
              f:volumeMounts:
                .: {}
                k:{"mountPath":"/etc/metrics"}:
                  .: {}
                  f:mountPath: {}
                  f:name: {}
                  f:readOnly: {}
            k:{"name":"network-metrics-daemon"}:
              .: {}
              f:args: {}
              f:command: {}
              f:env:
                .: {}
                k:{"name":"NODE_NAME"}:
                  .: {}
                  f:name: {}
                  f:valueFrom:
                    .: {}
                    f:fieldRef: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:nodeSelector: {}
          f:priorityClassName: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext:
            .: {}
            f:runAsNonRoot: {}
            f:runAsUser: {}
          f:serviceAccount: {}
          f:serviceAccountName: {}
          f:terminationGracePeriodSeconds: {}
          f:tolerations: {}
          f:volumes:
            .: {}
            k:{"name":"metrics-certs"}:
              .: {}
              f:name: {}
              f:secret:
                .: {}
                f:defaultMode: {}
                f:secretName: {}
      manager: kube-controller-manager
      operation: Update
      time: "2025-04-01T08:32:57Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:k8s.ovn.org/pod-networks: {}
      manager: host-10-13-3-120
      operation: Update
      subresource: status
      time: "2025-04-01T08:34:18Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            f:k8s.v1.cni.cncf.io/network-status: {}
      manager: multus-daemon
      operation: Update
      subresource: status
      time: "2025-04-01T08:35:15Z"
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"10.128.2.4"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      manager: kubelet
      operation: Update
      subresource: status
      time: "2025-04-01T08:35:19Z"
    name: network-metrics-daemon-stgrn
    namespace: openshift-multus
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: network-metrics-daemon
      uid: 4236620e-8f08-4797-b2c9-dfffba994338
    resourceVersion: "259922"
    uid: 45483e9b-f353-4f49-8c87-124ab83fd032
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - host-10-13-3-120
    containers:
    - args:
      - --node-name
      - $(NODE_NAME)
      command:
      - /usr/bin/network-metrics
      env:
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imagePullPolicy: IfNotPresent
      name: network-metrics-daemon
      resources:
        requests:
          cpu: 10m
          memory: 100Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-znwbp
        readOnly: true
    - args:
      - --logtostderr
      - --secure-listen-address=:8443
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
      - --upstream=http://127.0.0.1:9091/
      - --tls-private-key-file=/etc/metrics/tls.key
      - --tls-cert-file=/etc/metrics/tls.crt
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imagePullPolicy: IfNotPresent
      name: kube-rbac-proxy
      ports:
      - containerPort: 8443
        name: https
        protocol: TCP
      resources:
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: FallbackToLogsOnError
      volumeMounts:
      - mountPath: /etc/metrics
        name: metrics-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-znwbp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: host-10-13-3-120
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 1000000000
    priorityClassName: openshift-user-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
    serviceAccount: metrics-daemon-sa
    serviceAccountName: metrics-daemon-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - operator: Exists
    volumes:
    - name: metrics-certs
      secret:
        defaultMode: 420
        secretName: metrics-daemon-secret
    - name: kube-api-access-znwbp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
        - configMap:
            items:
            - key: service-ca.crt
              path: service-ca.crt
            name: openshift-service-ca.crt
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:33:06Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:35:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-04-01T08:32:57Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: cri-o://89b369715cc9ce9ff8d4c659b653c35b45ab303078b82cbf20ffaac8f7a4500f
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:fedf41d919edda4f5513a26231124f55d8b6a65fe634b88ad0223fe7b3c26ec1
      lastState: {}
      name: kube-rbac-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:35:18Z"
    - containerID: cri-o://f21d177b35d248adeaab85e64ac92ec9283bf92f2ce87bb679921eedcc9fe5af
      image: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      imageID: quay.io/openshift-release-dev/ocp-v4.0-art-dev@sha256:ae742faa71b82fea65b5c79ef410ae1ba626de3f38e584627f330566ab210643
      lastState: {}
      name: network-metrics-daemon
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-04-01T08:35:18Z"
    hostIP: 10.13.3.120
    phase: Running
    podIP: 10.128.2.4
    podIPs:
    - ip: 10.128.2.4
    qosClass: Burstable
    startTime: "2025-04-01T08:33:06Z"
kind: PodList
metadata:
  resourceVersion: "718219"
