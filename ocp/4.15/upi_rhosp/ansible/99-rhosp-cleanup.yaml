---
- name: "Check required variables"
  hosts: "localhost"
  gather_facts: true

  tasks:
  - name: "Check required variables"
    ansible.builtin.assert:
      that:
        - ocp_cluster_name is defined and (ocp_cluster_name | length > 0)
      fail_msg:
        - "The name of the OCP cluster must be defined in the 'ocp_cluster_name' variable."


- name: "Read installation info from openshift installation"
  hosts: "ocp_services"
  gather_facts: true

  pre_tasks:
  - name: "Define variables"
    ansible.builtin.include_tasks:
      file: ../../ansible/tasks/set_ocp_install_dir.yaml

  tasks:
    - name: "Obtain the correct version of your RHCOS images"
      ansible.builtin.shell: |
          ./openshift-install coreos print-stream-json
      register: coreos_stream_res
      args:
        chdir: "{{ openshift_install_dir }}"

    - name: "RHCOS output"
      ansible.builtin.debug:
        var: coreos_stream_res.stdout
        verbosity: 2

    - name: "Set fact for coreos information"
      ansible.builtin.set_fact:
        coreos_stream_json: "{{ coreos_stream_res.stdout | from_json  }}"

    - name: "Set fact for the image location"
      ansible.builtin.set_fact:
        coreos_image_location: "{{ coreos_stream_json['architectures']['x86_64']['artifacts']['openstack']['formats']['qcow2.gz']['disk']['location']  }}"

    - name: "RHCOS image to use"
      ansible.builtin.debug:
        msg: 
        - "CoreOS ISO disk location: {{ coreos_image_location }}"

    - name: "Read bootstrap Ignition file signature"
      ansible.builtin.slurp:
        src: "{{ openshift_cluster_install_dir }}/bootstrap.ign.sig"
      register: bootstrap_sig_slurp

    - name: "Read master Ignition file signature"
      ansible.builtin.slurp:
        src: "{{ openshift_cluster_install_dir }}/master.ign.sig"
      register: master_sig_slurp

    - name: "Read worker Ignition file signature"
      ansible.builtin.slurp:
        src: "{{ openshift_cluster_install_dir }}/worker.ign.sig"
      register: worker_sig_slurp

    - name: "Read metadata file"
      ansible.builtin.slurp:
        src: "{{ openshift_cluster_install_dir }}/metadata.json"
      register: metadata_json_slurp

  post_tasks:

    - name: "Set CoreOS Image Location under localhost"
      ansible.builtin.set_fact:
        global_coreos_image_location: "{{ coreos_image_location }}"
      delegate_to: localhost
      delegate_facts: True

    - name: "Set CoreOS Image Location under localhost"
      ansible.builtin.set_fact:
        global_bootstrap_hash: "{{ bootstrap_sig_slurp.content | b64decode }}"
        global_master_hash: "{{ master_sig_slurp.content | b64decode }}"
        global_worker_hash: "{{ worker_sig_slurp.content | b64decode }}"
        global_metadata_json: "{{ metadata_json_slurp.content | b64decode }}"
      delegate_to: localhost
      delegate_facts: True

- name: "Setup OpenStack VMs"
  hosts: "localhost"
  gather_facts: true

  pre_tasks:
  - name: "Fetch Global variables"
    ansible.builtin.set_fact:
      coreos_image_location: "{{ hostvars['localhost']['global_coreos_image_location'] }}"
      coreos_image_filename: "{{ hostvars['localhost']['global_coreos_image_location'] | basename}}"
      bootstrap_hash: "{{ hostvars['localhost']['global_bootstrap_hash'] }}"
      master_hash: "{{ hostvars['localhost']['global_master_hash']}}"
      worker_hash: "{{ hostvars['localhost']['global_worker_hash'] }}"
      metadata_json: "{{ hostvars['localhost']['global_metadata_json'] }}"
    delegate_to: localhost

  - name: "RHCOS image to use"
    ansible.builtin.debug:
      msg: 
      - "CoreOS ISO disk location (coreos_image_location): {{ coreos_image_location }}"
      - "CoreOS ISO disk file name: {{ coreos_image_filename }}"

  - name: "Set metadata infra ID"
    ansible.builtin.set_fact:
      ocp_infra_id: "{{ metadata_json.infraID }}"

  tasks:
  - name: "Delete floating IPs"
    openstack.cloud.floating_ip:
      description: "ocp-{{ ocp_infra_id }}-{{ item }}"
      state: absent
    loop:
    - "api"
    - "ingress"
    - "bootstrap"

  - name: "Delete RHCOS image"
    openstack.cloud.image:
      image: "rhcos-{{ ocp_infra_id }}"
      state: absent
    when: delete_install is defined and (delete_install | bool)

...
