---
- name: "Collect information"
  import_playbook: _common_rhosp.yaml
  when: ocp_infra_id is not defined

- name: "Setup OpenStack Environment"
  hosts: "localhost"
  gather_facts: true

  tasks:


# Bootstrap Ignition Image
  - name: "Read the bootstrap ignition file as JSON"
    ansible.builtin.set_fact:
      bootstrap_ignition: "{{ lookup('file','/tmp/bootstrap-{{ ocp_infra_id }}.ign') | from_json }}"
      hostname_b64: "{{ (ocp_infra_id + '-bootstrap\n') | b64encode }}"
      # hostname_source: "data:text/plain;charset=utf-8;base64,{{ hostname_b64 }}"
      # bootstrap_ignition_hostname_file: { path: '/etc/hostname', 'mode': 420, 'contents': { 'source': 'data:text/plain;charset=utf-8;base64,{{ hostname_b64 }}',    },}

  # - name: "Print result"
  #   ansible.builtin.debug:
  #     msg:
  #     # - "bootstrap_ignition: {{ bootstrap_ignition }}"
  #     - "hostname_b64: {{ hostname_b64 }}"

  - name: "Read the bootstrap ignition file as JSON"
    ansible.builtin.set_fact:
      # hostname_source: "data:text/plain;charset=utf-8;base64,{{ hostname_b64 }}"
      bootstrap_ignition_hostname_file: { path: '/etc/hostname', 'mode': 420, 'contents': { 'source': 'data:text/plain;charset=utf-8;base64,{{ hostname_b64 }}',    },}

  - name: "Print result"
    ansible.builtin.debug:
      msg:
      - "bootstrap_ignition_hostname_file: {{ bootstrap_ignition_hostname_file }}"
  #     - "hostname_source: {{ hostname_b64 | b64decode }}"

  - name: "Print result"
    ansible.builtin.debug:
      msg:
      - "bootstrap_ignition.storage.files: {{ bootstrap_ignition.storage.files | to_nice_json }}"

  - name: "Add the bootstrap hostname"
    ansible.builtin.set_fact:
      bootstrap_ignition_files: "{{ bootstrap_ignition.storage.files + [bootstrap_ignition_hostname_file] }}"

  - name: "Print result"
    ansible.builtin.debug:
      msg:
      - "bootstrap_ignition_files: {{ bootstrap_ignition_files | to_nice_json }}"

  - name: "Update bootstrap ignition"
    ansible.utils.update_fact:
      updates:
        - path: bootstrap_ignition.storage.files
          value: "{{ bootstrap_ignition_files }}"
    register: updated_bootstrap_ignition

  - name: "Print result"
    ansible.builtin.debug:
      msg:
      - "updated_bootstrap_ignition: {{ updated_bootstrap_ignition }}"
      # - "updated_bootstrap_ignition.ignition: {{ updated_bootstrap_ignition.ignition }}"

  - name: "Generate updated bootstrap ignition"
    ansible.builtin.copy:
      content: "{{ updated_bootstrap_ignition }}"
      dest: "/tmp/bootstrap-{{ ocp_infra_id }}-updated.ign"


  - name: "Upload the Boostrap Ignition to Glance"
    openstack.cloud.image:
      name: "{{ rhosp_ocp_bootstrap_ign_image_name }}"
      filename: "/tmp/bootstrap-{{ ocp_infra_id }}-updated.ign"
      container_format: bare
      disk_format: raw
      state: present
      tags:
        - rhcos
        - "{{ ocp_infra_id }}"
        - openshift
        - "{{ ocp_cluster_id_tag }}"
    register: openstack_image_bootstrap_ign_upload_res
    when: openstack_image_bootstrap_ign_res.failed or openstack_image_bootstrap_ign_res.images | length == 0

  - name: "Check if the Boostrap Ignition image exists"
    openstack.cloud.image_info:
      image: "{{ rhosp_ocp_bootstrap_ign_image_name }}"
    register: openstack_image_bootstrap_ign_res
    failed_when: openstack_image_bootstrap_ign_res.failed or openstack_image_bootstrap_ign_res.images | length == 0

  - name: "Print result"
    ansible.builtin.debug:
      var: openstack_image_bootstrap_ign_res

  - name: "Set Bootstrap Ignition image Glance file location"
    ansible.builtin.set_fact:
      rhosp_ocp_bootstrap_ign_file: "{{ openstack_image_bootstrap_ign_res.images[0].file }}"

  - name: "Fetch Glance token"
    ansible.builtin.shell: |
      openstack token issue -c id -f value
    register: glance_token_res

  - name: "Set Glance token"
    ansible.builtin.set_fact:
      glance_token: "{{ glance_token_res.stdout }}"

  # - name: "Fetch Glance information"
  #   openstack.cloud.catalog_service_info:
  #     name: glance
  #   register: rhosp_catalog_glance_res

  # - name: "Print glance catalog"
  #   ansible.builtin.debug:
  #     var: rhosp_catalog_glance_res

  - name: "Fetch Glance Bootstrap URL"
    ansible.builtin.shell: |
      #$(openstack catalog show glance -f json | jq -r '.endpoints[] | select(.interface=="public").url')$(openstack image show -f value -c file {{ rhosp_ocp_bootstrap_ign_image_name }})
      openstack catalog show glance -f json | jq -r '.endpoints[] | select((.region=="{{ rhosp_region_name }}") and (.interface=="public")).url'
    register: rhosp_catalog_glance_res

  - name: "Set ignition file HTTPS location"
    ansible.builtin.set_fact:
      bootstrap_url: "{{ rhosp_catalog_glance_res.stdout }}/{{ rhosp_ocp_bootstrap_ign_file }}"

  - name: "Print bootstrap ignition file Glance URL"
    ansible.builtin.debug:
      msg: 
      - "bootstrap_url: {{ bootstrap_url }}"
      - "{{ api_dns_name }}: {{ lookup('community.general.dig', api_dns_name) }}"
      - "{{ api_dns_name }} ({{ openstack_fip_api_address }}): {{ lookup('community.general.dig', api_dns_name) }}"
      - "{{ apps_dns_name }} ({{ openstack_fip_apps_address }}): {{ lookup('community.general.dig', apps_dns_name) }}"

...
