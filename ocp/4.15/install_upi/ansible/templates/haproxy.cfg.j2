# Global settings
#---------------------------------------------------------------------
global
    maxconn     20000
    log         /dev/log local0 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    user        haproxy
    group       haproxy
    daemon

    # turn on stats unix socket
    stats socket /var/lib/haproxy/stats

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    mode                    http
    log                     global
    option                  httplog
    option                  dontlognull
    option http-server-close
    option forwardfor       except 127.0.0.0/8
    option                  redispatch
    retries                 3
    timeout http-request    10s
    timeout queue           1m
    timeout connect         10s
    timeout client          300s
    timeout server          300s
    timeout http-keep-alive 10s
    timeout check           10s
    maxconn                 20000

listen stats
    bind :9000
    mode http
    stats enable
    stats uri /

frontend ocp4_k8s_api_fe
    bind :6443
    #bind :6443 ssl crt /etc/pki/ca-trust/source/anchors/{{ ocp_cluster_name }}.{{ local_domain }}.pem
    default_backend ocp4_k8s_api_be
    mode tcp
    option tcplog

backend ocp4_k8s_api_be
    balance source
    mode tcp
{% if use_bootstrap is defined and use_bootstrap %}
{% for item in groups['ocp_bootstrap'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:6443 check
{% endfor %}
{% endif %}
{% for item in groups['ocp_control_plane'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:6443 check
{% endfor %}

frontend ocp4_machine_config_server_fe
    bind :22623
    default_backend ocp4_machine_config_server_be
    mode tcp
    option tcplog

backend ocp4_machine_config_server_be
    balance source
    mode tcp
{% if use_bootstrap is defined and use_bootstrap %}
{% for item in groups['ocp_bootstrap'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:22623 check
{% endfor %}
{% endif %}
{% for item in groups['ocp_control_plane'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:22623 check
{% endfor %}

frontend ocp4_http_ingress_traffic_fe
    bind :80
    default_backend ocp4_http_ingress_traffic_be
    mode tcp
    option tcplog

backend ocp4_http_ingress_traffic_be
    balance source
    mode tcp
{% if use_compute_nodes %}
{% for item in groups['ocp_compute_node'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:80 check
{% endfor %}
{% endif %}
{% for item in groups['ocp_control_plane'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:80 check
{% endfor %}

frontend ocp4_https_ingress_traffic_fe
    bind *:443
    #bind :443 ssl crt /etc/pki/ca-trust/source/anchors/{{ ocp_cluster_name }}.{{ local_domain }}.pem
    default_backend ocp4_https_ingress_traffic_be
    mode tcp
    option tcplog

backend ocp4_https_ingress_traffic_be
    balance source
    mode tcp
{% if use_compute_nodes %}
{% for item in groups['ocp_compute_node'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:443 check
{% endfor %}
{% endif %}
{% for item in groups['ocp_control_plane'] %}
    server      {{ item }} {{ hostvars[item].ansible_host }}:443 check
{% endfor %}
