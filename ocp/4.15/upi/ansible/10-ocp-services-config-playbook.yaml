---
- name: "Configure the OCP Services host"
  hosts: "ocp_services"
  gather_facts: true

  pre_tasks:
  - name: "Define variables"
    ansible.builtin.include_tasks:
      file: tasks/set_ocp_install_dir.yaml

  tasks:
  - name: "Install required packages"
    ansible.builtin.package:
      name: "{{ required_packages }}"
      state: present
    become: true
    when: skip_install is undefined or not (skip_install | bool)

  - name: Replace a localhost entry searching for a literal string to avoid escaping
    ansible.builtin.lineinfile:
      path: "/etc/httpd/conf/httpd.conf"
      search_string: "Listen 80"
      line: "Listen 8080"
    become: true

  # - name: Set haproxy_connect_any flag on
  #   ansible.posix.seboolean:
  #     name: haproxy_connect_any
  #     state: true
  #     persistent: true
  #   become: true

  # setsebool -P haproxy_connect_any 1
  # setsebool -P httpd_can_network_connect on
  # setsebool -P httpd_graceful_shutdown on
  # setsebool -P httpd_can_network_relay on
  # setsebool -P nis_enabled on
  - name: Set flags
    ansible.posix.seboolean:
      name: "{{ item.name }}"
      state: "{{ item.value }}"
      persistent: true
    become: true
    loop:
      # - {name: "haproxy_connect_any", value: true}
      - {name: "httpd_can_network_connect", value: true}
      - {name: "httpd_graceful_shutdown", value: true}
      - {name: "httpd_can_network_relay", value: true}
      - {name: "nis_enabled", value: true}

  # - name: "Set semanage ports"
  #   ansible.builtin.shell: |
  #       semanage port -a -t http_port_t -p tcp 6443
  #       semanage port -a -t http_port_t -p tcp 22623
  #       semanage port -a -t http_port_t -p tcp 1936
  #   become: true


  # - name: "Template haproxy configuration file"
  #   ansible.builtin.template:
  #     src: "haproxy.cfg.j2"
  #     dest: "/etc/haproxy/haproxy.cfg"
  #     backup: true
  #   become: true

  - name: "Enable and start the required services"
    ansible.builtin.service:
      name: "{{ item }}"
      enabled: yes
      state: restarted
    loop: "{{ required_services }}"
    become: true

  - name: "Open firewalld for required services"
    ansible.posix.firewalld:
      service: "{{ item }}"
      state: enabled
      permanent: true
      immediate: true
      offline: true
    loop: "{{ firewalld_services }}"
    become: true

  - name: "Open firewalld for required ports"
    ansible.posix.firewalld:
      port: "{{ item }}"
      state: enabled
      permanent: true
      immediate: true
      offline: true
    loop: "{{ firewalld_ports }}"
    become: true

  - name: "Create openshift install root directory"
    ansible.builtin.file:
      path: "/var/www/html/ocp4"
      state: directory
      mode: '0755'
      owner: apache
      group: apache
    become: true

  - name: "Copy installation"
    ansible.builtin.copy:
      src: "{{ ansible_env.HOME }}/{{ ocp_install_root_dir }}/{{ ocp_cluster_name }}/"
      dest: "/var/www/html/ocp4/"
      remote_src: true
      owner: apache
      group: apache
    become: true

  - name: "Delete the auth folder copied with the previous task"
    ansible.builtin.file:
      path: "/var/www/html/ocp4/auth"
      state: absent
    become: true
...
