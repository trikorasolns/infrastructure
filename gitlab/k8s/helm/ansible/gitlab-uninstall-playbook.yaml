---
- name: "Uninstall GitLab"
  hosts: "localhost"
  gather_facts: "{{ gathering_host_info | default('true') | bool == true }}"

  pre_tasks:
    - name: "Validate app_namespace"
      assert:
        that:
          - "app_namespace is defined"
        fail_msg: "app_namespace must be defined"
        success_msg: "Deploying into {{ app_namespace }} namespace"

  tasks:

    - name: "Uninstall Gitlab using Helm"
      kubernetes.core.helm:
        name: gitlab
        chart_ref: "{% if trikora_helm_project_dir is defined %}{{ trikora_helm_project_dir }}/charts/gitlab{% else %}trikorasolns/gitlab{% endif %}"
        release_namespace: "{{ app_namespace }}"
        state: absent

    - name: "Free the GLPI PV so they become available"
      ansible.builtin.shell: |
        kubectl patch pv {{ app_namespace }}-{{ item }}-pv -p '{"spec":{"claimRef": null}}'
      loop:
        - gitlab-var-opt-local
        - gitlab-var-log-local
        - gitlab-etc-local
      when: storage_class is defined and storage_class == 'local-storage'

    - name: "Patch the GLPI PV so they will be bound to the correct PVC"
      ansible.builtin.shell: |
        kubectl patch pv {{ app_namespace }}-{{ item }}-pv -p '{"spec":{"claimRef": {"name": "{{ item }}", "namespace": "{{ app_namespace }}"}}}'
      loop:
        - gitlab-var-opt-local
        - gitlab-var-log-local
        - gitlab-etc-local
      when: storage_class is defined and storage_class == 'local-storage'
...
