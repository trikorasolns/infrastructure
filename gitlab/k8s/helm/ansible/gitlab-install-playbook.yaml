---
- name: "Install Gitlab using Helm"
  hosts: "localhost"
  gather_facts: "{{ gathering_host_info | default('true') | bool == true }}"

  pre_tasks:
    - name: "Validate app_namespace"
      assert:
        that:
          - "app_namespace is defined"
        fail_msg: "app_namespace must be defined"
        success_msg: "Deploying into {{ app_namespace }} namespace"

    - name: "Validate gitlab_version"
      assert:
        that:
          - "app_version is defined and (app_version | length > 0)"
        fail_msg: "app_version must be defined"
        success_msg: "Using Trikora Helm from {{ app_version }}"

    - name: "Validate gitlab_version"
      assert:
        that:
          - "app_image_tag is defined and (app_image_tag | length > 0)"
        fail_msg: "app_image_tag must be defined"
        success_msg: "Using GitLab image tagged {{ app_image_tag }}"

  tasks:
    - name: "Set the helm file name"
      ansible.builtin.set_fact:
        target_values_file: "/tmp/helm-gitlab-gitlab-values.yaml"

    - name: "Template Gitlab Helm deployment files"
      ansible.builtin.template:
        src: "helm-gitlab-gitlab-values.yaml.j2"
        dest: "{{ target_values_file}}"
        mode: '0600'

    - name: "Deploy Gitlab version {{ app_version }}"
      kubernetes.core.helm:
        name: gitlab
        chart_ref: "{% if trikora_helm_project_dir is defined %}{{ trikora_helm_project_dir }}/charts/gitlab{% else %}trikorasolns/gitlab{% endif %}"
        release_namespace: "{{ app_namespace }}"
        wait: true
        replace: false
        values_files:
          - "{{ target_values_file}}"
      register: gitlab_helm_res 
...
