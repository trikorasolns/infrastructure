---
- name: "Install Grafana on GLPI"
  hosts: "localhost"
  gather_facts: "{{ gathering_host_info | default('true') | bool == true }}"

  pre_tasks:
    - name: "Include project default vars"
      ansible.builtin.include_vars: "{{ file_to_include }}"
      loop:
        - defaults/main.yaml
      loop_control:
        loop_var: file_to_include

    - name: "Validate variables"
      assert:
        that:
          - "app_namespace is defined and (app_namespace | length > 0)"
          - "glpi_version is defined and (glpi_version | length > 0)"
          - "k8s_host is defined and (k8s_host | length > 0)"
        fail_msg: 
          - "app_namespace must be defined with the kubernetes namespace"
          - "glpi_version must be defined with the GLPI version"
          - "k8s_host must be defined with the kubernetes host"

    - name: Set facts from k8s host
      ansible.builtin.set_fact:
        k8s:
          pv_root_folder: "{{ hostvars[k8s_host]['k8s']['pv_root_folder'] }}"

  tasks:

    - name: "Template PV file"
      ansible.builtin.template:
        src: "../helm/pv-grafana-hostPath.yaml.j2"
        dest: "/tmp/pv-grafana-hostPath.yaml"

    - name: "Apply PV file"
      kubernetes.core.k8s:
        state: present
        src: "/tmp/pv-grafana-hostPath.yaml"

    - name: "Template Grafana Helm values file"
      ansible.builtin.template:
        src: ../helm/helm-grafana-values.yaml.j2
        dest: /tmp/helm-grafana-values.yaml

    - name: "Deploy Grafana with Helm"
      kubernetes.core.helm:
        name: grafana
        chart_ref: "{{ trikora_helm_project_dir }}/grafana"
        release_namespace: "{{ app_namespace }}"
        wait: true
        values_files:
          - /tmp/helm-grafana-values.yaml
      register: grafana_helm_res 

    - name: Print Grafana Helm Chart output
      ansible.builtin.debug:
        msg:
          - "grafana_helm_res: {{ grafana_helm_res }}"
...
